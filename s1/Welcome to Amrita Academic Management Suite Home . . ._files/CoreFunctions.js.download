/**
 * Custom Date class implemented in Hmoscore project
 * It contains API which return client date and server date
 * Build in Date API is prototyped using this class.
 * Now onwards When developer called getTime() from javascript it will return server date in millisecond only
 * If any developer want to get client date in millisecond they must call getTimeClient() method from javascript.
 */

/*** Start of addition by Ramesh to support Date Constructor override ***/
document.domain="amrita.edu";

// Save the default constructor, Date and prototype for restoring back later 
var _DefaultDateConstructor = Date.prototype.constructor;
var _Date = Date;
_Date.prototype = Date.prototype;

// Constructor
Date = function () {
  var date = new _DefaultDateConstructor();
  if (arguments === undefined || arguments.length === 0) {
  }
  else {
    date.args = arguments;
    if (arguments.length == 1) {
    	
            if (typeof arguments[0] === "string") { 
                date.setTime(_Date.parse(arguments[0]));
            }
            else if (typeof arguments[0] === "number") {
                date.setTime(arguments[0]);
            }
            else if (typeof arguments[0] === "object" && arguments[0] instanceof Date){
            	date.setTime(arguments[0].getTime());
            }
    }
    else if (arguments.length > 1) {
    	// reset the date to 1 before setting month, so that setting Month later does not have side effect if the current day of month is not there in that month being set.
    	date.setDate(1);
        for (var i = 0; i < arguments.length; i++) {
            switch (i) {
                case 0:
                    date.setFullYear(arguments[i]);
                    break;
                case 1:
                    date.setMonth(arguments[i]);
                    break;
                case 2:
                    date.setDate(arguments[i]);
                    break;
                case 3:
                    date.setHours(arguments[i]);
                    break;
                case 4:
                    date.setMinutes(arguments[i]);
                    break;
                case 5:
                    date.setSeconds(arguments[i]);
                    break;
                case 6:
                    date.setMilliseconds(arguments[i]);
                    break;
            }
        }        
    }
    
    //Set only passed arguments to the date
    if(arguments.length == 1){
  	  // do nothing
    }else if(arguments.length == 2){  //given year and month clear date,hour,min,sec,ms	  
  	  date.setDate(1);
  	  date.setHours(0);
 	  date.setMinutes(0);
 	  date.setSeconds(0);
 	  date.setMilliseconds(0);
  	  
    }else if(arguments.length == 3){ //given year,month,date clear hour,min,sec,ms  
  	  date.setHours(0);
  	  date.setMinutes(0);
  	  date.setSeconds(0);
  	  date.setMilliseconds(0);
  	  
    }else if(arguments.length == 4){ //given year,month,date,hour clear min,sec,ms
  	  date.setMinutes(0);
  	  date.setSeconds(0);
  	  date.setMilliseconds(0);
  	  
    }else if(arguments.length == 5){ //given year,month,date,hour,min clear sec,ms
  	  date.setSeconds(0);
  	  date.setMilliseconds(0);
  	  
    }else if(arguments.length == 6){ //given year,month,date,hour,min,sec clear ms
  	  date.setMilliseconds(0);
  	  
    } 
  }
 
  //Storing back the original prototype since date.prototype gives undefined
  date.prototype = Date.prototype;
  return date;
}

//Static methods are overridden after this new change hence storing back the original
Date.prototype = _Date.prototype;
Date.now = _Date.now;
Date.UTC = _Date.UTC;
Date.parse = _Date.parse;
//

Date.prototype.args=null;
/*** End of addition by Ramesh to support Date Constructor override ***/

Date.prototype.thisdate=null;

// Function used to set server Date to date object in javascript.
Date.prototype.initDate=function() {
    if (this.thisdate == null) {
	// Date Constructor - handle arguments properly -- Ramesh
        if (this.args == null) {
          var serverdateinmills = getServerDate();
          this.thisdate = new Date();
          this.thisdate.setTime(serverdateinmills);
        }
        else {
            this.thisdate = this;
        }
    }else{
    	
    }
}

// This function return date from server using XMLHTTP request Added by Dhania G 28/07/2008
function getServerDate(){
	var xmlHttpReqForServerDate; 
    if(window.XMLHttpRequest)
      {
       xmlHttpReqForServerDate=new XMLHttpRequest();
     }
	 var locationUrl = location.href;
	 var splitVal = locationUrl.split('/');
	 var url = splitVal[0]+ "/" +splitVal[1]+ "/" +splitVal[2]+ "/" +splitVal[3];
	 xmlHttpReqForServerDate.open("GET",url+"/HisAppServlet?action=HMOSCORE-GET_SERVER_DATE",false);
	 xmlHttpReqForServerDate.send(null);
	 if(xmlHttpReqForServerDate.readyState==4)
	    {
	       if(xmlHttpReqForServerDate.status==200)
	       {
	    	      var dateObj = xmlHttpReqForServerDate.responseXML.getElementsByTagName("curdate")[0].childNodes[0].nodeValue;	    	      
	    	      return dateObj;	    	     
		   }else{ 
		        alert("Error loading page"+ xmlHttpReqForServerDate.status + ":"+xmlHttpReqForServerDate.statusText);
		        return null;
		   }
	   }
}

//Function return the current server date. 
function getCurrentDate(){
	var curDate = new Date();
	var curYear=parseInt(curDate.getFullYear());
	var curMonth=parseInt(curDate.getMonth()) + 1;
	var curDay=parseInt(curDate.getDate());	 
	var today = curDay + "/" + curMonth + "/" + curYear;	 
	var format = getClientDateFormat();
	if( format != null && (format.toLowerCase()=="mm/dd/yyyy" || format.toLowerCase()=="mm-dd-yyyy") ){
		today = curMonth + "/" + curDay + "/" + curYear;
	}
	return today;
	
}

// Function return the current server date time 
function getCurrentDateTime(){
	var curDate = new Date();
	var curYear=parseInt(curDate.getFullYear());
	var curMonth=parseInt(curDate.getMonth()) + 1;
	var curDay=parseInt(curDate.getDate());	 
	var hrs = parseInt(curDate.getHours());
	var mint = parseInt(curDate.getMinutes());
	if(mint < 10){
		mint="0"+mint;
	}	
	var today = curDay + "/" + curMonth + "/" + curYear +" "+ hrs + ":" + mint;	 
	var format = getClientDateFormat();
	if( format != null && (format.toLowerCase()=="mm/dd/yyyy" || format.toLowerCase()=="mm-dd-yyyy") ){
		today = curMonth + "/" + curDay + "/" + curYear +" "+ hrs + ":" + mint;
	}
	return today;
	
}

// Function which return client date in millisecond since midnight Jan 1, 1970
Date.prototype.getTimeClient=Date.prototype.getTime;

// Function which return server date in millisecond since midnight Jan 1, 1970
Date.prototype.getTime = function() {
    this.initDate();
    return this.thisdate.getTimeClient();
}

//Function which return the year, as a four-digit number, from client Date object
Date.prototype.getFullYearClient=Date.prototype.getFullYear;

//Function which return the year, as a four-digit number, from server Date object
Date.prototype.getFullYear = function() {
     this.initDate();
     return this.thisdate.getFullYearClient();
}

//Function which return the month from a client Date object (from 0-11)
Date.prototype.getMonthClient=Date.prototype.getMonth;

//Function which return the month from a server Date object (from 0-11)
Date.prototype.getMonth = function() {
     this.initDate();
     return this.thisdate.getMonthClient();
}

//Function which return the day of the month  from a client Date object (from 1-31)
Date.prototype.getDateClient=Date.prototype.getDate;

//Function which return the day of the month  from a server Date object (from 1-31)
Date.prototype.getDate = function() {
     this.initDate();
     return this.thisdate.getDateClient();
}

//Function which return the day of the week  from a client Date object (from 0-6 ie,0 = Sunday, ... , 6 = Saturday) 
Date.prototype.getDayClient=Date.prototype.getDay;

//Function which return day of the week  from a server Date object (from 0-6 ie, 0 = Sunday, ... , 6 = Saturday)
Date.prototype.getDay = function() {
     this.initDate();
     return this.thisdate.getDayClient();
}

// Function which returns the hour of a client Date object (from 0-23)
Date.prototype.getHoursClient = Date.prototype.getHours;

//Function which returns the hour of a server Date object (from 0-23)
Date.prototype.getHours = function(){
	this.initDate();
	return this.thisdate.getHoursClient();
}

//Function which returns the minutes  of a client Date object (from  0-59)
Date.prototype.getMinutesClient = Date.prototype.getMinutes;

//Function which returns the minutes  of a server Date object (from 0-59)
Date.prototype.getMinutes = function(){
	this.initDate();
	return this.thisdate.getMinutesClient();
}

//Function which returns the seconds of a client Date object (from  0-59)
Date.prototype.getSecondsClient = Date.prototype.getSeconds;

//Function which returns the seconds of a server Date object (from 0-59)
Date.prototype.getSeconds = function(){
	this.initDate();
	return this.thisdate.getSecondsClient();
}

//Function which returns the milliseconds of a client Date object (from  0-59)
Date.prototype.getMillisecondsClient = Date.prototype.getMilliseconds;

//Function which returns the milliseconds of a server Date object (from 0-59)
Date.prototype.getMilliseconds = function(){
	this.initDate();
	return this.thisdate.getMillisecondsClient();
}

//Function which returns the year from client date object, as a two-digit or a three/four-digit number, depending on the browser. Use getFullYearClient() instead !!
Date.prototype.getYearClient = Date.prototype.getYear;

//Function which returns the year  from server date object, as a two-digit or a three/four-digit number, depending on the browser. Use getFullYear() instead !!
Date.prototype.getYear = function(){
	this.initDate();
	return this.thisdate.getYearClient();
}

//Function which returns the date portion of a client Date object in readable form toGMTStringClient()
Date.prototype.toDateStringClient = Date.prototype.toDateString;

//Function which returns the date portion of a server Date object in readable form
Date.prototype.toDateString = function(){
	this.initDate();
	return this.thisdate.toDateStringClient();
}

//Function which Converts a client Date object, according to Greenwich time, to a string. Use toUTCStringClient() instead !! 
Date.prototype.toGMTStringClient = Date.prototype.toGMTString;

//Function which Converts a server Date object, according to Greenwich time, to a string. Use toUTCString() instead !!
Date.prototype.toGMTString = function(){
	this.initDate();
	return this.thisdate.toGMTStringClient();
}

//Function which Converts a client Date object,according to local time, to a string and returns the date portion 
Date.prototype.toLocaleDateStringClient = Date.prototype.toLocaleDateString;

//Function which Converts a server Date object, according to local time, to a string and returns the date portion
Date.prototype.toLocaleDateString = function(){
	this.initDate();
	return this.thisdate.toLocaleDateStringClient();
}

//Function which Converts a client Date object,according to local time, to a string and returns the time portion 
Date.prototype.toLocaleTimeStringClient = Date.prototype.toLocaleTimeString;

//Function which Converts a server Date object,according to local time, to a string and returns the time portion
Date.prototype.toLocaleTimeString = function(){
	this.initDate();
	return this.thisdate.toLocaleTimeStringClient();
}

//Function which Converts a client Date object,according to local time, to a string 
Date.prototype.toLocaleStringClient = Date.prototype.toLocaleString;

//Function which Converts a server Date object,according to local time, to a string
Date.prototype.toLocaleString = function(){
	this.initDate();
	return this.thisdate.toLocaleStringClient();
}

//Function which Converts a client Date object  to a string
Date.prototype.toStringClient = Date.prototype.toString;

//Function which Converts a server Date object to a string
Date.prototype.toString = function(){
	this.initDate();
	return this.thisdate.toStringClient();
}

//Function which returns the time portion of a client Date object in readable 
Date.prototype.toTimeStringClient = Date.prototype.toTimeString;

//Function which returns the time portion of a server Date object in readable 
Date.prototype.toTimeString = function(){
	this.initDate();
	return this.thisdate.toTimeStringClient();
}

//Function which returns the time portion of a client Date object in readable 
Date.prototype.toUTCStringClient = Date.prototype.toUTCString;

//Function which returns the time portion of a server Date object in readable 
Date.prototype.toUTCString = function(){
	this.initDate();
	return this.thisdate.toUTCStringClient();
}

//Function which Takes a client date and returns the number of milliseconds since midnight of January 1, 1970 according to universal time 
Date.prototype.UTCClient = Date.prototype.UTC;

//Function which Takes a server date and returns the number of milliseconds since midnight of January 1, 1970 according to universal time 
Date.prototype.UTC = function(){
	this.initDate();
	return this.thisdate.UTCClient();
}


//Function which returns the milliseconds of a client Date object (from  0-999)
Date.prototype.getTimezoneOffsetClient = Date.prototype.getTimezoneOffset;

//Function which returns the milliseconds of a server Date object (from 0-999)
Date.prototype.getTimezoneOffset = function(){
	this.initDate();
	return this.thisdate.getTimezoneOffsetClient();
}

//Function which returns the day of the month  of a client Date object according to universal time (from 1-31)
Date.prototype.getUTCDateClient = Date.prototype.getUTCDate;

//Function which returns the day of the month  of a server Date object according to universal time (from 1-31)
Date.prototype.getUTCDate = function(){
	this.initDate();
	return this.thisdate.getUTCDateClient();
}

//Function which returns the day of the week from a client Date object according to universal time (from 0-6)
Date.prototype.getUTCDayClient = Date.prototype.getUTCDay;

//Function which returns the day of the week from a server Date object according to universal time (from 0-6)
Date.prototype.getUTCDay = function(){
	this.initDate();
	return this.thisdate.getUTCDayClient();
}

//Function which returns the month from a client Date object according to universal time (from 0-11)
Date.prototype.getUTCMonthClient = Date.prototype.getUTCMonth;

//Function which returns the month from a server Date object according to universal time (from 0-11)
Date.prototype.getUTCMonth = function(){
	this.initDate();
	return this.thisdate.getUTCMonthClient();
}

//Function which returns the four-digit year from a client Date object according to universal time
Date.prototype.getUTCFullYearClient = Date.prototype.getUTCFullYear;

//Function which returns the four-digit year from a server Date object according to universal time
Date.prototype.getUTCFullYear = function(){
	this.initDate();
	return this.thisdate.getUTCFullYearClient();
}

//Function which returns the hour of a client Date object according to universal time (from 0-23)
Date.prototype.getUTCHoursClient = Date.prototype.getUTCHours;

//Function which returns the hour of a server Date object according to universal time (from 0-23)
Date.prototype.getUTCHours = function(){
	this.initDate();
	return this.thisdate.getUTCHoursClient();
}

//Function which returns the minutes of a client Date object according to universal time (from 0-59)
Date.prototype.getUTCMinutesClient = Date.prototype.getUTCMinutes;

//Function which returns the minutes of a server Date object according to universal time (from 0-59)
Date.prototype.getUTCMinutes = function(){
	this.initDate();
	return this.thisdate.getUTCMinutesClient();
}


//Function which returns the seconds of a client Date object according to universal time (from 0-59)
Date.prototype.getUTCSecondsClient = Date.prototype.getUTCSeconds;

//Function which returns the seconds of a server Date object according to universal time (from 0-59)
Date.prototype.getUTCSeconds = function(){
	this.initDate();
	return this.thisdate.getUTCSecondsClient();
}

//Function which returns the milliseconds of a client Date object according to universal time (from 0-999)
Date.prototype.getUTCMillisecondsClient = Date.prototype.getUTCMilliseconds;

//Function which returns the milliseconds of a server Date object according to universal time (from 0-999)
Date.prototype.getUTCMilliseconds = function(){
	this.initDate();
	return this.thisdate.getUTCMillisecondsClient();
}
///////////////////////////////////////////////////////////////////////
//     This Button Script was designed by Erik Arvidsson for WebFX   //
//                                                                   //
//     For more info and examples see: http://webfx.eae.net/         //
//     or send mail to erik@eae.net                                  //
//                                                                   //
//     Feel free to use this code as lomg as this disclaimer is      //
//     intact.                                                       //
///////////////////////////////////////////////////////////////////////

document.onmouseover = doOver;
document.onmouseout  = doOut;
document.onmousedown = doDown ;
document.onmouseup   = doUp;

function getEventSource(eventobj) {
  if(document.all) { 
    return window.event.srcElement;
  }
  else {
    return eventobj.target;
  }
}

//var Nav4 = ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))

  function doOver (evt){
	evtObj = getEventSource (evt);
	
	
	
	var toEl = getReal(evtObj, "className", "coolButton");
	
	var fromEl = getReal(evtObj, "className", "coolButton");
	if (toEl == fromEl) return;
	var el = toEl;
	
//	alert(el);
	
//	var cDisabled = el.getAttribute("cDisabled");
	var cDisabled = el.cDisabled;
//	alert(cDisabled);
	cDisabled = (cDisabled != null); // If CDISABLED atribute is present
	
	if (el.className == "coolButton")
		el.onselectstart = new Function("return false");
	
	if ((el.className == "coolButton") && !cDisabled) {
		makeRaised(el);
		//makeGray(el,false);
	}
}

 function doOut (evt) {
	var evtObj = getEventSource (evt);
	
	
	var toEl = getReal(evtObj, "className", "coolButton");
	var fromEl = getReal(evtObj, "className", "coolButton");
	if (toEl == fromEl) return;
	var el = fromEl;

//	var cDisabled = el.getAttribute("cDisabled");
	var cDisabled = el.cDisabled;
	cDisabled = (cDisabled != null); // If CDISABLED atribute is present

	var cToggle = el.cToggle;
	toggle_disabled = (cToggle != null); // If CTOGGLE atribute is present

	if (cToggle && el.value) {
		makePressed(el);
		//makeGray(el,true);
	}
	else if ((el.className == "coolButton") && !cDisabled) {
		makeFlat(el);
		//makeGray(el,true);
	}

}

function doDown(evt) {
	var evtObj = getEventSource (evt);
	
	
	
	el = getReal(evtObj, "className", "coolButton");
	
	var cDisabled = el.cDisabled;
	cDisabled = (cDisabled != null); // If CDISABLED atribute is present
	
	if ((el.className == "coolButton") && !cDisabled) {
		makePressed(el)
	}
}

function doUp(evt) {
	var evtObj = getEventSource (evt);
	
	//alert (evt);
	el = getReal(evtObj, "className", "coolButton");
	
	var cDisabled = el.cDisabled;
	cDisabled = (cDisabled != null); // If CDISABLED atribute is present
	
	if ((el.className == "coolButton") && !cDisabled) {
		makeRaised(el);
	}
}


function getReal(el, type, value) {
	temp = el;
	while ((temp != null) && (temp.tagName != "BODY")) {
		if (eval("temp." + type) == value) {
			el = temp;
			return el;
		}
		temp = temp.parentElement;
	}
	return el;
}

function makeFlat(el) {
	with (el.style) {
		background = "";
		//border = "0px solid buttonface";
		border = "0px ";
		padding      = "1px";
	}
}

function makeRaised(el) {
	with (el.style) {
		borderLeft   = "1px solid buttonhighlight";
		borderRight  = "1px solid buttonshadow";
		borderTop    = "1px solid buttonhighlight";
		borderBottom = "1px solid buttonshadow";
		padding      = "1px";
	}
}

function makePressed(el) {
	with (el.style) {
		borderLeft   = "0px ";
		borderRight  = "0px ";
		borderTop    = "0px ";
		borderBottom = "0px ";
		paddingTop    = "2px";
		paddingLeft   = "2px";
		paddingBottom = "0px";
		paddingRight  = "0px";
		
	}
}
	

document.write("<style>");
document.write(".coolBar{border-top: 1px solid buttonhighlight;	border-left: 1px solid buttonhighlight;	border-bottom: 1px solid ; border-right: 1px solid ; padding: 2px; font: menu;}");

// changed on 28-04-2006, as per the request to remove label like appearence of coolbuttons  --Hari
// given  style similar to .input tag
//document.write(".coolButton {border: 0px  solid buttonface; font-family:arial,helvetica; font-size:12px; font-weight:bold;background-color:transparent; height:20px;width:auto; padding: 1px; text-align: center; cursor: hand;}");
//document.write(".coolButton {font-family: Arial, Helvetica, sans-serif;font-size: 11px;font-weight: normal;}");




document.write("</style>");



var _isIExporer11 = false;
if(navigator.appName.indexOf("Netscape") != -1 && navigator.userAgent.indexOf("Trident") >= 0 && window.navigator.pointerEnabled == true){
	_isIExporer11 = true;
 }

if(_isIExporer11){
    if (typeof Element.prototype.attachEvent === 'undefined') {
       Element.prototype.attachEvent = function (e, callback) 
         {
    	   e = e.replace('on','');
    	   return this.addEventListener(e, callback,false);
        };
   }
   if (typeof Element.prototype.detachEvent === 'undefined') {
        Element.prototype.detachEvent = function (e, callback) {
        e = e.replace('on','');
       return this.removeEventListener(e, callback,false);
     };
   }
}

/* For cross browser */
function removeEventHandler(elem,eventType,handler) {
	 if (elem.removeEventListener) 
	    elem.removeEventListener (eventType,handler,false);
	 if (elem.detachEvent)
	    elem.detachEvent ('on'+eventType,handler); 
}

function addEventHandler(elem,eventType,handler) {
	 if (elem.addEventListener)
	     elem.addEventListener (eventType,handler,false);
	 else if (elem.attachEvent)
	     elem.attachEvent ('on'+eventType,handler); 
}
/*Common Functions His Jsp Pages*/
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/** 
 * Definition of global attached to window properties <br/>
 */ 
    (function() {
      nalert = window.alert;
    })();

/**
 * Factory method for calling alert(). 
 * if alert is calling from a parent window and the popup alreday opened case the alert is behind the popup.
 * This issue resolved.
 */ 
    (function(proxy) {
          proxy.alert = function () {
          var message = (!arguments[0]) ? 'null': arguments[0];
          if(typeof popup != "undefined" && !popup.closed ){
  		   	popup.alert(message);
  	 	  }else{
  	 		nalert(message);
  	      }             
      };
   })(this);
   
  /** 
     * Definition of global attached to window properties <br/>
  */ 
    
   (function() {
      return  nconfirm = window.confirm;
   })();
    
   /**
    * Factory method for calling confirm(). 
    * if alert is calling from a parent window and the popup alreday opened case the confirm alert is behind the popup.
    * This issue resolved.
    */ 
   
   (function(proxy) {
       proxy.confirm = function () {
       var message = (!arguments[0]) ? 'null': arguments[0];
       if(typeof popup != "undefined" && !popup.closed){
    	   return popup.confirm(message);
	 	  }else{
	 		 return  nconfirm(message);
	       }             
   };
})(this);
    
var color1="#F2F2F2";
var color2="#CECFCE";
var checkedColor = "#dff0d8";
var IFrameObj; // our IFrame object
var __map_for_holding_names_of_marked_controls=new Array();
var _softTabLoadOnClickItems = new Array();
var _softTabOnClickMaskMessage=null;
var _softTabRefreshIconItems = new Array();
var javascriptJsonObjectForMessages = null;
var tabMasked = false;

var browserName=navigator.appName;

if (browserName=="Netscape") { 
 window.captureEvents(Event.KEYPRESS);
 window.onkeypress = doMozillaAccessKeys;

}
else  if (browserName=="Microsoft Internet Explorer")  {
   document.onkeydown = doExplorerAccessKeys;
}


// Added the below if block to solve BugNo.15108 of Selenium
if (window.top.selenium) {
	var selWindow = window.top.selenium;
	selWindow.browserbot.modifyWindowToRecordPopUpDialogs(window, selWindow.browserbot);
} else if (window.opener) {
	if (window.opener.top.selenium) {
		var selWindow = window.opener.top.selenium;
		selWindow.browserbot.modifyWindowToRecordPopUpDialogs(window, selWindow.browserbot);
	}else if (window.opener.opener){
		if(window.opener.opener.top.selenium){
			var selWindow = window.opener.opener.top.selenium;
			selWindow.browserbot.modifyWindowToRecordPopUpDialogs(window, selWindow.browserbot);
		}
	}
}


if(window.history.forward(1) != null)
    window.history.forward(1);

function getClientDateFormat(){
	return _clientPreferencedDateFormat;
}

function getClientCurrencyFormat(){
	return _clientPreferencedCurrencyFormat;
}

function getClientTimeFormat(){
	return _clientPreferencedTimeFormat;
}

/*function to give the color to rows*/
function selectSingleRow (eSrc) {
	var varRow=eSrc.parentNode.parentNode;
	var children=varRow.childNodes;
	var chkStatus = eSrc.checked;
	var i;
	if (chkStatus == true) {
		
		coloringTDs (checkedColor,children);
		
	} else {
		coloringTDs (color1,children);
	}	
}

/*Selecting single row*/
function selectARow(pos,eSrc) {
	var varRow=eSrc.parentNode.parentNode;
	var children=varRow.parentNode.childNodes;
	var chkStatus = eSrc.checked;
	var i;
	
	var chkPos = 0;
	var checkedTDContents =eSrc.parentNode.childNodes; 
	var j = 0;
	for (j=0;j<checkedTDContents.length;j++) {
		if ((checkedTDContents.item(j).type == "checkbox") || (checkedTDContents.item(j).type == "radio")) {
			chkPos = j;
		}
	}
	
	for(i=1;i<children.length;i++){
		var tds = children[i].childNodes;		
		coloringTDs (color1,tds);
		children[i].childNodes.item(pos).childNodes.item(chkPos).checked = false;		
	}	
	if (chkStatus) {
		eSrc.checked = true;
		coloringTDs (checkedColor,varRow.childNodes);	
	} else {
		eSrc.checked = false;
		coloringTDs (color1,varRow.childNodes);
	}
	
}


/*Selecting multiple rows*/

function selectRows(pos,eSrc) {
	
    var varRow=eSrc.parentNode.parentNode;	
	var children=varRow.parentNode.childNodes;	
	var i = 0;
	
	var chkPos = 0;
	var checkedTDContents =eSrc.parentNode.childNodes; 
	var j = 0;
	for (j=0;j<checkedTDContents.length;j++) {
		if (checkedTDContents.item(j).type == "checkbox") {
			chkPos = j;
		}
	}
	
	for(i=1;i<children.length;i++){	
		var tds = children[i].childNodes;
		var chkBoxCol = children[i].childNodes.item(pos).childNodes;
		
		if (tds.length>0 && chkPos<chkBoxCol.length){			
			if (chkBoxCol.item(chkPos).checked==true){
				coloringTDs (checkedColor,tds);				
			} else {
				coloringTDs (color1,tds);
							 
			}					
		}
		
	}
	
}
//helper function to give the color to the individual tds
//s added
function coloringTDs (colorValue,tds) {
	tdLen = tds.length;	
	for(j=0;j<tdLen;j++) {
		tds[j].bgColor=colorValue;		
	}
}


 //
 //While unloading the page status and notify fields should get cleared.
 //Footer information also gets cleared
 // This Function will execute only in case of explorer
function doCommonUnload()
{
    if(parent.document.getElementById("titleId")){
	  parent.document.getElementById("titleId").innerHTML = "";
    }		
 
    var vardhxLayout=null;
    var varconfigPattern= null;
    var hotObj;
    
		if(parent.window.document.getElementById('hotbutton')){
			hotObj = parent.window.document.getElementById('hotbutton');
		 } else if (parent.parent.window.document.getElementById('hotbutton')) {
			hotObj = parent.parent.window.document.getElementById('hotbutton');	
		} else if (parent.parent.parent.window.document.getElementById('hotbutton')) {
			hotObj = parent.parent.parent.window.document.getElementById('hotbutton');
		}
		
    	if(typeof(dhxLayout)!='undefined'){
    		vardhxLayout = dhxLayout;
    		if(typeof(configPattern)!='undefined'){
    			varconfigPattern = configPattern; 
    		}   		
    	}else if(typeof(parent.dhxLayout)!='undefined'){
    		vardhxLayout = parent.dhxLayout;
    		if(typeof(parent.configPattern)!='undefined'){
    			varconfigPattern = parent.configPattern; 
    		}   		
    	}else if(typeof(parent.parent.dhxLayout)!='undefined'){
    		vardhxLayout = parent.parent.dhxLayout;
    		if(typeof(parent.parent.configPattern)!='undefined'){
    			varconfigPattern = parent.parent.configPattern; 
    		} 
    	}else if(typeof(parent.parent.parent.dhxLayout)!='undefined'){
    		vardhxLayout = parent.parent.parent.dhxLayout;
    		if(typeof(parent.parent.parent.configPattern)!='undefined'){
    			varconfigPattern = parent.parent.parent.configPattern; 
    		} 
    	}
    		
    	if(vardhxLayout!=null){
    		if(hotObj != null){    			
    			hotObj.style.height='0px';
    			hotObj.style.display="none";
    		}

    	    if(varconfigPattern == "4E"){
    	    	vardhxLayout.cells("b").collapse();	
    	    }else{  			    
    	        vardhxLayout.cells("a").fixSize(false, false);	
    		    vardhxLayout.cells("a").setHeight(30);
    	        vardhxLayout.cells("a").fixSize(true, true);	
    	    }  			
    	} 
 	
    unblockEventsOnUnLoad();

}

function unblockEventsOnUnLoad () {	
	
	if (opener){		
		if( opener.unblockEvents )
			opener.unblockEvents();
		
	}

}

function blockEventsOnLoad () {	
    try {
		if (opener) {
			if(opener.blockEvents)
				opener.blockEvents();
		}
    }catch(Exception){}

}
// As dialog closes, restore the main window's original
// event mechanisms.

function unblockEvents() {
		
		if( window.removeEventListener ){			
			window.removeEventListener('click', checkModal, false);   
			window.removeEventListener('mousedown', checkModal, false);   
			window.removeEventListener('mouseup', checkModal, false);   
			window.removeEventListener('focus', checkModal, false);   
			window.removeEventListener('mousemove', checkModal, false);   			
		}else if( window.detachEvent   ){		
			window.detachEvent ('onclick', checkModal);   
			window.detachEvent ('onmousedown', checkModal);   
			window.detachEvent ('onmouseup', checkModal);   
			window.detachEvent ('onfocus', checkModal);   
			window.detachEvent ('onmousemove', checkModal);   	
		}
		if( window.top.unMaskPage)  window.top.unMaskPage();		
		if( parent && parent.dialogWin && this != parent ){
		
			parent.dialogWin.win = null;			
			parent.unblockEvents();					
		}

}

function blockEvents() {	
	
	if( window.addEventListener ){			
		window.addEventListener('click', checkModal, false);   
		window.addEventListener('mousedown', checkModal, false);   
		window.addEventListener('mouseup', checkModal, false);   
		window.addEventListener('focus', checkModal, false);   
		window.addEventListener('mousemove', checkModal, false);   				
	}else if( window.attachEvent  ){
	
		window.attachEvent('onclick', checkModal);   
		window.attachEvent('onmousedown', checkModal);   
		window.attachEvent('onmouseup', checkModal);   
		window.attachEvent('onfocus', checkModal);   
		window.attachEvent('onmousemove', checkModal);   	
	}
	if (typeof(dialogWin)!='undefined' && dialogWin.win && !dialogWin.win.closed) {
		window.top.maskPage();
	}
	if( parent && parent.dialogWin && this != parent ){
		if (typeof(dialogWin)!='undefined' && dialogWin.win ){
			parent.dialogWin.win = dialogWin.win;
		}			
		parent.blockEvents();		
	}

}

// Invoked by onFocus event handler of EVERY frame,
// return focus to dialog window if it's open.
function checkModal(e) {
 	if (typeof(dialogWin)!='undefined' && dialogWin.win && !dialogWin.win.closed) {
 	
 		if(typeof(dialogWin)!='undefined' && dialogWin.win.dialogWin && dialogWin.win.dialogWin.win && !dialogWin.win.dialogWin.win.closed){
 			// In the case of multi level popup, set focus to last opened window.
 			dialogWin.win.checkModal(e);
 		}else{
 			var evnt=e?e:window.event;
 			if(evnt){
 				evnt.cancelBubble = true;
 				if (evnt.stopPropagation) evnt.stopPropagation();
 				if( evnt.preventDefault ) evnt.preventDefault();
 			}
 			try{
 				window.setTimeout(function(){
 					typeof(dialogWin)!='undefined' && dialogWin.win.focus();
 					},1);
 
 			} catch(exception) { }
 		}
 			
 	}else if ( typeof(dialogWin)!='undefined' && dialogWin.win){		
 		unblockEvents();
 	}
}

//While loading a jsp page its status & notify field values should be handled properly 
//status field value will be displayed in the status bar & According to the notify value 
//the link to the error page will get visible/invisible

function setStatus (pageStatus) {
	getJadeControl("status").value = pageStatus;
	getJadeControl("notify").value = "I";
	doCommonLoad ();
}

function setFocusOnFirstControl(){
  var bFound = false;

  // for each form
  for (f=0; f < document.forms.length; f++)
  {
    // for each element in each form
    for(i=0; i < document.forms[f].length; i++)
    {
      // if it's not a hidden element
      if (document.forms[f][i].type != "hidden")
      {
        // and it's not disabled
        if (document.forms[f][i].disabled != true && document.forms[f][i].readOnly != true)
        {
           // set the focus to it
           document.forms[f][i].focus();
           var bFound = true;
        }
      }
      // if found in this element, stop looking
      if (bFound == true)
        break;
    }
    // if found in this form, stop looking
    if (bFound == true)
      break;
  }
}


function doCommonLoad (title,formName) {
	
	document.body.onunload = doCommonUnload;

	
	if( parent.tabMasked){		
		parent.unMaskPage();
		parent.tabMasked = false;
	}
	
	if(title) {		
		if(parent.document.getElementById("titleId")) {
			parent.document.getElementById("titleId").innerHTML = title;
		}
	}
	
	if(opener){
		//This code is to set the document title for a popup window.
		//In the normal case, we are setting the title of the screen which is 
		//	taken in "maincontentframe" as the document title. That code is in index.jsp.
		//	But for popups we are setting from here.
		//Changed to Amrita UMS by Jisha Jun 9th 2020
		var titlestr = "Amrita UMS - " + document.title;
		document.title = titlestr;
	}
	
	var errorToDisplay = "";
	var notifyLevel = "";
	var fn;
	
	if (formName) {
		fn = formName;
	} else {
		fn = null;
	}
	
	errorToDisplay = getJadeControl("status",fn).value;	
	notifyLevel = getJadeControl("notify",fn).value;
	
	errorToDisplay = TrimString (errorToDisplay);
	notifyLevel = TrimString (notifyLevel);

	var hotObj;
	if(parent.window.document.getElementById('hotbutton')){
		hotObj = parent.window.document.getElementById('hotbutton');
	 } else if (parent.parent.window.document.getElementById('hotbutton')) {
		hotObj = parent.parent.window.document.getElementById('hotbutton');	
	} else if (parent.parent.parent.window.document.getElementById('hotbutton')) {
		hotObj = parent.parent.parent.window.document.getElementById('hotbutton');
	}
	
	//If the message is wrapping inside the hot message bar area, then it was difficult to read.
	//Add some more hight to the message area if it is a case of wrapping the text to second line.
	var varErrorDisplayArea = null;
	var varMessageImage = null;
	var varErrorLink = null;
	
	
	if(parent.document.getElementById('errorDisplayArea')){
		varErrorDisplayArea = parent.document.getElementById("errorDisplayArea");
		varMessageImage = parent.document.getElementById("messageImage");
		varErrorLink = parent.document.getElementById("errorLink");	
	} else if (parent.parent.document.getElementById('errorDisplayArea')) {
		varErrorDisplayArea = parent.parent.document.getElementById("errorDisplayArea");
		varMessageImage = parent.parent.document.getElementById("messageImage");
		varErrorLink = parent.parent.document.getElementById("errorLink");	
	} else if (parent.parent.parent.document.getElementById('errorDisplayArea')) {
		varErrorDisplayArea = parent.parent.parent.document.getElementById("errorDisplayArea");
		varMessageImage = parent.parent.parent.document.getElementById("messageImage");
		varErrorLink = parent.parent.parent.document.getElementById("errorLink");
	}
	
	
	var vardhxLayout=null;
	var varconfigPattern=null;
	
	if(typeof(dhxLayout)!='undefined'){
		vardhxLayout = dhxLayout;
		if(typeof(configPattern)!='undefined'){
			varconfigPattern = configPattern; 
		}   		
	}else if(typeof(parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.dhxLayout;
		if(typeof(parent.configPattern)!='undefined'){
			varconfigPattern = parent.configPattern; 
		}   		
	}else if(typeof(parent.parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.parent.dhxLayout;
		if(typeof(parent.parent.configPattern)!='undefined'){
			varconfigPattern = parent.parent.configPattern; 
		}   		
	}else if(typeof(parent.parent.parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.parent.parent.dhxLayout;
		if(typeof(parent.parent.parent.configPattern)!='undefined'){
			varconfigPattern = parent.parent.parent.configPattern; 
		}   		
	}
	
	if (varErrorDisplayArea!=null && vardhxLayout!=null) {
		if(errorToDisplay != null && errorToDisplay != "" && errorToDisplay.length > 0){			
			if(varconfigPattern == "4E"){
				vardhxLayout.cells("b").expand();
				vardhxLayout.cells("b").setHeight(12);
			}else{
				var layoutsize = 60;
				if(errorToDisplay.length >= 120) {
					layoutsize = 68;
				}		
				vardhxLayout.cells("a").fixSize(false, false);
				vardhxLayout.cells("a").setHeight(layoutsize);
				vardhxLayout.cells("a").fixSize(true, true);
			}
			
			var hotObjHeight = '30px';
			if(errorToDisplay.length >= 120) {
				hotObjHeight = '38px';
			}
			
			if(hotObj != null){				
				hotObj.style.height = hotObjHeight;
				hotObj.style.display="inline";
			}

			
			setNotifyStyles(notifyLevel);
			varErrorDisplayArea.innerHTML = errorToDisplay;
			if (notifyLevel == "E" && varErrorLink!=null) {
				varErrorLink.style.visibility = 'visible';
			}else {
				varErrorLink.style.visibility = 'hidden';
			}

		} else{
			var status1value=(parent?(parent.document.forms[0]?(parent.document.forms[0].htmlPageTopContainer_status?parent.document.forms[0].htmlPageTopContainer_status.value:""):""):"");
			if(varErrorDisplayArea && varErrorDisplayArea!=null && status1value.length==0){
				if(hotObj != null){							
					hotObj.style.height='0px';
					hotObj.style.display="none";
				}
				if(varconfigPattern == "4E"){
					vardhxLayout.cells("b").collapse();	
				}else{
					  vardhxLayout.cells("a").fixSize(false, false);
					  vardhxLayout.cells("a").setHeight(30);
					  vardhxLayout.cells("a").fixSize(true, true);
				}
			}
		}
	} else if ((errorToDisplay != "") && (errorToDisplay != null))  {
		 if (browserName=="Microsoft Internet Explorer")  {
			 alert(errorToDisplay);
		 }else{
			 // Mozilla, Ie 11 etc
			 var alertType = '';
			 if(notifyLevel){
				 if(notifyLevel=='E' || notifyLevel=='F'){
					 alertType = 'alerterror';
					 jAlert (errorToDisplay,'Alert',alertType);
				 }else if (notifyLevel=='W'){
					 alertType = 'alertwarning';
					 jAlert (errorToDisplay,'Alert',alertType);
				 }else{
					 alertType = 'alertsuccess';
					 jAlert (errorToDisplay,'Alert',alertType);
				 }
			 }
		 }
	}	
	registerDocKeydownListener();
}






//This function checks whether keydown event has been already
//registered for the document object. If no it registers a
//keydown event listener for the document.
function registerDocKeydownListener() {

	var listeners = YAHOO.util.Event.getListeners(document, "keydown");
	
	if( listeners == null || listeners.length == 0 ) {	
		if( !YAHOO.util.Event.addListener(document, "keydown", fnCallback) ){ 
			alert("Event attach for document keydown failed.");
		}
	}	
}

//Callback function for "keydown" event for the document.
//Checks whether "F1" key is pressed and then loads Context Help for the JSP.
function fnCallback(evt) {
	
	if( evt ==null ) { evt = event; }

	if(evt.keyCode == 112) {
	
		alert("fnCallback pressec");
		
		var browserName = navigator.appName;				
		
		if( browserName == "Microsoft Internet Explorer" ) {
			document.onhelp = new Function("return false;");
		}		
		
		/*if( window.handleHCCall ){
			
			//Some pages dont have controllers and hence don't have help context 
			//id available, and hence the help for the such pages need to be handled
			//separately (Eg: index.jsp).  Otherwise no help will be displayed.				
						
			handleHCCall();			
			
		} else */
		if( window.showHelpContext ) {
			showHelpContext(false); 
		}		
		
		/*if( browserName == "Netscape" ) {
			evt.preventDefault();
		}	*/
			
		return false;	
	}	
}



function showHelpContext(flag) {

	//Show help context only if context id and help file name is availbale.		
	//alert("window._pageHelpId " + window._pageHelpId +" _pageHelpId " + _pageHelpId + " _mainHelpFile " + _mainHelpFile );
	if( window._pageHelpId && _pageHelpId > 0 && _mainHelpFile != null && TrimString(_mainHelpFile) != "" ) {
		 FMCOpenHelp(_pageHelpId, null, null, null );
	}else if( _mainHelpFile != null && TrimString(_mainHelpFile) != "" && flag) {
		var height = screen.height*90/100;
		var width = screen.width*90/100;		
		hisShowModal (_mainHelpFile,width,height,"",window); 
	} 
	else {
		alert("No help available for the page.");
	}	
	
}


//Function to set the style for error message and set images according to the notify level.
function setNotifyStyles(notifyLevel) {
	var attributeName = "className";
	var imageName ="src";
	if (browserName=="Netscape") {
		attributeName = "class";
	}

	var varErrorDisplayArea = null;
	var varMessageImage = null;
	var hotButtonDiv = null;
	
	if(parent.document.getElementById('errorDisplayArea')){
		varErrorDisplayArea = parent.document.getElementById("errorDisplayArea");
		hotButtonDiv = parent.document.getElementById("hotbutton");
		varMessageImage = parent.document.getElementById("messageImage");
	} else if (parent.parent.document.getElementById('errorDisplayArea')) {
		varErrorDisplayArea = parent.parent.document.getElementById("errorDisplayArea");
		hotButtonDiv = parent.parent.document.getElementById("hotbutton");
		varMessageImage = parent.parent.document.getElementById("messageImage");
	} else if (parent.parent.parent.document.getElementById('errorDisplayArea')) {
		varErrorDisplayArea = parent.parent.parent.document.getElementById("errorDisplayArea");
		hotButtonDiv = parent.parent.parent.document.getElementById("hotbutton");
		varMessageImage = parent.parent.parent.document.getElementById("messageImage");
	}
	if (notifyLevel == "E" || notifyLevel == "F" && (varErrorDisplayArea && varMessageImage!=null)) {
		 varErrorDisplayArea.setAttribute(attributeName,"messageDisplay_e");
		 if(notifyLevel == "F"){
			 varMessageImage.setAttribute(imageName,"/images/fatalerror.gif");
			 hotButtonDiv.className='bgcolorerror';
			 hotButtonDiv.style.height='100%';
		 }else{
			 varMessageImage.setAttribute(imageName,"/images/msgerror.png");
			 hotButtonDiv.className='bgcolorerror';
			 hotButtonDiv.style.height='100%';
		 }		
	} else if (notifyLevel == "W") {
			varErrorDisplayArea.setAttribute(attributeName,"messageDisplay_w");
			varMessageImage.setAttribute(imageName,"/images/msgwarning.png");
			hotButtonDiv.className='bgcolorinfo';
			hotButtonDiv.style.height='100%';
	} else {
			varErrorDisplayArea.setAttribute(attributeName,"messageDisplay");
			varMessageImage.setAttribute(imageName,"/images/msgsuccess.png");
			hotButtonDiv.className='bgcolorsuccess';
            hotButtonDiv.style.height='100%';
	}
	
	var varconfigPattern=null;	
	if(typeof(configPattern)!='undefined'){
		varconfigPattern = configPattern; 
	}else if(typeof(parent.configPattern)!='undefined'){
		varconfigPattern = parent.configPattern; 
	}else if(typeof(parent.parent.configPattern)!='undefined'){
		varconfigPattern = parent.parent.configPattern; 
	}else if(typeof(parent.parent.parent.configPattern)!='undefined'){
		varconfigPattern = parent.parent.parent.configPattern; 
	}   		

	if(varconfigPattern == "3T"){
		hotButtonDiv.style.top='30px';				
	}
		
}
//function to return form control

function getFormObj () {
	return document.forms[0];
}


//function to return the jade control name of jsp pages
//-- if the jade control is not inside the data table,
// you pass the control name to this funtion & it will return the corresponing object

//htmlPageTopContainer_CreateGRN_txtInvDate
function getJadeControl (jadeControlName,formName) {
	
	var htmlControlName = "htmlPageTopContainer";
	if ((formName != null) && (formName != "")) {
		htmlControlName = htmlControlName + "_" + formName;
	}	
	htmlControlName = htmlControlName + "_" + jadeControlName;
	
	//alert (htmlControlName);
	var controlObj = getFormObj().elements[htmlControlName];
	
	if(controlObj == null){
		controlObj = document.getElementById(htmlControlName);
	}
	
	if(controlObj &&  typeof controlObj.style != "undefined"  && controlObj.style.display == "none"){
		return null;
	}else{
	  return controlObj;
	}
	
}


//function to return the control which is placed in a data table
//function getJadeTableControl(jadeControlName,dataTableName,row,column,formName) {
//controlName, dataTableName, rowNo, columnNo, rowName, columnName, formName
function getJadeTableControl(controlName, dataTableName, rowNo, columnNo, rowName, columnName,formName) {
	
	
	//formName = getFormObj().name;
	
	
	var cName = "htmlPageTopContainer";
	
	if( (formName != null) && (formName != "")){
	  cName = cName  + "_" + formName ;
	}
	cName = cName  + "_" + dataTableName ;
	
	if ((rowName != null) && (rowName != "")) {
		cName  = cName + "_" + rowName;
	} else if (rowNo > -1)//if ((rowNo != 0) && (rowNo != "")) 
	{
		cName  = cName + "_" + 	 dataTableName + "TRRow0";
	}
	
	if ((columnName != null) && (columnName != ""))  {
		cName  = cName  + "_" + columnName;
	} else if (columnNo > -1) {
		cName  = cName  + "_" + dataTableName  + "TDRow" + columnNo;
	}
	cName = cName + "_" + controlName + "_" + rowNo;
	
	cObj = document.getElementById(cName);
	if(cObj == null){
	    cObj = document.forms[0].elements[cName];
	}
	
	if(cObj == null){
		cObj = document.anchors[cName];
	}
	if(cObj == null && document.anchors != null && document.anchors.length > 0){ // In IE11, document.anchors[cName] is not working. Instead of that, anchor object can be retrieved by document.anchors.namedItem method.
		cObj = document.anchors.namedItem(cName);
	}
	if(cObj &&  typeof cObj.style != "undefined"  &&  cObj.style.display == "none"){
		return null;
	}else{
	  return cObj;
	}
}


//Function to return the control in a datatable within the jade container. 
function getJadeTableControlWithContainer(controlName, containerName,dataTableName, rowNo, columnNo, rowName, columnName,formName) {
	
	var cName = "htmlPageTopContainer";
	
	if( (containerName != null) && (containerName != "")){
		  cName = cName  + "_" + containerName ;
	}
	if( (formName != null) && (formName != "")){
	  cName = cName  + "_" + formName ;
	}
	cName = cName  + "_" + dataTableName ;
	
	if ((rowName != null) && (rowName != "")) {
		cName  = cName + "_" + rowName;
	} else if (rowNo > -1)//if ((rowNo != 0) && (rowNo != "")) 
	{
		cName  = cName + "_" + 	 dataTableName + "TRRow0";
	}
	
	if ((columnName != null) && (columnName != ""))  {
		cName  = cName  + "_" + columnName;
	} else if (columnNo > -1) {
		cName  = cName  + "_" + dataTableName  + "TDRow" + columnNo;
	}
	cName = cName + "_" + controlName + "_" + rowNo;
	
	
	cObj = document.getElementById(cName);
	if(cObj == null){
	    cObj = document.forms[0].elements[cName];
	}
	
	return cObj;
}


//setting the action field for the page
//call this function by passing the action string.
function setPageAction (actionString) {	
	
	var actionField = getJadeControl("action");	
	actionField.value = actionString;
	return true;
	
}



//setting the date field value for the Jsp Page 
//onclick of the date icon link, can call this function.
//pass the control name (to where the selected date is to be loaded) to this function
function setDateField (jadeControlName) {
	var htmlControl = getJadeControl (jadeControlName);
	setDate (htmlControl);
}


//setting the date field which is placed in a data table

function setTableDateField (jadeControlName,dataTableName,row,column) {
	var htmlControl = getJadeTableControl (jadeControlName,dataTableName,row,column);
	setDate (htmlControl);
}


//calling the date creation API (Helper function and not directly called from jsp page)
function setDate (htmlControl) {
	gfPop.fDemoPopDepart (htmlControl);
}



//setting the today date 
function getToday (dateFieldName) {
	var dateField = getJadeControl(dateFieldName);
	dateField.value = getCurrentDate();
}

//setting the developer alerts for testion purpose
//instead of using javascript alerts (while developer testing), you can use this function. For User alerts, the javascript alert can be used
function alertX (msg) {
	alert (msg);
}

// Function to have a default value in the HisDropdownList(HisSelector)
//Call this function in the onload event of the form with the controlname of the text to appear and the value
//which has to be shown
//@author Jayakrishnan C.
function selectOption(selectedValue,controlName,formName){

	//alert(controlName);
	var controlName=getJadeControl(controlName,formName);
	//i is changed from 1 to 0 to fix the bug in Stock Browser - Bug:5179
	for(i=0;i<controlName.options.length;i++){
		//if(controlName.options[i].text == selectedValue){
		// controlName.options[i].text API trim the multiple spaces present in option to one space and to avoid this we can use controlName.options[i].textContent API
		// In IE8 controlName.options[i].textContent is not working so it is changed to controlName.options[i].innerText.
		var text  = controlName.options[i].textContent || controlName.options[i].innerText;		
		if(text == selectedValue){
			controlName.options[i].selectedIndex=i;
			controlName.options[i].selected=true;
			break;
		  }
	}
}

//Function for eleminating leading and trailing spaces
//@author :Suchetha -R
function TrimString(sInString) {
  sInString = sInString.replace( /^\s+/g, "" );// strip leading
  return sInString.replace( /\s+$/g, "" );// strip trailing
}

// Function which replace \n character and leading and trailing spaces from a string
function rTrimString(sInString) {
	  sInString = replaceAll(sInString,'\n','');	
	  sInString = sInString.replace( /^\s+/g, "" );// strip leading
	  return sInString.replace( /\s+$/g, "" );// strip trailing
	}

//Functions for implementing remotescripting
//@author :Suchetha-R
//Function for constructing query string
//arrCriteriaNames and arrCriteriaValues are array of name -
//value pairs used for constructing query string
function generateSearchCriteriaQury(arrCriteriaNames,arrCriteriaValues){
	//alertX("generating query string");
	var noOfColumns = arrCriteriaNames.length;
	var qs = '';
	for(i =0;i<noOfColumns;i++){ 
	 var criteria  = arrCriteriaNames[i];
	 var criteriaValue = arrCriteriaValues[i];
		if (criteria != '') {
		    qs+=(qs=='')?'?':'&'
		    qs+=criteria+'='+escape(criteriaValue)
		  }
		 // alertX("the query string is"+qs);
	}
	 return qs;
}

//@author :Suchetha-R
//Function Desc:This function will load an invisible iframe dynamically
//The required jsp file is then loaded passing the required serach criteria as query string
//@ filename -----the name of the jsp file whichu need to load
//@ query string used as search criteria

function callToServer(filename,queryString) {
//alert("callToServer");
	if (!document.createElement) {return true};
	//alert("after if (!document.createElement)")
	var IFrameDoc;	
	var URL = '';	
	queryString = queryString.replace( /\+/g, '%2B' );
	if(queryString  == ""){
		URL = filename+".jsp";		
	}
	else{
		URL = filename+".jsp"+queryString;
	}	
	//alert("url >>>>"+URL);
	if (!IFrameObj && document.createElement) {
		// create the IFrame and assign a reference to the
		// object to our global variable IFrameObj.
		// this will only happen the first time 
		// callToServer() is called
		var tempIFrame;
		try {
			//alert("creating iframe if (!IFrameObj && document.createElement)");
			tempIFrame=document.createElement('iframe');
			tempIFrame.setAttribute('id','RSIFrame');	
			tempIFrame.style.border='0px';
			tempIFrame.style.width='0px';
			tempIFrame.style.height='0px';
			IFrameObj = document.body.appendChild(tempIFrame);			
			if (document.frames) {
				// this is for IE5 Mac, because it will only
				// allow access to the document object
				// of the IFrame if we access it through
				// the document.frames array
				IFrameObj = document.frames['RSIFrame'];
			}
		} catch(exception) {
			// This is for IE5 PC, which does not allow dynamic creation
			// and manipulation of an iframe object. Instead, we'll fake
			// it up by creating our own objects.
			//alert("catching exception if present..");
			iframeHTML='<iframe id="RSIFrame" style="';
			iframeHTML+='border:0px;';
			iframeHTML+='width:0px;';
			iframeHTML+='height:0px;';
			iframeHTML+='"><\/iframe>';
			document.body.innerHTML+=iframeHTML;
			IFrameObj = new Object();
			IFrameObj.document = new Object();
			IFrameObj.document.location = new Object();
			IFrameObj.document.location.iframe = document.getElementById('RSIFrame');
			IFrameObj.document.location.replace = function(location) {
				this.iframe.src = location;
			}
		}
	}
	//alert("navigator.userAgent:"+navigator.userAgent);
	//alert("IFrameObj.contentDocument:"+IFrameObj.contentDocument);
	if (navigator.userAgent.indexOf('Gecko') !=-1 && navigator.userAgent.indexOf('Trident') == -1 && !IFrameObj.contentDocument) {
		// we have to give NS6 a fraction of a second
		// to recognize the new IFrame
		//setTimeout('callToServer("'+theFormName+'")',10);
		//alert("return");
		return false;
	}
	
	if (IFrameObj.contentDocument) {
		// For NS6
		IFrameDoc = IFrameObj.contentDocument; 
	} else if (IFrameObj.contentWindow) {
		// For IE5.5 and IE6
		IFrameDoc = IFrameObj.contentWindow.document;
	} else if (IFrameObj.document) {
		// For IE5
		IFrameDoc = IFrameObj.document;
	} else {
		return true;
	}
	
	//alert("repalcing url");
	IFrameDoc.location.replace(URL);
	//changeCursor();
	return false;
}


function changeCursor()
{
	document.body.style.cursor="wait";
}

//Function which is used to clear the entries in combobox
//@author: Suchetha-R

function resetOptions(obj){
	var n= obj.options.length;
	for( i=0;i<n;i++){
	obj.options[i].text="--";
	obj.options[i].value="";
	}
	obj.options.length = 0;
	obj.reset;
	
}



/**********************************************************************/
/*Function name :isDigit(theDigit) */
/*Usage of this function :test for an digit */
/*Input parameter required:thedata=string for test whether is digit */
/*Return value :if is digit,return true */
/* else return false */
/**********************************************************************/
function isDigitfunc(theDigit)
{
	var digitArray = new Array('0','1','2','3','4','5','6','7','8','9'),j;

	for (j = 0; j < digitArray.length; j++)
	{if (theDigit == digitArray[j])
	return true
	}
	return false

}
/*************************************************************************/
/*Function name :isPositiveInteger(theString) */
/*Usage of this function :test for an +ve integer */
/*Input parameter required:thedata=string for test whether is +ve integer*/
/*Return value :if is +ve integer,return true */
/* else return false */
/*function require :isDigit */
/*************************************************************************/
function isPositiveIntegerfunc(theString)
{
var theData = new String(theString)

if (!isDigitfunc(theData.charAt(0)))
if (!(theData.charAt(0)== '+'))
return false

for (var i = 1; i < theData.length; i++)
if (!isDigitfunc(theData.charAt(i)))
return false
return true
}

/**********************************************************************/
/*Function name :isDatefunc(s) */
/*Usage of this function :To check s is a valid format */
/*Input parameter required:s=input string */
/*Return value :if is a valid date return 1 */
/* else return 0 */
/*Function required :isPositiveIntegerfunc() */
/**********************************************************************/
function isDatefunc(s)
{var a1=s.split("/");
var a2=s.split("-");
var e=true;
if ((a1.length!=3) && (a2.length!=3))
{
e=false;
}
else
{if (a1.length==3)
var na=a1;
if (a2.length==3)
var na=a2;
if (isPositiveIntegerfunc(na[0]) && isPositiveIntegerfunc(na[1]) && isPositiveIntegerfunc(na[2]))
{
		var format = getClientDateFormat();
		if( format != null && ( format.toLowerCase() == 'mm/dd/yyyy' || format.toLowerCase() =='mm-dd-yyyy' ) ){
var d=na[1],m=na[0];
var y=na[2];
		}else if( format != null && ( format.toLowerCase() == 'yyyy-mm-dd' || format.toLowerCase() =='yyyy/mm/dd' ) ){
			var y=na[0],m=na[1];
			var d=na[2];
}else{
var d=na[0],m=na[1];
var y=na[2];
}
if (((e) && (y<1000)||y.length>4))
e=false
if (e)
{
v=new Date(m+"/"+d+"/"+y);
if (v.getMonthClient()!=m-1)
e=false;
}
}
else
{
e=false;
}
}
return e;
}


/**********************************************************************
  function compareDates
   parameters: String1,String2 :format dd/mm/yyyy
   String2 can be set to "today" to default to current sysdate for convenience
   returns: integer, -1,0,1
   date1<date2 returns -1
   date1=date2 returns 0
   date1>date2) returns 1
   Can check for other cases like  date1 <=date2- e.g: if(!(date1,date2)==1)
/**********************************************************************/
function compareDatesfunc(date1,date2)
{

var datea ;
var dateb ;
var now = new Date();
var splitString = "";
if( date1.indexOf("/") > 0 ){
	splitString = date1.split("/");
}else if( date1.indexOf("-") > 0 ){
	splitString = date1.split("-");
}

var format = getClientDateFormat();
if( format != null && ( format.toLowerCase()=="mm/dd/yyyy" || format.toLowerCase()=="mm-dd-yyyy") ){
	datea = new Date(splitString[2],splitString[0]-1,splitString[1]);
}else if( format != null && ( format.toLowerCase()=="yyyy/mm/dd" || format.toLowerCase()=="yyyy-mm-dd") ){
	datea = new Date(splitString[0],splitString[1]-1,splitString[2]);
} else {
	datea = new Date(splitString[2],splitString[1]-1,splitString[0]);
}

if(date2.toLowerCase().valueOf() == "today")
{

 dateb = new Date(now.getFullYear(),now.getMonth(),now.getDate());

}
else
{
	splitString1 = date2.split("/");
	
	if( format != null && ( format.toLowerCase()=="mm/dd/yyyy" || format.toLowerCase()=="mm-dd-yyyy") ){
		dateb = new Date(splitString1[2],splitString1[0]-1,splitString1[1]);
	}else if( format != null && ( format.toLowerCase()=="yyyy/mm/dd" || format.toLowerCase()=="yyyy-mm-dd") ){
		dateb = new Date(splitString1[0],splitString1[1]-1,splitString1[2]);
	} else {
		dateb = new Date(splitString1[2],splitString1[1]-1,splitString1[0]);
	}
}
if (datea < dateb)
{
    return -1 ;
}
else if (datea > dateb)
{
    return 1 ;
}
else
{
     return 0 ;
}
}

//author Jayakrishnan C.

function IsValidTime(timeStr,needAmPm) {
	// Checks if time is in HH:MM:SS AM/PM format.
	// The seconds and AM/PM are optional.
	
	var timePat = /^(\d{1,2}):(\d{2})(:(\d{2}))?(\s?(AM|am|PM|pm))?$/;
	
	var matchArray = timeStr.match(timePat);
	
	if (matchArray == null) {
	   alert("Time is not in a valid format.");
	   return false;
	}
	
	hour = matchArray[1];
	minute = matchArray[2];
	second = matchArray[4];
	ampm = matchArray[6];
	
	if (second == "") { second = null; }
	if (ampm == "") { ampm = null }
	
	if (hour < 0  || hour > 23) {
		alert("Please enter valid Hour");
		return false;
	}
	
	if  ( (typeof(needAmPm)== 'undefined' || needAmPm == true ) && hour > 12 && ampm != null) {
		  alert("You can't specify AM or PM .");
		  return false;
	}

	if (minute<0 || minute > 59) {
		alert ("Minute must be between 0 and 59.");
		return false;
	}
	
	if (second != null && (second < 0 || second > 59)) {
		alert ("Second must be between 0 and 59.");
		return false;
	}
	
 	if((typeof(needAmPm)!= 'undefined' || needAmPm == false ) && ampm != null){
 		alert ("That is not a valid time.");
		return false;
	}

	return true;
}

// Modifies the user entered time to correct digits.
// eg: 3:10 to 03:10
function correctDigitsInTime(time) {

	var timeVal = "";
	var splitTimeString = new Array();

	var pattern = /^(\d{1,2}):(\d{2})(:(\d{2}))?$/;
	var matchArray = time.match(pattern);

	if (matchArray == null) {
		alert("Time is not in a valid format. Please enter time in HH:mm/HH:mm:ss format");
		return false;
	}

	hh = matchArray[1];
	mm = matchArray[2];
	ss = matchArray[4];

	if (hh < 0 || hh > 23) {
		alert("Please enter valid Hour");
		return false;
	}
	if (mm < 0 || mm > 59) {
		alert("Minute must be between 0 and 59.");
		return false;
	}

	hh = hh.length == 1 ? "0" + hh : hh;
	timeVal = hh + ":" + mm;

	if (typeof (ss) != 'undefined' && ss != null) {
		if (ss < 0 || ss > 59) {
			alert("Second must be between 0 and 59.");
			return false;
		} else {
			timeVal += ":" + ss;
		}
	}
	return timeVal;
}

// Added by Manoj for validating time formats.
//Can be used for validating HH:MM:SS or hh:mm:ss with am/pm
function validateTimeFormat(obje,needSec,is24hr,needAmPm){
	var objValue = TrimString(obje.value);
	if(objValue.length==0)return;
	needAmPm = needAmPm==null || is24hr ? false : true;
	var timePartStr = "";
	var timeArr = new Array();
	if(needAmPm){
		var indx = objValue.indexOf(' ');
		timePartStr = objValue.substring(0,indx);
		var amPmPart = objValue.substring(indx+1,objValue.length);;
		var amPm = amPmPart.length == 2 && (amPmPart.toLowerCase() == "am" || amPmPart.toLowerCase() == "pm" ) ? true : false;
		if(!amPm){
			obje.focus();
			obje.select();
			alert("Time should provide AM or PM correctly.");
			return;
		}
	}
	timeArr = timePartStr.split(":");
	if(needSec){
		if(timeArr.length < 3){
			obje.focus();
			obje.select();
			alert("Time should provide with seconds.");
			return;
		}
	}
	var str1 = timeArr[0];
	var intHrs = parseInt(str1);
	if(is24hr && intHrs >= 24){
		obje.focus();
		obje.select();
		alert("Hours should not be greater that 23.");
		return;
	} else if(intHrs >= 13){
		obje.focus();
		obje.select();
		alert("Hours should not be greater that 12.");
		return;
	}
	var str2 = timeArr[1];
	var intMin = parseInt(str2);
	if(intMin >= 60){
		obje.focus();
		obje.select();
		alert("Minutes should not be greater than 59.");
		return;
	}
	if(needSec){
		var str3 = timeArr[2];
		var intSec = parseInt(str3);
		if(intSec >= 60){
			obje.focus();
			obje.select();
			alert("Seconds should not be greater than 59.");
			return;
		}
	}
}


//The function allow only alphabetic characters
//can be used for validating names.
// this can be altered for any "checkOK" string you desire
//Author Jayakrishnan C.
//pass the string you want to use for the check as the argument --checkStr

function checkAlphabets(checkStr){
var checkOK = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
var allValid = true;
for (i = 0;  i < checkStr.length;  i++){
	ch = checkStr.charAt(i);
for (j = 0;  j < checkOK.length;  j++)
	if (ch == checkOK.charAt(j))
		break;
	if (j == checkOK.length){
		allValid = false;
		break;
	}
}

return allValid; //returns true when success and false otherwise

}


//function to toggle button states
//author Jayakrishnan C.
function toggleButton(buttonName){
	if(getJadeControl(buttonName)) {
		getJadeControl(buttonName).disabled = !getJadeControl(buttonName).disabled;
	}
}


//function to get the row number of the JADE table from the name of the control
//Added by Sabari

function getRowNumberFromControlName(name){
	var startIndex = name.lastIndexOf("_") + 1; 
	var endIndex = name.length  ;  
	var rowStr = name.substring(startIndex , endIndex); 
	return parseInt(rowStr);
}  


function getFloat(number) {
	if (isNaN(number) ) {
		return 0.0 ;
	}
	else return parseFloat( eval( number )) ;
}

function getValue(obj)  {
	if(!obj) {
		return 0.0 ;
	}
	if (isNaN(obj.value) || isNaN ( parseFloat ( obj.value ) ) ) {
		obj.value = 0.0 ;
		return 0.0 ;
	}
	else 
	return  parseFloat ( eval(obj.value) ) ;
 }

function looseFocus(obj){
	obj.blur() ;
}

/*************************************************************************\
boolean isNum(String argvalue)
return true if argvalue contains only numeric characters,
else return false.
Author :- Jayakrishnan C.
\*************************************************************************/
function isNum(argvalue) {
argvalue = argvalue.toString();

if (argvalue.length == 0)
return false;

for (var n = 0; n < argvalue.length; n++)
if (argvalue.substring(n, n+1) < "0" || argvalue.substring(n, n+1) > "9")
return false;

return true;
}


/* -------------	function to resolve the Ctrl + N issues -------------- */



function doExplorerAccessKeys() {

	if ((event.keyCode == 78) && (event.ctrlKey)){
		alert ("No New Window")
		event.cancelBubble = true;
		event.returnValue = false;
		event.keyCode = false;
		return false;
	}
	if ((event.keyCode == 72) && (event.ctrlKey)){
			alert ("No History");
			event.cancelBubble = true;
			event.returnValue = false;
			event.keyCode = false;
			return false;
	}
}

function doMozillaAccessKeys(e){

      if ( e.ctrlKey ) {
	   if ( e.charCode == 110 )  {
		alert('No New Window');
		e.cancelBubble=true;
		return false;

	   }
	   if ( e.charCode == 104 )  {
		alert ("No History");
		e.cancelBubble=true;
		return false;

	   }
      }
}





/*function to validate field*/
 function validateField(textToValidate,textToAppear){
 	if(getJadeControl(""+textToValidate).value == null || getJadeControl(""+textToValidate).value ==""){
		alert('Please enter ' + textToAppear);
		return false;
	}
	else{
		return true;	
	}
 }
 
 function chkEmpty(aTextField) {
    var re = /\s/g; //Match any white space including space, tab, form-feed, etc. 
    var str = aTextField.replace(re, "");
    RegExp.multiline = true; // IE support
    if (str.length == 0) {
      return true;
    } else {
        return false;
 	}
}


//  Added by Dhania 08/11/2006 to handle File Uploading as a common task  

function uploadFile(obj, url, paramNames, paramVal){
var paramName =paramNames[0] +",";
var paramValue =paramVal[0] +",";
var result ="";
for(var i=1;i<paramNames.length;i++){
      var re = /,/g;
      var a = ""+paramVal[i];
     paramVal[i]= a.replace(re,"%2c");  // encode , with %2c
     var b = ""+paramNames[i];
     paramNames[i] = b.replace(re,"%2c");  // encode , with %2c
   paramName =paramName+paramNames[i]+",";
   paramValue =paramValue+paramVal[i]+",";
  }
 result =  obj.uploadFile(url,paramName,paramValue);
     return result;
}

/*
 * Internal API, to the focus to an object.
 */
function _setFocusToObject(control){
	var obj = document.getElementsByName(control)[0];
	if(obj){		
		obj.focus();
	}
}

/*
 * Internal API, to set the focus to an object and select its value string.
 */
function _setFocusToObjectAndSelect(control){
	var obj = document.getElementsByName(control)[0];
	if(obj){		
		obj.focus();obj.select();
	}
}

// Added by thej for mandating fields 24/11/2006
function checkNull(control,errorMessage,isSelectBox,script){
	if( document.getElementsByName(control)[0]){
		var controlComponent = document.getElementsByName(control)[0];
		if(!isSelectBox){
			var retValue = false;
			if( script != null && script != ''){
				retValue = eval(script);
			} else {
				if(controlComponent.value == null || controlComponent.value == '' || TrimString(controlComponent.value) == ''){
					retValue=false;
				} else {
					retValue=true;
				}
			}
			
			if(retValue == false){
				//alert(errorMessage);
				var alertType = 'alerterror';
				jAlert (errorMessage,'',alertType,function() {
					//_setFocusToObjectAndSelect(control);
					window.setTimeout("_setFocusToObjectAndSelect('"+control+"')",10);
				});
				//controlComponent.focus();controlComponent.select();
				//window.setTimeout("_setFocusToObjectAndSelect('"+control+"')",10);
				return true;
			} 
		}else if(isSelectBox){
			var retValue = false;
			if( script != null && script != ''){
				retValue = eval(script);
			} else {
				if(controlComponent.value == '0'  || TrimString(controlComponent.value) == ''){
					retValue=false;
				} else {
					retValue=true;
				}
			}
			
			if(retValue == false){
				//alert(errorMessage);
				var alertType = 'alerterror';
				jAlert (errorMessage,'',alertType,function() {
					//_setFocusToObjectAndSelect(control);
					window.setTimeout("_setFocusToObject('"+control+"')",10);
				});
				//controlComponent.focus();
				//window.setTimeout("_setFocusToObject('"+control+"')",10);
				return true;	
			}
		}else{
			return false;
		}
	}
/* The following is the old code before the bug fix (Bug # 13834). Not used now onwards.
	if( document.getElementsByName(control)[0]){
		var controlComponent = document.getElementsByName(control)[0];
		if(!isSelectBox && (controlComponent.value == null || controlComponent.value == '' || TrimString(controlComponent.value) == '')){
			var retValue = false;
			if( script != null && script != ''){
				retValue = eval(script);
			}
			
			if(retValue == false){
				alert(errorMessage);
				controlComponent.focus();controlComponent.select();
				return true;	
			} 
		}else if(isSelectBox && ( controlComponent.value == '0'  || TrimString(controlComponent.value) == '')){
			var retValue = false;
			if( script != null && script != ''){
				retValue = eval(script);
			}
			if(retValue == false){
				alert(errorMessage);
				controlComponent.focus();
				return true;	
			}
		}else{
			return false;
		}
	}
*/
}
// Added by thej for mandating fields in a datatable 24/11/2006
function checkNull_DT(control,errorMessage,rowCount,startIndex,isSelectBox,script){
	var controlName;
	for(i=startIndex;i<(rowCount+startIndex);i++){
		controlName = control + "_"+i;
		if( checkNull(controlName,errorMessage,isSelectBox,script)){
			return true;
		}
	}
	return false;
}

//Following array is for one more check to avoid multiple "*" marking of mandatory controls. Bug # 19723

// Added by thej for setting the marker 24/11/2006
function setMarker(control){
	var _o=__map_for_holding_names_of_marked_controls[control];
	if(_o) return;
	if( document.getElementsByName(control)[0]){
		__map_for_holding_names_of_marked_controls[control]=control;
		var controlComponent = document.getElementsByName(control)[0];
		var parentNode = controlComponent.parentNode;
		if(parentNode.nodeName == "FONT"){
			parentNode = parentNode.parentNode;
		}
		var textElement = document.createElement("SPAN");
		//textElement.style.cssText = 'color:#FF0000;position:absolute;padding-left:3px;font-size:20px;';
		textElement.setAttribute('class','mandatory');
		textElement.innerHTML='*';
		if(controlComponent.parentNode.nodeName == "FONT"){			
			//parentNode.insertBefore(textElement,controlComponent.parentNode);			
			parentNode.appendChild(textElement);  //To make the mandatory asterik sign after the control :Priya,11-09-07 
		}else{
			//parentNode.insertBefore(textElement,controlComponent);
			if(parentNode && parentNode.classList && parentNode.classList.contains('dhx_combo_box')){
				parentNode.parentNode.appendChild(textElement);
				parentNode.style.cssFloat = "left";
			}else{
				parentNode.appendChild(textElement);  //To make the mandatory asterik sign after the control :Priya,11-09-07 
			}			
		}
	}
}

// Added by thej for setting the onclick attributes for datatable components for mandating the fields	
function setOnclickForControl(cnt,newOnclick,rowCount,startIndex,controlCompArray,errorMsgArray,markerArray){
	for(i=startIndex;i<(rowCount+startIndex);i++){
		if( document.getElementsByName(cnt+"_"+i)[0]){
			var control = document.getElementsByName(cnt+"_"+i)[0];
			var controlOnclick = control.attributes["onclick"];
			var funcName = "newFunction"+i;
			var funcBody = "var component;var errorMessage;";
			
			for(j  = 0;j<controlCompArray.length;j++){
				funcBody += "component = '"+controlCompArray[j]+"_"+i+"';";
				funcBody += "errorMessage = '"+errorMsgArray[j]+"';"
				funcBody += "if(checkNull(component,errorMessage) ){return false;}";
				var isMarkerReq = markerArray[j];
				if(isMarkerReq == "true"){
					setMarker(controlCompArray[j]+"_"+i);
				}
			}
			funcBody += controlOnclick.value;
			
			var newFunc = eval("function " + funcName + "() { " + funcBody + "};"+funcName+";" );
			control.onclick = newFunc;
		}
	}
}


// Function isStrEmpty : to check whether the passed string is empty 
 // REF : ( http://www.codetoad.com/javascript/isempty.asp )   
  function isStrEmpty(aTextField) {
   var re = /\s/g; //Match any white space including space, tab, form-feed, etc. 
   var str = aTextField.replace(re, "");
   RegExp.multiline = true; // IE support
   if (str.length == 0) {
     return true;
   } else {
       return false;
	 }
}


//Added by Rajesh on 18/4/2007 for trimming any unwanted spaces in fields
function Trim(str) 
{  if(str.charAt(0) == " ")
  {  str = Trim(str.substring(1));
  }
  if (str.charAt(str.length-1) == " ")
  {  str = Trim(str.substring(0,str.length-1));
  }
  return str;
}

// Kannan, Aug 17.07 : Hide close button if the page is not a pop up
function hideButtonIfMain(buttonName) {
  isMainPage = true;
  if (  opener || (parent && parent.window.opener) ) {  // If opener or main page is defined, then this page is a pop up
  	isMainPage = false;		
  }
  
  if ( isMainPage ) { // Hide the close button only if this is a main page 
    // Decide whether this is a jade button or normal button
    if ( getJadeControl(buttonName) ) { 
		getJadeControl(buttonName).style.visibility = "hidden";		
	}else if ( getFormObj().elements[buttonName] ) {	 
		getFormObj().elements[buttonName].style.visibility = "hidden";
	}
  }  
}

//Kannan, Sep 09.07 : Function to get the control within jade:container

function getJadeContainerControl (controlName, jadeContainerName, formName) {
	
	var htmlControlName = "htmlPageTopContainer";
	if ((formName != null) && (formName != "")) {
		htmlControlName = htmlControlName + "_" + formName;
	}	
	
	htmlControlName = htmlControlName + "_" + jadeContainerName + "_" + controlName;
	
	//alert (htmlControlName);
	var controlObj = getFormObj().elements[htmlControlName];
	return controlObj;
}

//Gisha,Oct 29,2007 : Function to get master pages on hot key press

function openMasterPage(page, width, height){
	hisShowModal (page,width,height,"",window);
}

// Hot key support function to popup a new window if the key configured from xml is pressed
// added by Dhania G 24/11/2007
function setOnkeyup(event,page,width,height,hkey){
 var code = (window.event) ? event.keyCode : event.keyCode;	
  if(code == hkey){ 
      hisShowModal (page,width,height,"",window);
   	return true;
    }
    else{
    	return false;
    }
}


//PM:3297.
function getSalmonTableControl(controlName, dataTableName, rowNo,
columnNo, rowName, columnName,formName) {

        var cName = "htmlPageTopContainer";

        if( (formName != null) && (formName != "")){
          cName = cName  + "_" + formName ;
        }
        cName = cName  + "_" + dataTableName ;

        if ((rowName != null) && (rowName != "")) {
                cName  = cName + "_" + rowName;
        } else if (rowNo > -1)//if ((rowNo != 0) && (rowNo != ""))
        {
                cName  = cName + "_" +          dataTableName + "TRRow" + rowNo;
        }

        if ((columnName != null) && (columnName != ""))  {
                cName  = cName  + "_" + columnName;
        } else if (columnNo > -1) {
                cName  = cName  + "_" + dataTableName  + "TDRow" + columnNo;
        }
        cName = cName + "_" + controlName ;

        cObj = document.getElementById(cName);
        if(cObj == null){
            cObj = document.forms[0].elements[cName];
        }

        return cObj;
}

// Nivedita on December 05, 2007 - Replaces text with by in string
function replaceAll(string,text,by) {
    var strLength = string.length, txtLength = text.length;
    if ((strLength == 0) || (txtLength == 0)) return string;

    var i = string.indexOf(text);
    if ((!i) && (text != string.substring(0,txtLength))) return string;
    if (i == -1) return string;

    var newstr = string.substring(0,i) + by;
    if (i+txtLength < strLength)
        newstr += replaceAll(string.substring(i+txtLength,strLength),text,by);

    return newstr;
}

//API to remove empty rows from a table with given id.
//This will be useful in screen where we will be disabling controls with config xml files.
function removeEmptyRows(tableName){
	var deviceCbTable = document.getElementById(tableName);
	//alert(deviceCbTable);
	for(var i=0;i<deviceCbTable.rows.length;i++){
		var emptyColCnt = 0;
		for(var j=0;j<deviceCbTable.rows[i].cells.length;j++){
			//alert("Contents of Row "+(i+1)+"\n"+deviceCbTable.rows[i].cells[j].innerHTML);
			var cellTxt = deviceCbTable.rows[i].cells[j].innerHTML;
			if (Trim(cellTxt) == "" || cellTxt == "&nbsp;") {
				emptyColCnt = emptyColCnt + 1;
				//alert("Test :"+deviceCbTable.rows[i].cells[j].innerHTML);
				//deviceCbTable.rows[i].cells[j].innerHTML="<font color=red><b>Blank</b></font>";
			}
		}
		if (emptyColCnt == deviceCbTable.rows[i].cells.length) {
			//alert("row empty " + (i+1));
			deviceCbTable.rows[i].style.display = "none";
			//deviceCbTable.rows[i].style="background-color: #FFFFFF";
		}
	}
}

//This API will open the staff browser as a modal window.
//This is used to open custom staff browsers, if any, for other modules like AUMS.
//This API is having a defined return method.
//Added by Manoj. PM # 3457.
function _openStaffSelectionBrowser(urlstring){
	hisShowModal(urlstring,900,400,setStaff,window);
}

//API to handle the new html tab click events.
//This type of tabs will not refresh the tab details by itself.
//We can set them to refresh on tab selection.
//This API provides a validator for every tab click.
//This validator method name will be "onNewTabClickValidator_$controlName(obj)".
//This API will provide a callback event handler also for every tab click.
//This callback event method name will be "onNewTabClickEventHandler_$controlName(obj)".
//This API allows to modify the tab url at runtime by implementing "hisNewTabModifySelectedUrl" JS method.
function _handleNewTabClick(obj,reloadYN,loadOnStart,hidescroll){
	if(hidescroll!=null && hidescroll!='undefined' && hidescroll==true){
		document.body.style.overflow="hidden";
		document.body.scrollTop=0;
	}else{
		document.body.style.overflow="auto";
	}
	$( ".tab-refresh-active" ).each(function( index ) {
		$(this).removeClass('tab-refresh-active');
		$(this).addClass('tab-refresh');
	});
	var clickedTabId = obj.id+"";//Eg. hisnewtab_x1_tab
	var idParts = clickedTabId.split("_");
	//var divPrefix = idParts[idParts.length-1];
	var divName = "";
	for(var i=1; i<idParts.length-1;i++)divName=divName+idParts[i]+"_";
	var staticTxt = idParts[0];
	var tabViewDiv = document.getElementById(staticTxt+"_"+divName+"divview");//Eg. hisnewtab_x1_divview
	var conName=divName.substring(0,divName.lastIndexOf("_"));
	var validHandler = "onNewTabClickValidator_"+conName;
	if(eval("typeof("+validHandler+")")!='undefined'){
		var retVal=eval(validHandler+"(tabViewDiv);");
		if(!retVal){
			return false;
		}
	}
	var parentTabDivs = obj.parentNode;
	var firstTabDiv = parentTabDivs.getElementsByTagName('DIV')[0];
	while(firstTabDiv){
		if(firstTabDiv.id==obj.id){
			if($(obj).find('img').hasClass('tab-refresh')){
				$(obj).find('img').removeClass('tab-refresh');
				$(obj).find('img').addClass('tab-refresh-active');
			}
			firstTabDiv.className='his-tab focussed-tabpane';
		} else {
			firstTabDiv.className='his-tab unfocussed-tabpane';
		}
		firstTabDiv = firstTabDiv.nextSibling;
		while(firstTabDiv){
			if(firstTabDiv.tagName=='DIV' || firstTabDiv.tagName=='div'){
				break;
			}
			firstTabDiv = firstTabDiv.nextSibling;
		}
	}
	var parentTabViewDivs = tabViewDiv.parentNode;
	var allTabViewDivs = parentTabViewDivs.getElementsByTagName('DIV')[0];
	while(allTabViewDivs){
		if(allTabViewDivs.id==tabViewDiv.id){
			allTabViewDivs.style.display='block';
		} else {
			allTabViewDivs.style.display='none';
		}
		allTabViewDivs = allTabViewDivs.nextSibling;
		while(allTabViewDivs){
			if(allTabViewDivs.tagName=='DIV' || allTabViewDivs.tagName=='div'){
				break;
			}
			allTabViewDivs = allTabViewDivs.nextSibling;
		}
	}
	var registerUnMaskInterval=0;
	if(loadOnStart==false){
		var ifrm=document.getElementById("iframe"+conName);
		if(""==ifrm.src || "javascript:%20;"==ifrm.src || "javascript: ;"==ifrm.src || "javascript: \"\";"==ifrm.src){
  		   var u=document.getElementById(staticTxt+"_"+conName+"_hidden").value;
			if(u && TrimString(u).length>0){
				if(typeof(hisNewTabModifySelectedUrl)!='undefined')
					u=hisNewTabModifySelectedUrl(u,conName);
				ifrm.src=u;
			}
			tabMasked = true;
			maskPage(hisNewTabGetOnClickMaskMessage());
		}
	}

	registerUnMaskInterval=4000;

	if(reloadYN){//Reload on every click.
		tabMasked = true;
		maskPage(hisNewTabGetOnClickMaskMessage());
		tabViewDiv.innerHTML=tabViewDiv.innerHTML;
	}
	
	if(hisNewTabRefreshIconReqYesNo(conName)){
		hisNewTabAddRefreshIcon(tabViewDiv,conName);
	}
	var eventHandler = "onNewTabClickEventHandler_"+conName;
	if(eval("typeof("+eventHandler+")")!='undefined'){
		eval(eventHandler+"(tabViewDiv);");
	}
}

//API to set a specific tab as selected from page.
function hisNewTabSetAsSelected(tabname){
	var fullname = "hisnewtab_" + tabname + "_tab";
	var tabObj = document.getElementById(fullname);
	tabObj.onclick();
}


function hisNewTabSetLoadOnClickItem(tabName,urlStr){
	_softTabLoadOnClickItems[tabName]=urlStr;
}

function hisNewTabGetLoadOnClickItem(tabName){
	return _softTabLoadOnClickItems[tabName];
}

function checkIfSoftTabSelected(tabName){
	var tabDivName="hisnewtab_" + tabName + "_tab";
	var o=document.getElementById(tabDivName);
	var clsName=o?o.className:"";
	if("his-tab focussed-tabpane"==clsName){
		return true;
	}else{
		return false;
	}
}


function hisNewTabSetTabForRefreshIcon(tabName){
	_softTabRefreshIconItems[tabName]=tabName;
}

function hisNewTabRefreshIconReqYesNo(tabName){
	var o=_softTabRefreshIconItems[tabName];
	if(o && o==tabName) return true;
	else return false;
}

function hisNewTabAddRefreshIcon(divObj,tabName){
	//Since the refresh icon is added inside tab itself, commented the following lines
	/*var newDiv=document.createElement('div');
	newDiv.id="refreshIconDiv"+tabName;
	newDiv.name="refreshIconDiv"+tabName;
	newDiv.style.backgroundColor="transparent";
	newDiv.style.position="absolute";
	newDiv.style.right="14px";
	newDiv.style.top="36px";
	newDiv.innerHTML="<a href=\"#\" onClick=\"hisNewTabRefreshIconClickHandler('"+tabName+"');\">" + 
			 "<img src=\"/images/refresh-blue.gif\" title=\"Refresh\" name=\"imgRefresh\" width=\"20\"  border=\"0\" value=\"V\" />" + 
			 "</a>";
	divObj.appendChild(newDiv);
	*/
}

function hisNewTabRefreshIconClickHandler(tabName){
	var objView = document.getElementById("hisnewtab_"+tabName+"_divview");
	var div = document.getElementById("hisnewtab_"+tabName+"_tab");
	if($(div).hasClass('focussed-tabpane')){
		objView.innerHTML=objView.innerHTML;
	}	
}


function hisNewTabSetOnClickMaskMessage(message){
	_softTabOnClickMaskMessage=message;
}

function hisNewTabGetOnClickMaskMessage(){
	return _softTabOnClickMaskMessage;
}

//Function to show the tooltip for a control.
//Here the msgObject can either be the message string or the control from which the value 
//	will be taken as the message.
//Inorder work this APIs we need the following script declaration inside the body tag of 
//	the jsp page.
//<script src="../Core_Common/Tooltip/wz_tooltip.js"></script>
function ToolTipMessage(msgObject){
	var message = "";
	if(typeof(msgObject)=='string'){
		message = msgObject;
	} else if(msgObject){
		if(msgObject.tagName=='a' || msgObject.tagName=='A' || 
			msgObject.tagName=='span' || msgObject.tagName=='SPAN' ){
			message = msgObject.innerHTML;
		} else {
			message = msgObject.value;
		}
	}
	message = TrimString(message);
	if(message.length<=0){
		return;
	}
	var htmlString = "<html><head><title></title></head><body><b>" + 
			message + "</b></body></html>";
	Tip(htmlString);
}

//Function to get the url protocol for the window.location.
function getURLProtocol(){
	var protocol = window.location.protocol;
	return protocol;
}

//This API can be called from any HTML pages which is opened from the application as a 
//	popup window. This will set the window title correctly according to our convention.
//PMT # 4897.
////Changed to Amrita UMS by Jisha Jun 9th 2020
function setDocumentTitleForThisWindow(){
	var titlestr = "Amrita UMS - " + document.title;
	document.title = titlestr;
}


/* Function to collapse/expand html rows in a particular section
 * This function assumes that all rows' ids have the same format like 'row0','row1' etc 
 * rowidPrefix : prefix of row id. For the above given sequence it will be 'row'
 * totRows = total number of rows to be collapsed/expanded
 * imgObj = image object which shows a collapsed(+)/expanded(-) image
 */
function collapseOrExpandRows(rowidPrefix,totRows,imgObj){ 

	var imgExpand = "/images/menu_tee_plus1.gif"; 
	var imgCollapse = "/images/menu_tee_minus1.gif";

	for(var i=0;i<totRows;i++){
		var rowObj = document.getElementById(rowidPrefix+i);  	
		var bExpand = rowObj.style.display == 'none';
		rowObj.style.display = (bExpand ? '' : 'none');
		if(imgObj){
			imgObj.src = (bExpand ? imgCollapse : imgExpand);					
		}
	}	
}

/*
   highlight the selected row
*/
function colorSelTDs (colorValue,tds) {
	tdLen = tds.length;	
	for(j=0;j<tdLen;j++) {
		if(typeof tds[j].style != 'undefined'){
			tds[j].style.backgroundColor =colorValue;
		}
		
	}
}



/*
    Function to highlight a single selected row at a time	
    It is not properly working in case of freezed datatable.
    It will hightlight up to freezed td only on basis of selected checkbox
    Added by Dhania 27/02/2009
*/
	function highlightSelRow(rowno,eSrc) {
		var	cntrlName = eSrc.name.substring(0,eSrc.name.lastIndexOf("_")+1);
		var varRow=eSrc.parentNode.parentNode;
		var children=varRow.parentNode.childNodes;
		var chkStatus = eSrc.checked;
		var oldColor = varRow.bgColor;
	    var prevColor ;
		if (chkStatus) {
			eSrc.checked = true;
			colorSelTDs (checkedColor,varRow.childNodes);	
		} else {
			eSrc.checked = false;
			colorSelTDs (oldColor,varRow.childNodes);
		}
		var rowtest=parseInt(rowno);
		var rowCount =getJadeControl("hidRowCount").value;
		var i;
		for(i=0;i<rowCount ;i++){
		  if(rowtest != i ){
			  var cntrlObj = document.forms[0].elements[cntrlName+i];
		  	 if(cntrlObj) {	
		  		if(cntrlObj.checked){		  			
		  			var cntrl = cntrlObj;
		  			var prevRow = cntrl.parentNode.parentNode;
		  			var RowNum ;
		  			if(i+1 == rowCount){
		  				RowNum =i-1;
		  			}else{
		  				RowNum =i+1;
		  			}
		  			var cntrlElt = document.forms[0].elements[cntrlName+RowNum];
		  			if(typeof(cntrlElt)=='undefined'){
		  				RowNum =i-1;
		  				cntrlElt =document.forms[0].elements[cntrlName+RowNum];
		  			}
		  			var rowElt = cntrlElt.parentNode.parentNode;
		  			color = rowElt.childNodes[0].bgColor; 
		  			colorSelTDs (color,prevRow.childNodes);
		  		}		  		
		  		cntrlObj.checked = false;
			 }
		  }
		}
	
}

//JavaScript Function checks for DOM Element visibility
function isObject(obj){
	if(obj && typeof obj.style != "undefined" &&  obj.style.display == 'none'){
		return null;
    }else{
     return obj;
    }
}


/* Gets the value of parameter passed in the url.
   e.g., for the url "ordercom/DrugBrowser.jsp?action=AAA&getMultiple=true",
         when the function is called as getUrlParam("getMultiple"), it returns "true".
*/
function getUrlParam(name) {
    name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
    var regexS = "[\\?&]"+name+"=([^&#]*)";
    var regex = new RegExp( regexS );
    var results = regex.exec( window.location.href );
    if( results == null ) {
        return "";
    } else {
        return results[1];
    }
}


/* Function is used to return java script alert / confirmation /prompt messages from property file.
 * User will able to invoke this from any javascript method just like any other other.
 * coreAlert("ADT-selectdoctor");
 * this message will be 
*/


function coreAlert(msg, title){
	if(msg.indexOf('-') > 0 ){
		var javasciptJsonMessages ;
		if(javascriptJsonObjectForMessages == null){
			javascriptJsonObjectForMessages = new JsonObject();
		}
		var indx = msg.indexOf('-');
		var keyMsg = msg.substring(indx+1);
		    if(typeof javascriptJsonObjectForMessages.get(keyMsg) ==  "undefined"){
				 var locationUrl = location.href;
				 var splitVal = locationUrl.split('/');
				 var url = splitVal[0]+ "/" +splitVal[1]+ "/" +splitVal[2]+ "/" +splitVal[3];
				 javasciptJsonMessages = $.ajax({
					type : "GET",
					url : url+"/HisAppServlet?action=HMOSCORE-GET_JAVASCRIPT_MESSAGES",
					data : "msg=" + msg,
					async: false
				}).responseText;
				javascriptJsonObjectForMessages.put(keyMsg,javasciptJsonMessages);		    	
		    }else{
		    	javasciptJsonMessages = javascriptJsonObjectForMessages.get(keyMsg);
		    }
		    var alertType = 'alertwarning';
		    //return alert(javasciptJsonMessages);
			return jAlert (javasciptJsonMessages,title,alertType);
	}else{
		var alertType = 'alertwarning';
		return jAlert (msg,title,alertType);
		//return alert(msg);
	}
}

/*
 * Need to pass a String and its format to which we are verifying
 * Eg:  1) verifyFormat(1234567891X2345,[N10][{X}][N4])
 *       First 10 digits then a constant 'X' and then 4 digits
 * Eg 2) verifyFormat(12345AB45,[N5][A2][N2])
 *       First 5 digits then a any two alphabets and then 2 digits
 */
function verifyFormat(str,format){
	  if(str.length < 0){
	    return false;
	  }

	  var result = false;

	  var formatArr = format.split('[');
	  for(var i=1;i < formatArr.length ;i++) {
	  if(str.length > 0){
		var temp = formatArr[i];

		if(temp.match(/^[N]/) != null){
	      temp = temp.replace("N","");
	      var len = temp.replace("]","");
	      var regExpr = new RegExp("\\d{"+len+"}", "g") //for digits only
	      if(str.match(regExpr)){
	        str = str.substring(len);
	        result = true;
	      }else{
			return false;
	      }
		} //end if

		else if(temp.match(/^[A]/) != null){
		  temp = temp.replace("A","");
	      var len = temp.replace("]","");
	      var regExpr = new RegExp("\\D{"+len+"}", "gi") // for alphabets only
	      if(str.match(regExpr)){
		    str = str.substring(len);
	        result = true;
		  }else{
			return false;
		  }
		} //end else if

		else {
		   temp = temp.replace("]","");
		   temp = temp.replace("{","");
		   temp = temp.replace("}","");
		   len = temp.length;
		   tempstr = str.substring(0,len);
		   if(tempstr == temp ){
		     str = str.substring(len);
		     result = true;
		   }else{
		    return false;
		   }
		} //end else

	  } //end if
	  else {
		  result = false;
	  } //end else
	 } //end for
	 if(str.length > 0 ){
		 result = false;
	 }
	 return result;
	}


/**
 *  * Developer can call this function to validate all formats
 *  This function will validate any of the formats from the given list
 */
function validateMandatoryFormat(cntrlVal,format) {
	var formatArr = format.split(',');
	for(var i=0;i<formatArr.length;i++){
		var format1 = verifyFormat(cntrlVal,formatArr[i]);
		if(format1 == true) {		
			return format1;
		}else{
			format1 = verifyFormat(cntrlVal,formatArr[i]);
		}
	}
	
	return false;
}

/*
* Verify if any white space is present in that inputString
*/
function hasWhiteSpace(inputString) {
	  return Trim(inputString).indexOf(' ') >= 0;
}

/*
* Validate Address field 
*/
function validateAddress(address){
	if(address == null || address == '') {
	  return false;
	}
	else if(address.length > 35 || !hasWhiteSpace(address) ){
      return false;
	}
	else{
	   return true;
	}
}


function unMaskPage(){
	try{
	$.unblockUI();
	} catch(exception) { }
}

function maskPage(msg){
	if(!msg) msg=null;
	try{
		$.blockUI({ message: msg });
	} catch(exception) { }
	
}

function TrimText(field, maxlimit,event) {
	 if ((event.keyCode != 8 && event.keyCode != 46 && 
				event.keyCode != 37 && event.keyCode != 38 
				&& event.keyCode != 39 && event.keyCode != 40) 
				&& field.value.length >= maxlimit ) 
			       { 
			         event.returnValue=false; 
			         return false;
			       }else{
			    	   event.returnValue = true;
			    	   return true;
			       }
}

function TrimTextPaste(field,maxlimit, event)
{
  var browserName=navigator.appName;
  if (browserName=="Microsoft Internet Explorer")  {
	 	allowed = maxlimit - field.value.length;
	 	window.clipboardData.setData("Text", window.clipboardData.getData("Text").substring(0, allowed));
	 	event.returnValue = true;
  }
	return true;
}

var HisValidator = function(formId) {
	this.formId = formId;
	
	this.init = function (){
		this.formId = formId;
		$("#" + this.formId).validationEngine();	
	}
	
	this.init();
	
	this.validate = function(){
	
		return $("#" + this.formId).validationEngine('validate');
	
	}
	
	this.hideAll = function(){
			$("#" + this.formId).validationEngine('hide');
	}
	this.correctPromptsPosition = function(){
		$("#" + this.formId).validationEngine('correctPromptsPosition');
	}

};

/* Function is used to return java script confirmation /prompt messages from property file.
 * User will able to invoke this from any javascript method just like any other other.
 * coreConfirm("ADT-MRDNotFound");
 * this message will be "Specified MRD Number does not exist."
*/
function coreConfirm(msg){
	if(msg.indexOf('-') > 0 ){
		var javasciptJsonMessages ;
		if(javascriptJsonObjectForMessages == null){
			javascriptJsonObjectForMessages = new JsonObject();
		}
		var indx = msg.indexOf('-');
		var keyMsg = msg.substring(indx+1);
		    if(typeof javascriptJsonObjectForMessages.get(keyMsg) ==  "undefined"){
				 var locationUrl = location.href;
				 var splitVal = locationUrl.split('/');
				 var url = splitVal[0]+ "/" +splitVal[1]+ "/" +splitVal[2]+ "/" +splitVal[3];
				 javasciptJsonMessages = $.ajax({
					type : "GET",
					url : url+"/HisAppServlet?action=HMOSCORE-GET_JAVASCRIPT_MESSAGES",
					data : "msg=" + msg,
					async: false
				}).responseText;
				javascriptJsonObjectForMessages.put(keyMsg,javasciptJsonMessages);		    	
		    }else{
		    	javasciptJsonMessages = javascriptJsonObjectForMessages.get(keyMsg);
		    }
		  return confirm(javasciptJsonMessages);
	}else{
		return confirm(msg);
	}
}

// Neethal : Function for setting cookie from client side
function setCookie(c_name, value, exdays) {
	var exdate = new Date();
	exdate.setDate(exdate.getDate() + exdays);
	var c_value = escape(value)
			+ ((exdays == null) ? "" : "; expires=" + exdate.toUTCString());
	document.cookie = c_name + "=" + c_value + ";path=/";
}

// Neethal :Function for getting cookie
function getCookie(c_name) {
	var i, x, y, ARRcookies = document.cookie.split(";");
	for (i = 0; i < ARRcookies.length; i++) {
		x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
		y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
		x = x.replace(/^\s+|\s+$/g, "");
		if (x == c_name) {
			return unescape(y);
		}
	}
}

// Neethal : Function to delete cookie
function deleteCookie(c_name) {
	document.cookie = c_name
			+ '=;expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/';
	// alert("cookie deleted authorized_token");
}

// Neethal : Function to check whether the window opened is authorized or not
// If tried to open an existing window via a new tab/ new window /copying url
// throws an error page
function checkIfAuthorizedWindow(mainWinName, webContextPath) {
	if (!((navigator.userAgent.indexOf('Android') != -1) || (navigator.userAgent
			.indexOf('iPad') != -1))) {
		if (!isAuthorizedWindow(mainWinName)) {
			// alert("Not an authorized window");
			// Removing onload handlers, to avoid parallel execution while window.location is working asynch.
			window.onload=function(){};
			window.location = webContextPath
					+ "/ErrMultipleWindow.jsp?subWin=true";
		}
	}
}

function isAuthorizedWindow(mainWinName) {
	// alert("inside function isAuthorizedWindow()");
	var tempvalue = mainWinName;
	var isIframe = (window.location != window.parent.location) ? true : false;
	if (window.name == "" && !isIframe) {
		// alert("not an iframe with blank name, proceeding with checking..");
		// if window name is blank and it is not an iframe checking the token.

		var mywindowtoken = getCookie("authorized_token");
		if (mywindowtoken == null) {
			// alert("window name and mywindowtoken are blank url="
			// + window.location.href + " token : " + mywindowtoken);
			return false;
		}
		// window name is blank but token is there.
		// allowing access
		// alert("window name is blank but window token is there.. allowing
		// access ["
		// + mywindowtoken + "]");
		return true;
	} else {
		/*
		 * Comparing the window name with the value from session. If Iframe or
		 * new browser window track its parent Tracking the parent of Iframes
		 * with blank name also
		 */
		var mywindowtoken = getCookie("authorized_token");
		if (mywindowtoken != null) {
			 //alert("window name is not blank and mywindowtoken is there url=" 
			 //+ window.location.href +"window.name = "+ window.name 
			 //+ " token : " + mywindowtoken);
			return true;
		}
		if (window.name == tempvalue) {
			// alert("window.name is same as winname " + window.name + ","
			// + tempvalue);
			return true;
		}
		if (getTopmostWindow().name != tempvalue) {
			// alert("Fail!!topmost window name is not equal to winname"
			// + " topmost window --> " + getTopmostWindow().name
			// + " window name from session --> " + tempvalue);
			return false;
		}
		// For other cases
		return true;
	}
}

function getParent(win) {
	if (win.dialogArguments) { 
		// Internet Explorer supports window.dialogArguments
		 return win.dialogArguments;		
	}else if (win.parent.location == win.location) {
		// alert("browser window");
		// this window is not in an iframe, this is browser window
		// itself
		// so, its parent is - opener
		return win.opener;
	} else {
		// this window is an iframe
		// alert("iframe");
		return win.parent;

	}
}
function getTopmostWindow()

{
	var w = window;
	var p = window;
	var tmp = "";
	while (p != null) {

		tmp = tmp + "--> " + p.name;
		w = p;
		p = getParent(w);

	}
	// alert("track parent: " + tmp);
	return w;

}

function closeMessageBox(){	 
	var vardhxLayout=null;
	if(typeof(dhxLayout)!='undefined'){
		vardhxLayout = dhxLayout;
	}else if(typeof(parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.dhxLayout;
	}else if(typeof(parent.parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.parent.dhxLayout;
	}else if(typeof(parent.parent.parent.dhxLayout)!='undefined'){
		vardhxLayout = parent.parent.parent.dhxLayout;
	}
	if(vardhxLayout!=null){
		vardhxLayout.cells("b").collapse();		
	}    
}

function hisNewTabRefreshIconMOver(obj){
	var div = $(obj).closest( "div" );
	if(div.hasClass('focussed-tabpane')){
		obj.className = 'tab-refresh-activehover';
		obj.src = '/images/blank.gif';
	}else{
		obj.src = 'tab-refreshhover';
		obj.src = '/images/blank.gif';
	}
}
function hisNewTabRefreshIconMOut(obj){
	var div = $(obj).closest( "div" );
	if(div.hasClass('focussed-tabpane')){
		obj.className = 'tab-refresh-active';
		obj.src = '/images/blank.gif';
	}else {
		obj.className = 'tab-refresh';
		obj.src = '/images/blank.gif';
	}
}

function Anchoroffset(elem) {
    if(!elem) elem = this;

    var x = elem.offsetLeft;
    var y = elem.offsetTop;

    while (elem = elem.offsetParent) {
        x += elem.offsetLeft;
        y += elem.offsetTop;
    }
    return y;
}

function handleEnableLinkClickForTree(frameName){
	var i, links, doc;
	var frame = window.frames[frameName];
	if (frame.contentDocument) {
		doc = frame.contentDocument; 
	} else if (frame.contentWindow) {
		doc = frame.contentWindow.document;
	} else if (frame.document) {
		doc = frame.document;
	}

	links = doc.getElementsByTagName('A');
	for (i = 0; i < links.length; i++) {
		var ln = links[i];
		handleEnableLink(ln); 
	}
}


function handleEnableLink(link) { 
 if(link.id){	 
	var oldhref = link.getAttribute('oldhref');
	if(oldhref != null && oldhref != ""){		
		link.setAttribute('href',oldhref);
	}
 }
}

function handleDisableLinkClickForTree(linkObj) { 
	if(linkObj.href != null && linkObj.href !=""){		
		linkObj.setAttribute('oldhref', linkObj.href);
		linkObj.removeAttribute("href"); 
	}
 }

function handleLinkClickForJadeTree(linkName) {
	var linkObj = document.getElementById(linkName);
	if(linkObj.href != null && linkObj.href !=""){	
	  setTimeout(function() {
			handleDisableLinkClickForTree(linkObj);
		}, 100); 
		return true;
	}else{
		return false;
	}
}
var reWhitespace = /^\s+$/;


// BOI, followed by one lower or uppercase English letter, followed by EOI.
var reLetter = /^[a-zA-Z]$/;


// BOI, followed by one or more lower or uppercase English letters, 
// followed by EOI.
var reAlphabetic = /^[a-zA-Z]+$/;


// BOI, followed by one or more lower or uppercase English letters
// or digits, followed by EOI.
var reAlphanumeric = /^[a-zA-Z0-9]+$/;


// BOI, followed by one digit, followed by EOI.
var reDigit = /^\d/;


// BOI, followed by one lower or uppercase English letter
// or digit, followed by EOI.
var reLetterOrDigit = /^([a-zA-Z]|\d)$/;


// BOI, followed by one or more digits, followed by EOI.
var reInteger = /^\d+$/;

//----------var reSignedInteger = /^(+|-)?\d+$/;


// BOI, followed by one of these two patterns:
// (a) one or more digits, followed by ., followed by zero or more digits
// (b) zero or more digits, followed by ., followed by one or more digits
// ... followed by EOI.
var reFloat = /^((\d+(\.\d*)?)|((\d*\.)?\d+))$/;

// BOI, followed by one or more characters, followed by @,
// followed by one or more characters, followed by ., 
// followed by one or more characters, followed by EOI.
var reEmail = /^.+\@.+\..+$/;


var digits = "0123456789";

var lowercaseLetters = "abcdefghijklmnopqrstuvwxyz";

var uppercaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

// whitespace characters as defined by this sample code
var whitespace = " \t\n\r";


// CONSTANT STRING DECLARATIONS
// (grouped for ease of translation and localization)

// m is an abbreviation for "missing"

var mPrefix = "You did not enter a value into the ";
var mSuffix = " field. This is a required field. Please enter it now.";

// s is an abbreviation for "string"

var sUSLastName = "Last Name";
var sUSFirstName = "First Name";
var sWorldLastName = "Family Name";
var sWorldFirstName = "Given Name";
var sTitle = "Title";
var sCompanyName = "Company Name";
var sUSAddress = "Street Address";
var sWorldAddress = "Address";
var sCity = "City";
var sStateCode = "State Code";
var sWorldState = "State, Province, or Prefecture";
var sCountry = "Country";
var sZIPCode = "ZIP Code";
var sWorldPostalCode = "Postal Code";
var sPhone = "Phone Number";
var sFax = "Fax Number";
var sDateOfBirth = "Date of Birth";
var sExpirationDate = "Expiration Date";
var sEmail = "Email";
var sSSN = "Social Security Number";
var sCreditCardNumber = "Credit Card Number";
var sOtherInfo = "Other Information";




// i is an abbreviation for "invalid"

var iStateCode = "This field must be a valid two character U.S. state abbreviation (like CA for California). Please reenter it now.";
var iZIPCode = "This field must be a 5 or 9 digit U.S. ZIP Code (like 94043). Please reenter it now.";
var iUSPhone = "This field must be a 10 digit U.S. phone number (like 415 555 1212). Please reenter it now.";
var iWorldPhone = "This field must be a valid international phone number. Please reenter it now."
var iSSN = "This field must be a 9 digit U.S. social security number (like 123 45 6789). Please reenter it now.";
var iEmail = "This field must be a valid email address (like foo@bar.com). Please reenter it now.";
var iCreditCardPrefix = "This is not a valid "
var iCreditCardSuffix = " credit card number. (Click the link on this form to see a list of sample numbers.) Please reenter it now.";
var iDay = "This field must be a day number between 1 and 31.  Please reenter it now.";
var iMonth = "This field must be a month number between 1 and 12.  Please reenter it now.";
var iYear = "This field must be a 2 or 4 digit year number.  Please reenter it now.";
var iDatePrefix = "The Day, Month, and Year for ";
var iDateSuffix = " do not form a valid date.  Please reenter them now.";



// p is an abbreviation for "prompt"

var pEntryPrompt = "Please enter a ";
var pStateCode = "2 character code (like CA).";
var pZIPCode = "5 or 9 digit U.S. ZIP Code (like 94043).";
var pUSPhone = "10 digit U.S. phone number (like 415 555 1212).";
var pWorldPhone = "international phone number.";
var pSSN = "9 digit U.S. social security number (like 123 45 6789).";
var pEmail = "valid email address (like foo@bar.com).";
var pCreditCard = "valid credit card number.";
var pDay = "day number between 1 and 31.";
var pMonth = "month number between 1 and 12.";
var pYear = "2 or 4 digit year number.";
//sar changed 'var defaultEmptyOK = false;' to 'var defaultEmptyOK = true';
var defaultEmptyOK = true;



function makeArray(n) {
//*** BUG: If I put this line in, I get two error messages:
//(1) Window.length can't be set by assignment
//(2) daysInMonth has no property indexed by 4
//If I leave it out, the code works fine.
//   this.length = n;
   for (var i = 1; i <= n; i++) {
      this[i] = 0;
   } 
   return this;
}



var daysInMonth = makeArray(12);
daysInMonth[1] = 31;
daysInMonth[2] = 29;   // must programmatically check this
daysInMonth[3] = 31;
daysInMonth[4] = 30;
daysInMonth[5] = 31;
daysInMonth[6] = 30;
daysInMonth[7] = 31;
daysInMonth[8] = 31;
daysInMonth[9] = 30;
daysInMonth[10] = 31;
daysInMonth[11] = 30;
daysInMonth[12] = 31;




// Valid U.S. Postal Codes for states, territories, armed forces, etc.
// See http://www.usps.gov/ncsc/lookups/abbr_state.txt.

var USStateCodeDelimiter = "|";
var USStateCodes = "AL|AK|AS|AZ|AR|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VI|VA|WA|WV|WI|WY|AE|AA|AE|AE|AP";




// Check whether string s is empty.

function isEmpty(s)
{
return ((s == null) || (s.length == 0));
}



// Returns true if string s is empty or 
// whitespace characters only.

function isWhitespace (s)

{   // Is s empty?
    return (isEmpty(s) || reWhitespace.test(s));
}



// Removes all characters which appear in regexp bag from string s.
// NOTES:
// 1) bag must be a regexp which matches single characters in isolation,
//    i.e. A or B or C or D or 1 or 2 ...
//    e.g. /\d/g  or /[a-zA-Z]/g
// 2) make sure to append the 'g' modifier (for global search & replace)
//    at the end of the regexp
//    e.g. /\d/g  or /[a-zA-Z]/g

function stripCharsInRE (s, bag)

{       return s.replace(bag, "");
}


// Removes all characters which appear in string bag from string s.

function stripCharsInBag (s, bag)

{   var i;
    var returnString = "";

    // Search through string's characters one by one.
    // If character is not in bag, append to returnString.

    for (i = 0; i < s.length; i++)
    {   
        // Check that current character isn't whitespace.
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }

    return returnString;
}



// Removes all characters which do NOT appear in string bag 
// from string s.

function stripCharsNotInBag (s, bag)

{   var i;
    var returnString = "";

    // Search through string's characters one by one.
    // If character is in bag, append to returnString.

    for (i = 0; i < s.length; i++)
    {   
        // Check that current character isn't whitespace.
        var c = s.charAt(i);
        if (bag.indexOf(c) != -1) returnString += c;
    }

    return returnString;
}



// Removes all whitespace characters from s.
// Global variable whitespace (see above)
// defines which characters are considered whitespace.

function stripWhitespace (s)

{   return stripCharsInBag (s, whitespace);
}




// WORKAROUND FUNCTION FOR NAVIGATOR 2.0.2 COMPATIBILITY.
//
// The below function *should* be unnecessary.  In general,
// avoid using it.  Use the standard method indexOf instead.
//
// However, because of an apparent bug in indexOf on 
// Navigator 2.0.2, the below loop does not work as the
// body of stripInitialWhitespace:
//
// while ((i < s.length) && (whitespace.indexOf(s.charAt(i)) != -1))
//   i++;
//
// ... so we provide this workaround function charInString
// instead.
//
// charInString (CHARACTER c, STRING s)
//
// Returns true if single character c (actually a string)
// is contained within string s.

function charInString (c, s)
{   for (i = 0; i < s.length; i++)
    {   if (s.charAt(i) == c) return true;
    }
    return false;
}



// Removes initial (leading) whitespace characters from s.
// Global variable whitespace (see above)
// defines which characters are considered whitespace.

function stripInitialWhitespace (s)

{   var i = 0;

    while ((i < s.length) && charInString (s.charAt(i), whitespace))
       i++;
    
    return s.substring (i, s.length);
}







// Returns true if character c is an English letter 
// (A .. Z, a..z).
//
// NOTE: Need i18n version to support European characters.
// This could be tricky due to different character
// sets and orderings for various languages and platforms.

function isLetter (c)
{   return reLetter.test(c)
}



// Returns true if character c is a digit 
// (0 .. 9).

function isDigit (c)
{   return reDigit.test(c);
}



// Returns true if character c is a letter or digit.

function isLetterOrDigit (c)
{   return reLetterOrDigit.test(c);
}



// isInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if all characters in string s are numbers.
//
// Accepts non-signed integers only. Does not accept floating 
// point, exponential notation, etc.
//
// We don't use parseInt because that would accept a string
// with trailing non-numeric characters.
//
// By default, returns defaultEmptyOK if s is empty.
// There is an optional second argument called emptyOK.
// emptyOK is used to override for a single function call
//      the default behavior which is specified globally by
//      defaultEmptyOK.
// If emptyOK is false (or any value other than true), 
//      the function will return false if s is empty.
// If emptyOK is true, the function will return true if s is empty.
//
// EXAMPLE FUNCTION CALL:     RESULT:
// isInteger ("5")            true 
// isInteger ("")             defaultEmptyOK
// isInteger ("-5")           false
// isInteger ("", true)       true
// isInteger ("", false)      false
// isInteger ("5", false)     true

function isInteger (s)

{   var i;

    if (isEmpty(s)) 
       if (isInteger.arguments.length == 1) {
      
       return defaultEmptyOK;
       }
       else return (isInteger.arguments[1] == true);

    return reInteger.test(s)
}







// isSignedInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if all characters are numbers; 
// first character is allowed to be + or - as well.
//
// Does not accept floating point, exponential notation, etc.
//
// We don't use parseInt because that would accept a string
// with trailing non-numeric characters.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.
//
// EXAMPLE FUNCTION CALL:          RESULT:
// isSignedInteger ("5")           true 
// isSignedInteger ("")            defaultEmptyOK
// isSignedInteger ("-5")          true
// isSignedInteger ("+5")          true
// isSignedInteger ("", false)     false
// isSignedInteger ("", true)      true

function isSignedInteger (s)

{   
	
     if (isEmpty(s)) 
       if (isSignedInteger.arguments.length == 1) return defaultEmptyOK;
       else return (isSignedInteger.arguments[1] == true);

    
    else {
    	
       return reSignedInteger.test(s)
    }
}




// isPositiveInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is an integer > 0.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isPositiveInteger (s)
{   var secondArg = defaultEmptyOK;

    if (isPositiveInteger.arguments.length > 1)
        secondArg = isPositiveInteger.arguments[1];

    // The next line is a bit byzantine.  What it means is:
    // a) s must be a signed integer, AND
    // b) one of the following must be true:
    //    i)  s is empty and we are supposed to return true for
    //        empty strings
    //    ii) this is a positive, not negative, number

    return (isSignedInteger(s, secondArg)
         && ( (isEmpty(s) && secondArg)  || (parseInt (s) > 0) ) );
}






// isNonnegativeInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is an integer >= 0.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isNonnegativeInteger (s)
{   var secondArg = defaultEmptyOK;

    if (isNonnegativeInteger.arguments.length > 1)
        secondArg = isNonnegativeInteger.arguments[1];

    // The next line is a bit byzantine.  What it means is:
    // a) s must be a signed integer, AND
    // b) one of the following must be true:
    //    i)  s is empty and we are supposed to return true for
    //        empty strings
    //    ii) this is a number >= 0
	
    return (isSignedInteger(s, secondArg)
         && ( (isEmpty(s) && secondArg)  || (parseInt (s) >= 0) ) );
}






// isNegativeInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is an integer < 0.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isNegativeInteger (s)
{   var secondArg = defaultEmptyOK;

    if (isNegativeInteger.arguments.length > 1)
        secondArg = isNegativeInteger.arguments[1];

    // The next line is a bit byzantine.  What it means is:
    // a) s must be a signed integer, AND
    // b) one of the following must be true:
    //    i)  s is empty and we are supposed to return true for
    //        empty strings
    //    ii) this is a negative, not positive, number

    return (isSignedInteger(s, secondArg)
         && ( (isEmpty(s) && secondArg)  || (parseInt (s) < 0) ) );
}






// isNonpositiveInteger (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is an integer <= 0.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isNonpositiveInteger (s)
{   var secondArg = defaultEmptyOK;

    if (isNonpositiveInteger.arguments.length > 1)
        secondArg = isNonpositiveInteger.arguments[1];

    // The next line is a bit byzantine.  What it means is:
    // a) s must be a signed integer, AND
    // b) one of the following must be true:
    //    i)  s is empty and we are supposed to return true for
    //        empty strings
    //    ii) this is a number <= 0

    return (isSignedInteger(s, secondArg)
         && ( (isEmpty(s) && secondArg)  || (parseInt (s) <= 0) ) );
}





// isFloat (STRING s [, BOOLEAN emptyOK])
// 
// True if string s is an unsigned floating point (real) number. 
//
// Also returns true for unsigned integers. If you wish
// to distinguish between integers and floating point numbers,
// first call isInteger, then call isFloat.
//
// Does not accept exponential notation.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isFloat (s)

{   if (isEmpty(s)) 
       if (isFloat.arguments.length == 1) return defaultEmptyOK;
       else return (isFloat.arguments[1] == true);

    return reFloat.test(s);
}







// isSignedFloat (STRING s [, BOOLEAN emptyOK])
// 
// True if string s is a signed or unsigned floating point 
// (real) number. First character is allowed to be + or -.
//
// Also returns true for unsigned integers. If you wish
// to distinguish between integers and floating point numbers,
// first call isSignedInteger, then call isSignedFloat.
//
// Does not accept exponential notation.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isSignedFloat (s)

{   if (isEmpty(s)) 
       if (isSignedFloat.arguments.length == 1) return defaultEmptyOK;
       else return (isSignedFloat.arguments[1] == true);

    else {
       return reSignedFloat.test(s);
    }
}




// isAlphabetic (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is English letters 
// (A .. Z, a..z) only.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.
//
// NOTE: Need i18n version to support European characters.
// This could be tricky due to different character
// sets and orderings for various languages and platforms.

function isAlphabetic (s)

{   var i;

    if (isEmpty(s)) 
       if (isAlphabetic.arguments.length == 1) return defaultEmptyOK;
       else return (isAlphabetic.arguments[1] == true);

    else {
       return reAlphabetic.test(s)
    }
}




// isAlphanumeric (STRING s [, BOOLEAN emptyOK])
// 
// Returns true if string s is English letters 
// (A .. Z, a..z) and numbers only.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.
//
// NOTE: Need i18n version to support European characters.
// This could be tricky due to different character
// sets and orderings for various languages and platforms.

function isAlphanumeric (s)

{   var i;

    if (isEmpty(s)) 
       if (isAlphanumeric.arguments.length == 1) return defaultEmptyOK;
       else return (isAlphanumeric.arguments[1] == true);

    else {
       return reAlphanumeric.test(s);
    }
}




// reformat (TARGETSTRING, STRING, INTEGER, STRING, INTEGER ... )       
//
// Handy function for arbitrarily inserting formatting characters
// or delimiters of various kinds within TARGETSTRING.
//
// reformat takes one named argument, a string s, and any number
// of other arguments.  The other arguments must be integers or
// strings.  These other arguments specify how string s is to be
// reformatted and how and where other strings are to be inserted
// into it.
//
// reformat processes the other arguments in order one by one.
// * If the argument is an integer, reformat appends that number 
//   of sequential characters from s to the resultString.
// * If the argument is a string, reformat appends the string
//   to the resultString.
//
// NOTE: The first argument after TARGETSTRING must be a string.
// (It can be empty.)  The second argument must be an integer.
// Thereafter, integers and strings must alternate.  This is to
// provide backward compatibility to Navigator 2.0.2 JavaScript
// by avoiding use of the typeof operator.
//
// It is the caller's responsibility to make sure that we do not
// try to copy more characters from s than s.length.
//
// EXAMPLES:
//
// * To reformat a 10-digit U.S. phone number from "1234567890"
//   to "(123) 456-7890" make this function call:
//   reformat("1234567890", "(", 3, ") ", 3, "-", 4)
//
// * To reformat a 9-digit U.S. Social Security number from
//   "123456789" to "123-45-6789" make this function call:
//   reformat("123456789", "", 3, "-", 2, "-", 4)
//
// HINT:
//
// If you have a string which is already delimited in one way
// (example: a phone number delimited with spaces as "123 456 7890")
// and you want to delimit it in another way using function reformat,
// call function stripCharsNotInBag to remove the unwanted 
// characters, THEN call function reformat to delimit as desired.
//
// EXAMPLE:
//
// reformat (stripCharsNotInBag ("123 456 7890", digits),
//           "(", 3, ") ", 3, "-", 4)

function reformat (s)

{   var arg;
    var sPos = 0;
    var resultString = "";

    for (var i = 1; i < reformat.arguments.length; i++) {
       arg = reformat.arguments[i];
       if (i % 2 == 1) resultString += arg;
       else {
           resultString += s.substring(sPos, sPos + arg);
           sPos += arg;
       }
    }
    return resultString;
}


// isEmail (STRING s [, BOOLEAN emptyOK])
// 
// Email address must be of form a@b.c -- in other words:
// * there must be at least one character before the @
// * there must be at least one character before and after the .
// * the characters @ and . are both required
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isEmail (s)

{   if (isEmpty(s)) 
       if (isEmail.arguments.length == 1) return defaultEmptyOK;
       else return (isEmail.arguments[1] == true);
    
    else {
       return reEmail.test(s);
    }
}


// isYear (STRING s [, BOOLEAN emptyOK])
// 
// isYear returns true if string s is a valid 
// Year number.  Must be 2 or 4 digits only.
// 
// For Year 2000 compliance, you are advised
// to use 4-digit year numbers everywhere.
//
// And yes, this function is not Year 10000 compliant, but 
// because I am giving you 8003 years of advance notice,
// I don't feel very guilty about this ...
//
// For B.C. compliance, write your own function. ;->
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isYear (s)
{   
	
     if (isEmpty(s)) 
       if (isYear.arguments.length == 1) return defaultEmptyOK;
       else return (isYear.arguments[1] == true);    
    if (!isInteger(s)) return false;    
    return ((s.length == 2) || (s.length == 4));
}



// isIntegerInRange (STRING s, INTEGER a, INTEGER b [, BOOLEAN emptyOK])
// 
// isIntegerInRange returns true if string s is an integer 
// within the range of integer arguments a and b, inclusive.
// 
// For explanation of optional argument emptyOK,
// see comments of function isInteger.


function isIntegerInRange (s, a, b)

{   if (isEmpty(s)) 
       if (isIntegerInRange.arguments.length == 1) {return defaultEmptyOK;}
       else {       
       //sar changed 'return (isIntegerInRange.arguments[1] == true)' to 'isIntegerInRange.arguments[3] == true'
       return (isIntegerInRange.arguments[3] == true)
       };
      

    // Catch non-integer strings to avoid creating a NaN below,
    // which isn't available on JavaScript 1.0 for Windows.
    if (!isInteger(s, false)) return false;
	
    // Now, explicitly change the type to integer via parseInt
    // so that the comparison code below will work both on 
    // JavaScript 1.2 (which typechecks in equality comparisons)
    // and JavaScript 1.1 and before (which doesn't).
   
    var num = parseInt (s);
    num = Number (s); //sar added this line to overwrite the just previous statement var num = parseInt (s);
   
  
    return ((num >= a) && (num <= b));
}



// isMonth (STRING s [, BOOLEAN emptyOK])
// 
// isMonth returns true if string s is a valid 
// month number between 1 and 12.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isMonth (s)
{   if (isEmpty(s)) 

       if (isMonth.arguments.length == 1) return defaultEmptyOK;
       else return (isMonth.arguments[1] == true);
   
    return isIntegerInRange (s, 1, 12);
}



// isDay (STRING s [, BOOLEAN emptyOK])
// 
// isDay returns true if string s is a valid 
// day number between 1 and 31.
// 
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function isDay (s)
{   if (isEmpty(s)) 
       if (isDay.arguments.length == 1) return defaultEmptyOK;
       else return (isDay.arguments[1] == true);   
    return isIntegerInRange (s, 1, 31);
}



// daysInFebruary (INTEGER year)
// 
// Given integer argument year,
// returns number of days in February of that year.

function daysInFebruary (year)
{   // February has 29 days in any year evenly divisible by four,
    // EXCEPT for centurial years which are not also divisible by 400.
    return (  ((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0) ) ) ? 29 : 28 );
}



// isDate (STRING year, STRING month, STRING day)
//
// isDate returns true if string arguments year, month, and day 
// form a valid date.
// 

function isDate (year, month, day)
{   // catch invalid years (not 2- or 4-digit) and invalid months and days.
    
   
    if (! (isYear(year, false) && isMonth(month, false) && isDay(day, false)))   
    return false;
  

    // Explicitly change type to integer to make code work in both
    // JavaScript 1.1 and JavaScript 1.2.
    var intYear = parseInt(year);
    var intMonth = parseInt(month);
    var intDay = parseInt(day);
    
   

    // catch invalid days, except for February
    if (intDay > daysInMonth[intMonth]) return false; 

    if ((intMonth == 2) && (intDay > daysInFebruary(intYear))) return false;

    return true;
}




/* FUNCTIONS TO NOTIFY USER OF INPUT REQUIREMENTS OR MISTAKES. */


// Display prompt string s in status bar.

function prompt (s)
{   window.status = s;
}



// Display data entry prompt string s in status bar.

function promptEntry (s)
{   window.status = pEntryPrompt + s;
}




// Notify user that required field theField is empty.
// String s describes expected contents of theField.value.
// Put focus in theField and return false.

function warnEmpty (theField, s)
{   theField.focus();
    alert(mPrefix + s + mSuffix);
    return false;
}



// Notify user that contents of field theField are invalid.
// String s describes expected contents of theField.value.
// Put select theField, pu focus in it, and return false.

function warnInvalid (theField, s)
{   theField.focus();
    theField.select();
    alert(s);
    return false;
}




/* FUNCTIONS TO INTERACTIVELY CHECK VARIOUS FIELDS. */

// checkString (TEXTFIELD theField, STRING s, [, BOOLEAN emptyOK==false])
//
// Check that string theField.value is not all whitespace.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function checkString (theField, s, emptyOK)
{   // Next line is needed on NN3 to avoid "undefined is not a number" error
    // in equality comparison below.
    if (checkString.arguments.length == 2) emptyOK = defaultEmptyOK;
    if ((emptyOK == true) && (isEmpty(theField.value))) return true;
    if (isWhitespace(theField.value)) 
       return warnEmpty (theField, s);
    else return true;
}


function checkEmail (theField, emptyOK)
{   if (checkEmail.arguments.length == 1) emptyOK = defaultEmptyOK;
    if ((emptyOK == true) && (isEmpty(theField.value))) return true;
    else if (!isEmail(theField.value, false)) 
       return warnInvalid (theField, iEmail);
    else return true;
}

// Check that string theField.value is a valid Year.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function checkYear (theField, emptyOK)
{   if (checkYear.arguments.length == 1) emptyOK = defaultEmptyOK;
    if ((emptyOK == true) && (isEmpty(theField.value))) return true;
    if (!isYear(theField.value, false)) 
       return warnInvalid (theField, iYear);
    else return true;
}


// Check that string theField.value is a valid Month.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function checkMonth (theField, emptyOK)
{   if (checkMonth.arguments.length == 1) emptyOK = defaultEmptyOK;
    if ((emptyOK == true) && (isEmpty(theField.value))) return true;
    if (!isMonth(theField.value, false)) 
       return warnInvalid (theField, iMonth);
    else return true;
}


// Check that string theField.value is a valid Day.
//
// For explanation of optional argument emptyOK,
// see comments of function isInteger.

function checkDay (theField, emptyOK)
{   if (checkDay.arguments.length == 1) emptyOK = defaultEmptyOK;
    if ((emptyOK == true) && (isEmpty(theField.value))) return true;
    if (!isDay(theField.value, false)) 
       return warnInvalid (theField, iDay);
    else return true;
}



// checkDate (yearField, monthField, dayField, STRING labelString [, OKtoOmitDay==false])
//
// Check that yearField.value, monthField.value, and dayField.value 
// form a valid date.
//
// If they don't, labelString (the name of the date, like "Birth Date")
// is displayed to tell the user which date field is invalid.
//
// If it is OK for the day field to be empty, set optional argument
// OKtoOmitDay to true.  It defaults to false.

function checkDate (yearField, monthField, dayField, labelString, OKtoOmitDay)
{   // Next line is needed on NN3 to avoid "undefined is not a number" error
    // in equality comparison below.
    if (checkDate.arguments.length == 4) OKtoOmitDay = false;
    if (!isYear(yearField.value)) return warnInvalid (yearField, iYear);
    if (!isMonth(monthField.value)) return warnInvalid (monthField, iMonth);
    if ( (OKtoOmitDay == true) && isEmpty(dayField.value) ) return true;
    else if (!isDay(dayField.value)) 
       return warnInvalid (dayField, iDay);
    if (isDate (yearField.value, monthField.value, dayField.value))
       return true;
    alert (iDatePrefix + labelString + iDateSuffix);
    return false;
}



// Get checked value from radio button.

function getRadioButtonValue (radio)
{   for (var i = 0; i < radio.length; i++)
    {   if (radio[i].checked) { break ;}
    }
    return radio[i].value;
}


function formValidator (objForm) {
	
	//age
	if (!validateAge(objForm.txtAge)) {
		alert ("Not an Age");
		return false;
	} 
	//dob
	if (!validateDOB(objForm.txtDOB,"/")) {
		alert ("Not a DOB");
		return false;	
	}
	//date
	if (!validateDate(objForm.txtDate,"/")) {
		alert ("Not a Date");
		return false;	
	}
	//email
	if (!validateEmail(objForm.txtEmail)) {
		alert ("Not an Email");
		return false;
	}
	//Name
	if (!validateName(objForm.txtName)) {
		alert ("Not a Name");
		return false;
	}
	//isEmpty
	
	return true;
}
//*************value checkers******************/
//age
function validateAge(objAge) {	
	
	if (isIntegerInRange (objAge.value,0,150,true)) {	
		return true;
	}	
	return false;
	
}

// Added by Ambika for MEDD : Bug Fix # 9049

function validatePinCode(pincode)
{
	var flag=true;
 	if (pincode != "")
	 {
	   var iChars = "0123456789 ";
	   for (var i = 0; i < pincode.length; i++) 
	   {
	   		
	      if (iChars.indexOf(pincode.charAt(i)) != -1)
		     {
				 flag=true;
	         }else{
			     return false;
			 }
		 }
	  }
	  if(flag == true)
	  {
		  return true;
	  }
	
}


function validatePhoneNumber(phoneNumber)
{
  var flag=true;
 	
  if (phoneNumber != "") 
  {
   var iChars = "0123456789+- ";
	 for (var i = 0; i < phoneNumber.length; i++) 
	 {
     	 if (iChars.indexOf(phoneNumber.charAt(i)) != -1)
	  	  {
			 flag = true;
      	  }else
		  {
			 return false;
		  }
	  }
	}
	
	if(flag == true)
	{
		return true;	
	}
	
}

//date
function validateDate (objDate,seperator) {
	
	
	if (isEmpty(objDate.value)) {
		return true;
	}
	var ddMMyyyy = new Array();
	ddMMyyyy = (objDate.value).split(seperator);		
	if (isDate(ddMMyyyy[2],ddMMyyyy[1],ddMMyyyy[0])) {		
		return true;
	}
	return false;		
}

//DOB
function validateDOB (objDOB,seperator) {
	
	if (isEmpty(objDOB.value)) {
		
		return true;
	}
	if (validateDate (objDOB,seperator)) {
		var d = new Date();
		var dd = d.getDate();
		var MM = d.getMonth() + 1;
		var yyyy = d.getFullYear();		
		
		var ddMMyyyy = new Array();
		ddMMyyyy = (objDOB.value).split(seperator);
		
		if (yyyy > ddMMyyyy[2]) {
			return true;
		}
		if (yyyy < ddMMyyyy[2]) {
			return false;
		}
		if (yyyy == ddMMyyyy[2]) {
			
			if (MM > ddMMyyyy [1]) {
				return true;
			}
			if (MM < ddMMyyyy [1]) {
				return false;
			}
			if (MM == ddMMyyyy [1]) {				
				if (dd >= ddMMyyyy[0] ) {					
					return true;
				}
				else {
					return false;
				}
			}
		}
	}
	return false;
}
//Email
function validateEmail (objEmail) {
	if (isEmail(objEmail.value)) {
		return true;
	}
	return false;
}

//name
function validateName (objName) {
	var nameValue = objName.value;
	var i = 0;
	for (i=0;i<nameValue.length;i++) {
		var letter = nameValue.charAt(i)
		if ((!isLetter (letter)) && (letter != " ") && (letter != "'") && (letter != ".")) {
			return false;
		} 
		if (letter == "'") {
			nameValue = nameValue.substring (0,i) + "'" + nameValue.substr (i+1);
			i = i+1;
		}
	}
	return true;	
}

//is Empty
function validateIsNotEmpty (objName) {	
	var varName =  objName.value;
	if (isEmpty(varName)) {		
		return false;
	}
	return true;
}

//is a positive real number
function validateRealNumber (objReal) {
	var varRealNumber = objReal.value;	
	if (!isFloat (varRealNumber) || (varRealNumber <= 0 )) {
		return false;
	}
	return true;
}


// v.2.0 build 81009

/*
 * Copyright DHTMLX LTD. http://www.dhtmlx.com To use this component please
 * contact sales@dhtmlx.com to obtain license
 */
dhtmlxAjax = {
	get : function(url, callback) {
		var t = new dtmlXMLLoaderObject(true);
		t.async = (arguments.length < 3);
		t.waitCall = callback;
		t.loadXML(url)
		return t
	},
	post : function(url, post, callback) {
		var t = new dtmlXMLLoaderObject(true);
		t.async = (arguments.length < 4);
		t.waitCall = callback;
		t.loadXML(url, true, post)
		return t
	},
	getSync : function(url) {
		return this.get(url, null, true)
	},
	postSync : function(url, post) {
		return this.post(url, post, null, true)
	}
};
function dtmlXMLLoaderObject(funcObject, dhtmlObject, async, rSeed) {
	this.xmlDoc = "";
	if (typeof(async) != "undefined")
		this.async = async;
	else
		this.async = true;
	this.onloadAction = funcObject || null;
	this.mainObject = dhtmlObject || null;
	this.waitCall = null;
	this.rSeed = rSeed || false;
	return this
};
dtmlXMLLoaderObject.prototype.waitLoadFunction = function(dhtmlObject) {
	var once = true;
	this.check = function() {
		if ((dhtmlObject) && (dhtmlObject.onloadAction != null)) {
			if ((!dhtmlObject.xmlDoc.readyState)
					|| (dhtmlObject.xmlDoc.readyState == 4)) {
				if (!once)
					return;
				once = false;
				if (typeof dhtmlObject.onloadAction == "function")
					dhtmlObject.onloadAction(dhtmlObject.mainObject, null,
							null, null, dhtmlObject);
				if (dhtmlObject.waitCall) {
					dhtmlObject.waitCall.call(this, dhtmlObject);
					dhtmlObject.waitCall = null
				}
			}
		}
	};
	return this.check
};
dtmlXMLLoaderObject.prototype.getXMLTopNode = function(tagName, oldObj) {
	if (this.xmlDoc.responseXML) {
		var temp = this.xmlDoc.responseXML.getElementsByTagName(tagName);
		if (temp.length == 0 && tagName.indexOf(":") != -1)
			var temp = this.xmlDoc.responseXML.getElementsByTagName((tagName
					.split(":"))[1]);
		var z = temp[0]
	} else
		var z = this.xmlDoc.documentElement;
	if (z) {
		this._retry = false;
		return z
	};
	if ((_isIE) && (!this._retry)) {
		var xmlString = this.xmlDoc.responseText;
		var oldObj = this.xmlDoc;
		this._retry = true;
		this.xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
		this.xmlDoc.async = false;
		this.xmlDoc["loadXM" + "L"](xmlString);
		return this.getXMLTopNode(tagName, oldObj)
	};
	dhtmlxError.throwError("LoadXML", "Incorrect XML", [
					(oldObj || this.xmlDoc), this.mainObject]);
	return document.createElement("DIV")
};
dtmlXMLLoaderObject.prototype.loadXMLString = function(xmlString) {
	{
		try {
			var parser = new DOMParser();
			this.xmlDoc = parser.parseFromString(xmlString, "text/xml")
		} catch (e) {
			this.xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
			this.xmlDoc.async = this.async;
			this.xmlDoc["loadXM" + "L"](xmlString)
		}
	};
	this.onloadAction(this.mainObject, null, null, null, this);
	if (this.waitCall) {
		this.waitCall();
		this.waitCall = null
	}
};
dtmlXMLLoaderObject.prototype.loadXML = function(filePath, postMode, postVars,
		rpc) {
	if (this.rSeed)
		filePath += ((filePath.indexOf("?") != -1) ? "&" : "?")
				+ "a_dhx_rSeed=" + (new Date()).valueOf();
	this.filePath = filePath;
	if ((!_isIE) && (window.XMLHttpRequest))
		this.xmlDoc = new XMLHttpRequest();
	else {		
	  if (document.implementation && document.implementation.createDocument && !_isIE11) {		 
			this.xmlDoc = document.implementation.createDocument("", "", null);			
			this.xmlDoc.onload = new this.waitLoadFunction(this);
			this.xmlDoc.load(filePath);
			return
		} else
			this.xmlDoc = new ActiveXObject("Microsoft.XMLHTTP");
	};
	if (this.async)
		this.xmlDoc.onreadystatechange = new this.waitLoadFunction(this);
	this.xmlDoc.open(postMode ? "POST" : "GET", filePath, this.async);
	if (rpc) {
		this.xmlDoc.setRequestHeader("User-Agent", "dhtmlxRPC v0.1 ("
						+ navigator.userAgent + ")");
		this.xmlDoc.setRequestHeader("Content-type", "text/xml")
	} else if (postMode)
		this.xmlDoc.setRequestHeader('Content-type',
				'application/x-www-form-urlencoded');
	this.xmlDoc.setRequestHeader("X-Requested-With", "XMLHttpRequest");
	this.xmlDoc.send(null || postVars);
	if (!this.async)
		(new this.waitLoadFunction(this))()
};
dtmlXMLLoaderObject.prototype.destructor = function() {
	this.onloadAction = null;
	this.mainObject = null;
	this.xmlDoc = null;
	return null
};
dtmlXMLLoaderObject.prototype.xmlNodeToJSON = function(node) {
	var t = {};
	for (var i = 0; i < node.attributes.length; i++)
		t[node.attributes[i].name] = node.attributes[i].value;
	t["_tagvalue"] = node.firstChild ? node.firstChild.nodeValue : "";
	for (var i = 0; i < node.childNodes.length; i++) {
		var name = node.childNodes[i].tagName;
		if (name) {
			if (!t[name])
				t[name] = [];
			t[name].push(this.xmlNodeToJSON(node.childNodes[i]))
		}
	};
	return t
};
function callerFunction(funcObject, dhtmlObject) {
	this.handler = function(e) {
		if (!e)
			e = window.event;
		funcObject(e, dhtmlObject);
		return true
	};
	return this.handler
};
function getAbsoluteLeft(htmlObject) {
	var xPos = htmlObject.offsetLeft;
	var temp = htmlObject.offsetParent;
	while (temp != null) {
		xPos += temp.offsetLeft;
		temp = temp.offsetParent
	};
	return xPos
};
function getAbsoluteTop(htmlObject) {
	var yPos = htmlObject.offsetTop;
	var temp = htmlObject.offsetParent;
	while (temp != null) {
		yPos += temp.offsetTop;
		temp = temp.offsetParent
	};
	return yPos
};
function convertStringToBoolean(inputString) {
	if (typeof(inputString) == "string")
		inputString = inputString.toLowerCase();
	switch (inputString) {
		case "1" :
		case "true" :
		case "yes" :
		case "y" :
		case 1 :
		case true :
			return true;
			break;
		default :
			return false
	}
};
function getUrlSymbol(str) {
	if (str.indexOf("?") != -1)
		return "&"
	else
		return "?"
};
function dhtmlDragAndDropObject() {
	if (window.dhtmlDragAndDrop)
		return window.dhtmlDragAndDrop;
	this.lastLanding = 0;
	this.dragNode = 0;
	this.dragStartNode = 0;
	this.dragStartObject = 0;
	this.tempDOMU = null;
	this.tempDOMM = null;
	this.waitDrag = 0;
	window.dhtmlDragAndDrop = this;
	return this
};
dhtmlDragAndDropObject.prototype.removeDraggableItem = function(htmlNode) {
	htmlNode.onmousedown = null;
	htmlNode.dragStarter = null;
	htmlNode.dragLanding = null
};
dhtmlDragAndDropObject.prototype.addDraggableItem = function(htmlNode,
		dhtmlObject) {
	htmlNode.onmousedown = this.preCreateDragCopy;
	htmlNode.dragStarter = dhtmlObject;
	this.addDragLanding(htmlNode, dhtmlObject)
};
dhtmlDragAndDropObject.prototype.addDragLanding = function(htmlNode,
		dhtmlObject) {
	htmlNode.dragLanding = dhtmlObject
};
dhtmlDragAndDropObject.prototype.preCreateDragCopy = function(e) {
	if (e && (e || event).button == 2)
		return;
	if (window.dhtmlDragAndDrop.waitDrag) {
		window.dhtmlDragAndDrop.waitDrag = 0;
		document.body.onmouseup = window.dhtmlDragAndDrop.tempDOMU;
		document.body.onmousemove = window.dhtmlDragAndDrop.tempDOMM;
		return false
	};
	window.dhtmlDragAndDrop.waitDrag = 1;
	window.dhtmlDragAndDrop.tempDOMU = document.body.onmouseup;
	window.dhtmlDragAndDrop.tempDOMM = document.body.onmousemove;
	window.dhtmlDragAndDrop.dragStartNode = this;
	window.dhtmlDragAndDrop.dragStartObject = this.dragStarter;
	document.body.onmouseup = window.dhtmlDragAndDrop.preCreateDragCopy;
	document.body.onmousemove = window.dhtmlDragAndDrop.callDrag;
	if ((e) && (e.preventDefault)) {
		e.preventDefault();
		return false
	};
	return false
};
dhtmlDragAndDropObject.prototype.callDrag = function(e) {
	if (!e)
		e = window.event;
	dragger = window.dhtmlDragAndDrop;
	if ((e.button == 0) && (_isIE))
		return dragger.stopDrag();
	if (!dragger.dragNode && dragger.waitDrag) {
		dragger.dragNode = dragger.dragStartObject._createDragNode(
				dragger.dragStartNode, e);
		if (!dragger.dragNode)
			return dragger.stopDrag();
		dragger.gldragNode = dragger.dragNode;
		document.body.appendChild(dragger.dragNode);
		document.body.onmouseup = dragger.stopDrag;
		dragger.waitDrag = 0;
		dragger.dragNode.pWindow = window;
		dragger.initFrameRoute()
	};
	if (dragger.dragNode.parentNode != window.document.body) {
		var grd = dragger.gldragNode;
		if (dragger.gldragNode.old)
			grd = dragger.gldragNode.old;
		grd.parentNode.removeChild(grd);
		var oldBody = dragger.dragNode.pWindow;
		if (_isIE) {
			var div = document.createElement("Div");
			div.innerHTML = dragger.dragNode.outerHTML;
			dragger.dragNode = div.childNodes[0]
		} else
			dragger.dragNode = dragger.dragNode.cloneNode(true);
		dragger.dragNode.pWindow = window;
		dragger.gldragNode.old = dragger.dragNode;
		document.body.appendChild(dragger.dragNode);
		oldBody.dhtmlDragAndDrop.dragNode = dragger.dragNode
	};
	dragger.dragNode.style.left = e.clientX + 15
			+ (dragger.fx ? dragger.fx * (-1) : 0)
			+ (document.body.scrollLeft || document.documentElement.scrollLeft)
			+ "px";
	dragger.dragNode.style.top = e.clientY + 3
			+ (dragger.fy ? dragger.fy * (-1) : 0)
			+ (document.body.scrollTop || document.documentElement.scrollTop)
			+ "px";
	if (!e.srcElement)
		var z = e.target;
	else
		z = e.srcElement;
	dragger.checkLanding(z, e)
};
dhtmlDragAndDropObject.prototype.calculateFramePosition = function(n) {
	if (window.name) {
		var el = parent.frames[window.name].frameElement.offsetParent;
		var fx = 0;
		var fy = 0;
		while (el) {
			fx += el.offsetLeft;
			fy += el.offsetTop;
			el = el.offsetParent
		};
		if ((parent.dhtmlDragAndDrop)) {
			var ls = parent.dhtmlDragAndDrop.calculateFramePosition(1);
			fx += ls.split('_')[0] * 1;
			fy += ls.split('_')[1] * 1
		};
		if (n)
			return fx + "_" + fy;
		else
			this.fx = fx;
		this.fy = fy
	};
	return "0_0"
};
dhtmlDragAndDropObject.prototype.checkLanding = function(htmlObject, e) {
	if ((htmlObject) && (htmlObject.dragLanding)) {
		if (this.lastLanding)
			this.lastLanding.dragLanding._dragOut(this.lastLanding);
		this.lastLanding = htmlObject;
		this.lastLanding = this.lastLanding.dragLanding._dragIn(
				this.lastLanding, this.dragStartNode, e.clientX, e.clientY, e);
		this.lastLanding_scr = (_isIE ? e.srcElement : e.target)
	} else {
		if ((htmlObject) && (htmlObject.tagName != "BODY"))
			this.checkLanding(htmlObject.parentNode, e);
		else {
			if (this.lastLanding)
				this.lastLanding.dragLanding._dragOut(this.lastLanding,
						e.clientX, e.clientY, e);
			this.lastLanding = 0;
			if (this._onNotFound)
				this._onNotFound()
		}
	}
};
dhtmlDragAndDropObject.prototype.stopDrag = function(e, mode) {
	dragger = window.dhtmlDragAndDrop;
	if (!mode) {
		dragger.stopFrameRoute();
		var temp = dragger.lastLanding;
		dragger.lastLanding = null;
		if (temp)
			temp.dragLanding._drag(dragger.dragStartNode,
					dragger.dragStartObject, temp, (_isIE
							? event.srcElement
							: e.target))
	};
	dragger.lastLanding = null;
	if ((dragger.dragNode) && (dragger.dragNode.parentNode == document.body))
		dragger.dragNode.parentNode.removeChild(dragger.dragNode);
	dragger.dragNode = 0;
	dragger.gldragNode = 0;
	dragger.fx = 0;
	dragger.fy = 0;
	dragger.dragStartNode = 0;
	dragger.dragStartObject = 0;
	document.body.onmouseup = dragger.tempDOMU;
	document.body.onmousemove = dragger.tempDOMM;
	dragger.tempDOMU = null;
	dragger.tempDOMM = null;
	dragger.waitDrag = 0
};
dhtmlDragAndDropObject.prototype.stopFrameRoute = function(win) {
	if (win)
		window.dhtmlDragAndDrop.stopDrag(1, 1);
	for (var i = 0; i < window.frames.length; i++)
		if ((window.frames[i] != win) && (window.frames[i].dhtmlDragAndDrop))
			window.frames[i].dhtmlDragAndDrop.stopFrameRoute(window);
	if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != win))
		parent.dhtmlDragAndDrop.stopFrameRoute(window)
};
dhtmlDragAndDropObject.prototype.initFrameRoute = function(win, mode) {
	if (win) {
		window.dhtmlDragAndDrop.preCreateDragCopy();
		window.dhtmlDragAndDrop.dragStartNode = win.dhtmlDragAndDrop.dragStartNode;
		window.dhtmlDragAndDrop.dragStartObject = win.dhtmlDragAndDrop.dragStartObject;
		window.dhtmlDragAndDrop.dragNode = win.dhtmlDragAndDrop.dragNode;
		window.dhtmlDragAndDrop.gldragNode = win.dhtmlDragAndDrop.dragNode;
		window.document.body.onmouseup = window.dhtmlDragAndDrop.stopDrag;
		window.waitDrag = 0;
		if (((!_isIE) && (mode)) && ((!_isFF) || (_FFrv < 1.8)))
			window.dhtmlDragAndDrop.calculateFramePosition()
	};
	if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != win))
		parent.dhtmlDragAndDrop.initFrameRoute(window);
	for (var i = 0; i < window.frames.length; i++)
		if ((window.frames[i] != win) && (window.frames[i].dhtmlDragAndDrop))
			window.frames[i].dhtmlDragAndDrop.initFrameRoute(window,
					((!win || mode) ? 1 : 0))
};
var _isFF = false;
var _isIE = false;
var _isOpera = false;
var _isKHTML = false;
var _isMacOS = false;
var _isIE11 = false;
if (navigator.userAgent.indexOf('Macintosh') != -1)
	_isMacOS = true;
if ((navigator.userAgent.indexOf('Safari') != -1)
		|| (navigator.userAgent.indexOf('Konqueror') != -1)) {
	var _KHTMLrv = parseFloat(navigator.userAgent.substr(navigator.userAgent
					.indexOf('Safari')
					+ 7, 5));
	if (_KHTMLrv > 525) {
		_isFF = true;
		var _FFrv = 1.9
	} else
		_isKHTML = true
} else if (navigator.userAgent.indexOf('Opera') != -1) {
	_isOpera = true;
	_OperaRv = parseFloat(navigator.userAgent.substr(navigator.userAgent
					.indexOf('Opera')
					+ 6, 3))
} else if (navigator.appName.indexOf("Microsoft") != -1 || (navigator.userAgent.indexOf("Trident") >= 0 && window.navigator.pointerEnabled == true))
	_isIE = true;
else {
	_isFF = true;
	var _FFrv = parseFloat(navigator.userAgent.split("rv:")[1])
};
if(navigator.userAgent.indexOf("Trident") >= 0 && window.navigator.pointerEnabled == true){
	_isIE11 = true;
}
function isIE() {
	if (navigator.appName.indexOf("Microsoft") != -1)
		if (navigator.userAgent.indexOf('Opera') == -1)
		 if	(navigator.userAgent.indexOf("Trident") >= 0 && window.navigator.pointerEnabled == true)	
			return true;
	return false
};
dtmlXMLLoaderObject.prototype.doXPath = function(xpathExp, docObj, namespace,
		result_type) {
	if ((_isKHTML))
		return this.doXPathOpera(xpathExp, docObj);
	if (_isIE) {
		if (!docObj)
			if (!this.xmlDoc.nodeName)
				docObj = this.xmlDoc.responseXML
			else
				docObj = this.xmlDoc;
		if (!docObj)
			dhtmlxError.throwError("LoadXML", "Incorrect XML", [
							(docObj || this.xmlDoc), this.mainObject]);
		if (namespace != null)
			docObj.setProperty("SelectionNamespaces", "xmlns:xsl='" + namespace
							+ "'");
		if (result_type == 'single') {
			return docObj.selectSingleNode(xpathExp)
		} else {
			return docObj.selectNodes(xpathExp) || new Array(0)
		}
	} else {
		var nodeObj = docObj;
		if (!docObj) {
			if (!this.xmlDoc.nodeName) {
				docObj = this.xmlDoc.responseXML
			} else {
				docObj = this.xmlDoc
			}
		};
		if (!docObj)
			dhtmlxError.throwError("LoadXML", "Incorrect XML", [
							(docObj || this.xmlDoc), this.mainObject]);
		if (docObj.nodeName.indexOf("document") != -1) {
			nodeObj = docObj
		} else {
			nodeObj = docObj;
			docObj = docObj.ownerDocument
		};
		var retType = XPathResult.ANY_TYPE;
		if (result_type == 'single')
			retType = XPathResult.FIRST_ORDERED_NODE_TYPE
		var rowsCol = new Array();
		var col = docObj.evaluate(xpathExp, nodeObj, function(pref) {
					return namespace
				}, retType, null);
		if (retType == XPathResult.FIRST_ORDERED_NODE_TYPE) {
			return col.singleNodeValue
		};
		var thisColMemb = col.iterateNext();
		while (thisColMemb) {
			rowsCol[rowsCol.length] = thisColMemb;
			thisColMemb = col.iterateNext()
		};
		return rowsCol
	}
};
function _dhtmlxError(type, name, params) {
	if (!this.catches)
		this.catches = new Array();
	return this
};
_dhtmlxError.prototype.catchError = function(type, func_name) {
	this.catches[type] = func_name
};
_dhtmlxError.prototype.throwError = function(type, name, params) {
	if (this.catches[type])
		return this.catches[type](type, name, params);
	if (this.catches["ALL"])
		return this.catches["ALL"](type, name, params);
	alert("Error type: " + arguments[0] + "\nDescription: " + arguments[1]);
	return null
};
window.dhtmlxError = new _dhtmlxError();
dtmlXMLLoaderObject.prototype.doXPathOpera = function(xpathExp, docObj) {
	var z = xpathExp.replace(/[\/]+/gi, "/").split('/');
	var obj = null;
	var i = 1;
	if (!z.length)
		return [];
	if (z[0] == ".")
		obj = [docObj];
	else if (z[0] == "") {
		obj = (this.xmlDoc.responseXML || this.xmlDoc)
				.getElementsByTagName(z[i].replace(/\[[^\]]*\]/g, ""));
		i++
	} else
		return [];
	for (i; i < z.length; i++)
		obj = this._getAllNamedChilds(obj, z[i]);
	if (z[i - 1].indexOf("[") != -1)
		obj = this._filterXPath(obj, z[i - 1]);
	return obj
};
dtmlXMLLoaderObject.prototype._filterXPath = function(a, b) {
	var c = new Array();
	var b = b.replace(/[^\[]*\[\@/g, "").replace(/[\[\]\@]*/g, "");
	for (var i = 0; i < a.length; i++)
		if (a[i].getAttribute(b))
			c[c.length] = a[i];
	return c
};
dtmlXMLLoaderObject.prototype._getAllNamedChilds = function(a, b) {
	var c = new Array();
	if (_isKHTML)
		b = b.toUpperCase();
	for (var i = 0; i < a.length; i++)
		for (var j = 0; j < a[i].childNodes.length; j++) {
			if (_isKHTML) {
				if (a[i].childNodes[j].tagName
						&& a[i].childNodes[j].tagName.toUpperCase() == b)
					c[c.length] = a[i].childNodes[j]
			} else if (a[i].childNodes[j].tagName == b)
				c[c.length] = a[i].childNodes[j]
		};
	return c
};
function dhtmlXHeir(a, b) {
	for (var c in b)
		if (typeof(b[c]) == "function")
			a[c] = b[c];
	return a
};
function dhtmlxEvent(el, event, handler) {
	if (el.addEventListener)
		el.addEventListener(event, handler, false);
	else if (el.attachEvent)
		el.attachEvent("on" + event, handler)
};
dtmlXMLLoaderObject.prototype.xslDoc = null;
dtmlXMLLoaderObject.prototype.setXSLParamValue = function(paramName,
		paramValue, xslDoc) {
	if (!xslDoc)
		xslDoc = this.xslDoc

	if (xslDoc.responseXML)
		xslDoc = xslDoc.responseXML;
	var item = this.doXPath("/xsl:stylesheet/xsl:variable[@name='" + paramName
					+ "']", xslDoc, "http:/\/www.w3.org/1999/XSL/Transform",
			"single");
	if (item != null)
		item.firstChild.nodeValue = paramValue
};
dtmlXMLLoaderObject.prototype.doXSLTransToObject = function(xslDoc, xmlDoc) {
	if (!xslDoc)
		xslDoc = this.xslDoc;
	if (xslDoc.responseXML)
		xslDoc = xslDoc.responseXML

	if (!xmlDoc)
		xmlDoc = this.xmlDoc;
	if (xmlDoc.responseXML)
		xmlDoc = xmlDoc.responseXML

	if (!isIE()) {
		if (!this.XSLProcessor) {
			this.XSLProcessor = new XSLTProcessor();
			this.XSLProcessor.importStylesheet(xslDoc)
		};
		var result = this.XSLProcessor.transformToDocument(xmlDoc)
	} else {
		var result = new ActiveXObject("Msxml2.DOMDocument.3.0");
		xmlDoc.transformNodeToObject(xslDoc, result)
	};
	return result
};
dtmlXMLLoaderObject.prototype.doXSLTransToString = function(xslDoc, xmlDoc) {
	return this.doSerialization(this.doXSLTransToObject(xslDoc, xmlDoc))
};
dtmlXMLLoaderObject.prototype.doSerialization = function(xmlDoc) {
	if (!xmlDoc)
		xmlDoc = this.xmlDoc;
	if (xmlDoc.responseXML)
		xmlDoc = xmlDoc.responseXML
	if (!isIE()) {
		var xmlSerializer = new XMLSerializer();
		return xmlSerializer.serializeToString(xmlDoc)
	} else
		return xmlDoc.xml
};// (c)dhtmlx ltd. www.dhtmlx.com
// v.2.0 build 81009

/*
 * Copyright DHTMLX LTD. http://www.dhtmlx.com To use this component please
 * contact sales@dhtmlx.com to obtain license
 *///v.1.3 build 81009


window.dhx_globalImgPath="/images/";
var focusComboId="";

var no_onchange_objects=new Array();
var no_onchange_index=0;


/**
  * This method can be used in any JSP, if we want an autocomplete control should not call its onchange on 
  *  every option selection with down arrow key.
  * The parameter "name" is the control name like 'htmlPageTopContainer_services" etc.
  * No need of giving row number, if the control is inside datatable.
  *
  * This API is no longer used in this version of dhtmlxcombo.
  */
function setNoOnchangeOnTraversal(name){
	no_onchange_objects[no_onchange_index]=name;
	no_onchange_index+=1;
}



/**
  * @author thej 07/05/07
  * create the dhtmlxcombo
 */
function doDhtmlComboOnLoad(autocompleteinfo,parent,name,url,width,keyValue,textValue,enabled,maxSeverSubmissionTextLength,minSeverSubmissionTextLength,pagekey,controlName,searchInEachWord){
  if(width && width < 0) width=150;//Set the default width for this control, if not specified in JSP.
 // setDhtmlComboValue(name,keyValue,textValue);
 

  var doOnMouseUp = getDhtmlComboOnMouseUpEventHandler(name);
  var doOnKeydown = getDhtmlComboOnKeydownEventHandler(name);
  var w= new dhtmlXCombo(parent,name,width); 
  setDhtmlComboValue(w,name,keyValue,textValue);
  if(focusComboId == parent ){
  	if(enabled){
  		w.DOMelem_input.focus();
  		w.DOMelem_input.select();
  		setFocus = false;
  		focusComboId = null;
  	}
  }	
  if(typeof(doOnMouseUp)=='function'){
  	if(_isIE && !_isIE11) w.DOMelem_input.attachEvent('onkeyup',doOnMouseUp);
  	else w.DOMelem_input.addEventListener('keyup',doOnMouseUp,false);
  }
  
  
  if(typeof(doOnKeydown)=='function'){
      	if(_isIE && !_isIE11) w.DOMelem_input.attachEvent('onkeydown',doOnKeydown);
      	else w.DOMelem_input.addEventListener('keydown',doOnKeydown,false);
  }
  w.autocompleteinfo = autocompleteinfo;  
  comboMap.Set(parent,w);
  if( searchInEachWord){
      w.enableFilteringMode(true,url,false,false);
  }else{
      w.enableFilteringMode(true,url,true,false);
  }
  
  w.maxSeverSubmissionTextLength=maxSeverSubmissionTextLength;
  w.minSeverSubmissionTextLength=minSeverSubmissionTextLength;
  w.pagekey = pagekey;
  w.controlName=controlName;
  if(!enabled) setComboDisabled(name,true);
  return w;
}



function getDhtmlComboOnMouseUpEventHandler(comboname){
	var comboid = comboname+"_combo";
	var obj = document.getElementById(comboid);
	if(obj){
		return obj.onkeyup;
	}
}


function getDhtmlComboOnKeydownEventHandler(comboname){
	var comboid = comboname+"_combo";
	var obj = document.getElementById(comboid);
	if(obj){
		return obj.onkeydown;
	}
}

/**
  * @author thej 07/05/07
  * A HashMap equivalent to set comboid - comboObject combination
  */
var comboMap = {
	Set : function(key,value) {this[key] = value;},
	Get : function(key) {return this[key];}
}

/**
  * @author Priya 
  * A HashMap to set comboid - default keyValue combination
  */
var comboDefaultKey = {
	Set : function(key,value) {this[key] = value;},
	Get : function(key) {return this[key];}
}

/**
  * @author thej 07/05/07
  * function to get the value from a combo
  */
function getComboValue(id){
	id = id + "_combo";	
	var comboobj = comboMap.Get(id);
	return comboobj.getSelectedValue(); 
}

/**
  * @author thej 07/05/07
  * function to set the value to a combo
  */

function setComboValue(id,keyValue,textValue){
	var inputName = id;
	id = id + "_combo";
	var comboobj = comboMap.Get(id);
	if(comboobj != null ){ // Set the default selected value 09/05/2007 thej
		comboobj.setComboText(textValue); 		
		comboobj.setSelectedValue(keyValue,textValue);
		comboobj.setSelectedText(textValue); 
	}else {
		var selObj=document.getElementById(id);
		if(selObj){
			selObj.options[0].text=textValue;
			selObj.options[0].value=keyValue;
			selObj.selectedIndex=-1;
		}
	} 		
}

/**
  * @author priya
  * this function should not use outside this dhtmlXCombo.js file
  * this function is to set the default values of an ajax autocomplete at first time
  */
function setDhtmlComboValue(dhtmlxObj,comboname,keyValue,textValue){
	var comboid = comboname+"_combo";
	var x=new Array();
	x[0]={value:keyValue,text:textValue};
	dhtmlxObj.addOption(x);
	
	var objHid = document.getElementById(comboname);
	if(objHid){
		objHid.value=keyValue;
	}
	
	dhtmlxObj.selectOption(0,null,true);
	comboDefaultKey.Set(comboid,keyValue);
}
 
dhtmlXCombo.prototype.getSelectedValue = function(){
 	return(this._selOption?this._selOption.value:null);
}
 
 
/**
  *
  * @author thej 09/05/2007
  * set the selected value
  */
 dhtmlXCombo.prototype.setSelectedValue = function(val,textVal){
 	if(this._selOption){
 		this._selOption.value = val;
 		this._selOption.text = textVal;
 	}else if( this.optionsArr != null && this.optionsArr.length > 0 ){
 		// set selOption as first option. we should have a _selOption for setting 
 		// the selected value -- unni 27/11/2009 Bug#18993
 		this._selOption = this.optionsArr[0];
 		this._selOption.value = val;
 		this._selOption.text = textVal;
 		
 	}else{
 	        // If there is no option array available, create new option array
 	        // and selOption Object. -- unni 27/11/2009 Bug#18993
 		var x=new Array();
 		x[0]={value:0,text:""};
 		this.addOption(x);
 		this._selOption = this.optionsArr[0];
 		this._selOption.value = val;
 		this._selOption.text = textVal;
 	}
 	this.setComboValue(val); 
 	
} 

/**
  *
  * @author thej 09/05/2007
  * set the selected text
  */
 dhtmlXCombo.prototype.setSelectedText = function(val){
 	if(this._selOption){
 		this._selOption.text = val;
 	}
 	
 	this.setComboText(val); 			
}

/**
  * @author thej 07/05/07
  * sets focus to the combo
  * to work correctly, this method should be called from controller through writeScript.
  */
function setComboFocus(comboid){
   	focusComboId = comboid;
} 

/**
 * Added by Dhania 21 May 2013
 * Function used to set focus to auto complete control from jsp
 * Define an autocomplete as below
 * <his:autocomplete name="drugDesc" classname="autocomplete" size="45" enableajax="true" --- />
 * var compName = "htmlPageTopContainer_medOrderContainer_drugDesc";
 * setDhtmlComboFocus(compName);
 */
function setDhtmlComboFocus(id){
	   var compObj = id + "_input";
	   var obj = document.getElementById(compObj);
	   obj.focus();	
}

function setComboDisabled(id,value){
	id = id + "_combo";
	var comboobj = comboMap.Get(id);
	if(comboobj != null ){
		 comboobj.DOMelem_input.disabled = value; //Changed by thej
		 comboobj._disabled = value;
		// comboobj.disable("1");
	}
	
}

/**
  * @author thej 07/05/07
  * function to get the value from a combo
  */
function getComboTextValue(id){
	id = id + "_combo";
	var comboobj = comboMap.Get(id);	
	return comboobj.getSelectedText(); 
}
/**
  * @author unni 23/10/2009
  * For clearing the combo
  */
function clearCombo(id){
	var inputName = id;
	id = id + "_combo";
	var comboobj = comboMap.Get(id);
	if( comboobj != null ){
		comboobj.clearAll();
		comboobj.setComboText(""); 		
		comboobj.setSelectedText(""); 
		comboobj.setSelectedValue("",""); 
		comboobj._xmlCache=[];
	}
}

function URLencode(sStr) {
    return sStr.replace(/\%/g, '%25');
}

  
/*********************************************************************************************************************/
/**
*  Build combobox from existing select control.
*
*
*  @param   parent      {string} id of existing select control
*  @param   size      {int } size of control, optional
*  @return            {object} combobox object
*  @type   public
*  @topic   0
*
*/

function dhtmlXComboFromSelect(parent,size){
		
   if (typeof(parent)=="string")
      parent=document.getElementById(parent);
   	   
   size=size||parent.getAttribute("width")||(window.getComputedStyle?window.getComputedStyle(parent,null)["width"]:(parent.currentStyle?parent.currentStyle["width"]:0));
   if ((!size)||(size=="auto"))
   		size=parent.offsetWidth||100;

   //var z=document.createElement("SPAN");
   var z=document.getElementById(parent.name+"_span");
   
	if(parent.style.direction=="rtl") z.style.direction = "rtl"; 
  
   parent.parentNode.insertBefore(z,parent);
   parent.style.display='none';

    var s_type = parent.getAttribute('opt_type');
	
   var w= new dhtmlXCombo(z,parent.name,size,s_type,parent.tabIndex);
  
   var x=new Array();
   var sel=0;
   for (var i=0; i<parent.options.length; i++){
      if (parent.options[i].selected) sel=i;
      var label=parent.options[i].innerHTML;
      var val=parent.options[i].getAttribute("value");
      if ((typeof(val)=="undefined")||(val===null)) val=label;
      x[i]={value:val,text:label,img_src:parent.options[i].getAttribute("img_src")};
   }

   w.addOption(x);
   
   parent.parentNode.removeChild(parent);
   w.selectOption(sel,null,true);
   if (parent.onchange) 
   	w.attachEvent("onChange",parent.onchange);
   return w;
}

var dhtmlXCombo_optionTypes = [];
/**
*     @desc: build combobox
*     @param: parent - (string) id of existing object which will be used as container
*     @param: name - (string) name of combobox - will be used in FORM
*     @param: width - (int) size of combobox
*     @param: tabIndex - (int) tab index, optional
*     @type: public
*     @topic: 0
*/
function dhtmlXCombo(parent,name,width,optionType,tabIndex){
     
           
      if (typeof(parent)=="string")
         parent=document.getElementById(parent);
         
       	  
      this.dhx_Event(); 
      this.optionType = (optionType != window.undefined && dhtmlXCombo_optionTypes[optionType]) ? optionType : 'default';
      this._optionObject = dhtmlXCombo_optionTypes[this.optionType];
		
      this._disabled = false;
      
      if(parent){
      	if(parent.style.direction == "rtl") this.rtl = true;
		  else this.rtl = false; 
	     	
		  if (!window.dhx_glbSelectAr){
	          window.dhx_glbSelectAr=new Array();
	          window.dhx_openedSelect=null;
	          window.dhx_SelectId=1;
	          dhtmlxEvent(document.body,"click",this.closeAll);
	          dhtmlxEvent(document.body,"keydown",function(e){ try { if ((e||event).keyCode==9)  window.dhx_glbSelectAr[0].closeAll(); } catch(e) {} return true; } );
	      }
			
	     if (parent.tagName=="SELECT")
	         return dhtmlXComboFromSelect(parent,width); //Passed width to this method:Priya
	      else
	         this._createSelf(parent,name,width,tabIndex);
      	dhx_glbSelectAr.push(this);
      }
 
	  
}

/**
*     @desc: change control size
*     @param: new_size - (int) new size value
*     @type: public
*     @topic: 0
*/
   dhtmlXCombo.prototype.setSize = function(new_size){
      this.DOMlist.style.width=new_size+"px";
      if (this.DOMlistF) this.DOMlistF.style.width=new_size+"px";
      this.DOMelem.style.width=new_size+"px";
      this.DOMelem_input.style.width = (new_size-19)+'px';
   }      
/**
*     @desc: switch between combobox and auto-filter modes
*     @param: mode - (boolean) enable filtering mode
*     @param: url - (string) url for filtering from XML, optional
*     @param: cache - (boolean) XML caching, optional
*     @param: autosubload - (boolean) enable auto load additional suggestions on selecting last loaded option
*     @type: public
*     @topic: 0
*/
   dhtmlXCombo.prototype.enableFilteringMode = function(mode,url,cache,autosubload){
      this._filter=convertStringToBoolean(mode);

      if (url){
         this._xml=url;
         this._autoxml=convertStringToBoolean(autosubload);
      }
      if (convertStringToBoolean(cache)) this._xmlCache=[];
      //this.DOMelem_button.style.display=(this._filter?"none":"");
   }
   
   dhtmlXCombo.prototype.setFilteringParam=function(name,value){
   		if (!this._prs) this._prs=[];
   		this._prs.push([name,value]);
   }
/**
*     @desc: disable combobox
*     @param: mode - (boolean) disable combobox
*     @type: public
*     @topic: 1
*/
   dhtmlXCombo.prototype.disable = function(mode){
      var z=convertStringToBoolean(mode);
      if (this._disabled==z) return;
      this.DOMelem_input.disabled=z;
      this._disabled=z;
   }
/**
*     @desc: switch to readonly mode
*     @param: mode - (boolean) readonly mode
*     @param: autosearch - (boolean) true by default 
*     @type: public
*     @topic: 1
*/
   dhtmlXCombo.prototype.readonly = function(mode,autosearch){
        this.DOMelem_input.readOnly=mode ? true : false;
		if(autosearch===false || mode===false){
			this.DOMelem.onkeyup=function(ev){ }
		} else {
			var that = this;
			this.DOMelem.onkeyup=function(ev){ 
				ev=ev||window.event; 
				if (ev.keyCode!=9) ev.cancelBubble=true;
				if((ev.keyCode >= 48 && ev.keyCode <= 57)||(ev.keyCode >= 65 && ev.keyCode <= 90)){
					for(var i=0; i<that.optionsArr.length; i++){
						var text = that.optionsArr[i].text;
						if(text.toString().toUpperCase().indexOf(String.fromCharCode(ev.keyCode)) == 0){
								that.selectOption(i);
								break;
						}
					}
					ev.cancelBubble=true;
				}
			}
		}
	}	
   
/**
*     @desc: get Option by value
*     @param: value - (string) value of option in question
*     @type: public
*     @return: option object
*     @topic: 2
*/
   dhtmlXCombo.prototype.getOption = function(value)
   {
      for(var i=0; i<this.optionsArr.length; i++)
         if(this.optionsArr[i].value==value)
            return this.optionsArr[i];
      return null;
   }
/**
*     @desc: get Option by label
*     @param: label - (string) label of option in question
*     @type: public
*     @return: option object
*     @topic: 2
*/
   dhtmlXCombo.prototype.getOptionByLabel = function(value)
   {
	   // Commenting this line because to avoid bug #34919
	  //value=value.replace(/&/g,"&amp;");
      for(var i=0; i<this.optionsArr.length; i++)
   	// Here we are comparing the actual text with "&" and value with "&amp;".This will create mismatch to avoid this commenting the above line
        if(this.optionsArr[i].text == value)  
            return this.optionsArr[i];
      return null;
   }
   
/**
*     @desc: get Option by index
*     @param: ind - (int) index of option in question
*     @type: public
*     @return: option object
*     @topic: 2
*/
   dhtmlXCombo.prototype.getOptionByIndex = function(ind){
      return this.optionsArr[ind];
   }
/**
*     @desc: clear all options from combobox
*     @type: public
*     @param: value - (bool) clear current value as well
*     @topic: 2
*/
   dhtmlXCombo.prototype.clearAll = function(all)
   {
	  if (all) this.setComboText("");   	  
      this.optionsArr=new Array();
      this.redrawOptions();
      if (all) this._confirmSelection();
   }
/**
*     @desc: delete option by value
*     @param: value - (string) value of option in question
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.deleteOption = function(value)
   {
        var ind=this.getIndexByValue(value);
      if(ind<0) return;                            
      if (this.optionsArr[ind]==this._selOption) this._selOption=null;
      this.optionsArr.splice(ind, 1);
      this.redrawOptions();
   }

/**
*     @desc: enable/disable immideatly rendering after changes in combobox
*     @param: mode - (boolean) enable/disable
*     @type: public
*     @topic: 1
*/
   dhtmlXCombo.prototype.render=function(mode){
      this._skiprender=(!convertStringToBoolean(mode));
      this.redrawOptions();
   }

/**
*     @desc: update option in combobox
*     @param: oldvalue - (string) index of option in question
*     @param: avalue - (variable)
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.updateOption = function(oldvalue, avalue, atext, acss)
   {
      var dOpt=this.getOption(oldvalue);
      if (typeof(avalue)!="object") avalue={text:atext,value:avalue,css:acss};
      dOpt.setValue(avalue);
        this.redrawOptions();
   }
/**
*     @desc: add new option
*     @param: value - (variable) - different input for different kinds of options - please refer to examples
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.addOption = function(options)
   {
      if (!arguments[0].length || typeof(arguments[0])!="object")
         args = [arguments];
      else
         args = options;

      this.render(false);
        for (var i=0; i<args.length; i++) {
            var attr = args[i];
         if (attr.length){
               attr.value = attr[0]||"";
               attr.text = attr[1]||"";

               attr.css = attr[2]||"";
         }
            this._addOption(attr);
        }
      this.render(true);
   }

   dhtmlXCombo.prototype._addOption = function(attr)
   {
         dOpt = new this._optionObject();
         this.optionsArr.push(dOpt);
         dOpt.setValue.apply(dOpt,[attr]);
         this.redrawOptions();
   }


/**
*     @desc: return index of item by value
*     @param: value - (string) value of option in question
*     @type: public
*     @return: option index
*     @topic: 2
*/
   dhtmlXCombo.prototype.getIndexByValue = function(val){
      for(var i=0; i<this.optionsArr.length; i++)
         if(this.optionsArr[i].value == val) return i;
      return -1;
   }

/**
*     @desc: get value of selected item
*     @type: public
*     @return: option value
*     @topic: 2 
*/
   dhtmlXCombo.prototype.getSelectedValue = function(){
      return (this._selOption?this._selOption.value:null);
   }
/**
*     @desc: get current text in combobox
*     @type: public
*     @return: combobox text
*     @topic: 2
*/
   dhtmlXCombo.prototype.getComboText = function(){
      return this.DOMelem_input.value;
   }
/**
*     @desc: set text in covmbobox
*     @param: text - (string) new text label
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.setComboText = function(text){
      this.DOMelem_input.value=text;
   }
   
/**
*     @desc: set text in covmbobox
*     @param: text - (string) new text label
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.setComboValue = function(text){
      this.setComboText(text);
	  for(var i=0; i<this.optionsArr.length; i++)
         if (this.optionsArr[i].data()[0]==text)
         return this.selectOption(i,null,true);      
      this.DOMelem_hidden_input.value=text;
   }   

/**
*     @desc: get value which will be sent with form
*     @type: public
*     @return: combobox value
*     @topic: 2
*/
   dhtmlXCombo.prototype.getActualValue = function(){
      return this.DOMelem_hidden_input.value;
   }
/**
*     @value: the value to be trimmed.
*     @type: public
*     @return: trimmed string.
*     @topic: 2
*/
   dhtmlXCombo.prototype.getTrimString = function(value){
	value = value.replace( /^\s+/g, "" );// strip leading
	return value.replace( /\s+$/g, "" );// strip trailing
   }
/**
*     @type: public
*     @return: default key for this dhtmlxcombo
*     @topic: 2
*/
   dhtmlXCombo.prototype.getDefaultKey = function(id){
	return comboDefaultKey.Get(id);
   }
/**
*     @desc: get text of selected option
*     @type: public
*     @return: text of option
*     @topic: 2
*/
   dhtmlXCombo.prototype.getSelectedText = function(){
      return (this._selOption?this._selOption.text:"");
   }
/**
*     @desc: get index of selected option
*     @type: public
*     @return: option index
*     @topic: 2
*/
   dhtmlXCombo.prototype.getSelectedIndex = function(){
      for(var i=0; i<this.optionsArr.length; i++)
         if(this.optionsArr[i] == this._selOption) return i;
      return -1;
   }
/**
*     @desc: set name used while form submit
*     @param: name - (string) new combobox name
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.setName = function(name){  
        this.DOMelem_hidden_input.name = name;
        this.DOMelem_hidden_input2 = name+"_new_value";
        this.name = name;
   }
/**
*     @desc: show combox ( reversion to hide command )
*     @param: mode - (boolean) enable/disable
*     @type: public
*     @topic: 1
*/
   dhtmlXCombo.prototype.show = function(mode){
      if (convertStringToBoolean(mode))
         this.DOMelem.style.display = "";
      else
         this.DOMelem.style.display = "none";
   }

/**
*     @desc: destroy object and any related HTML elements
*     @type: public
*     @topic: 0
*/
   dhtmlXCombo.prototype.destructor = function()
   {
      var _sID = this._inID;
      this.DOMParent.removeChild(this.DOMelem);
      this.DOMlist.parentNode.removeChild(this.DOMlist);
      var s=dhx_glbSelectAr;
      this.DOMParent=this.DOMlist=this.DOMelem=0;
      this.DOMlist.combo=this.DOMelem.combo=0;
      for(var i=0; i<s.length; i++)
      {
         if(s[i]._inID == _sID)
         {
            s[i] = null;
            s.splice(i,1);
            return;
         }
      }
   }

/**
*     @desc: create self HTML
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._createSelf = function(selParent, name, width, tab)
      {
         if (width.toString().indexOf("%")!=-1){ 
            var self = this;
            var resWidht=parseInt(width)/100;
            window.setInterval(function(){ 
               if (!selParent.parentNode) return;
               var ts=selParent.parentNode.offsetWidth*resWidht-2;
               if (ts<0) return;
               if (ts==self._lastTs) return;
               self.setSize(self._lastTs=ts);},500);
            var width=parseInt(selParent.offsetWidth); //mm
         }

         var width=parseInt(width||100); //mm
         this.ListPosition = "Bottom"; //set optionlist positioning
         this.DOMParent = selParent;
         this._inID = null;
         this.name = name;

         this._selOption = null; //selected option object pointer
         this.optionsArr = Array();

            var opt = new this._optionObject();
            opt.DrawHeader(this,name, width,tab);
         //HTML select part 2 - options list DIV element
         this.DOMlist = document.createElement("DIV");
         this.DOMlist.id = name + "_opt_div";
         this.DOMlist.className = 'dhx_combo_list';
		 if(this.rtl) this.DOMlist.className = 'dhx_combo_list_rtl'; //rtl
         this.DOMlist.style.width=width-(_isIE?0:0)+"px";
		 if (_isOpera || _isKHTML ) 
		 		this.DOMlist.style.overflow="auto";      
         this.DOMlist.style.display = "none";
         document.body.insertBefore(this.DOMlist,document.body.firstChild);         
         if (_isIE)    {
            this.DOMlistF = document.createElement("IFRAME");
            this.DOMlistF.style.border="0px";
            this.DOMlistF.className = 'dhx_combo_list';
            this.DOMlistF.style.width=width-(_isIE?0:0)+"px";
            this.DOMlistF.style.display = "none";
            this.DOMlistF.src="javascript:false;"; 
            document.body.insertBefore(this.DOMlistF,document.body.firstChild);
            }



         this.DOMlist.combo=this.DOMelem.combo=this;

         this.DOMelem_input.onkeydown = this._onKey;
         
         var comboobj = document.getElementById(name+"_combo");
         if(comboobj && comboobj.onkeydown){
	         this._ParentOnKeyDown=comboobj.onkeydown;
	 }
          this.DOMelem_input.onkeypress = this._onKeyF;
         this.DOMelem_input.onblur = this._onBlur;
         this.DOMelem.onclick = this._toggleSelect;
         this.DOMlist.onclick = this._selectOption;
         this.DOMlist.onmousedown = function(){
         	this._skipBlur=true;
     	 }
         
         this.DOMlist.onkeydown = function(e){
         	this.combo.DOMelem_input.focus();
         	(e||event).cancelBubble=true;
         	this.combo.DOMelem_input.onkeydown(e)
     	 }
		  this.DOMlist.onmouseover = this._listOver;
     	 
      }

      dhtmlXCombo.prototype._listOver = function(e)
      {
         e = e||event;
         e.cancelBubble = true;
         var node = (_isIE?event.srcElement:e.target);
         var that = this.combo;
         if ( node.parentNode == that.DOMlist ) {
            if(that._selOption) that._selOption.deselect(); 
			if(that._tempSel) that._tempSel.deselect();
           
		    var i=0;
            for (i; i<that.DOMlist.childNodes.length; i++) {            	
               if (that.DOMlist.childNodes[i]==node) break;
            }           
            var z=that.optionsArr[i];
           that._tempSel=z;
           that._tempSel.select();  
           
	   //Commented below code inorder to make the last item in the dhtmlXCombo list to be selected using mouse :Priya
       // uncommented since this issue is handled by passing last arguement as "false"
       // in enableFiltering method. unni 5/1/2010

	  if ((that._autoxml)&&((i+1)==that._lastLength))
	 	that._fetchOptions(i+1,that._lasttext||"");            
         }

      }

/**
*     @desc: place option list in necessary place on screen
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._positList = function()
      {
	  	//if(this.ListAutoPosit) this.enableOptionAutoPositioning(true); //mm auto posit
         var pos=this.getPosition(this.DOMelem);
         if(this.ListPosition == 'Bottom'){
            this.DOMlist.style.top = pos[1]+this.DOMelem.offsetHeight+"px";
            this.DOMlist.style.left = pos[0]+"px";
         }
         else if(this.ListPosition == 'Top'){ //mm
				this.DOMlist.style.top = pos[1] - this.DOMlist.offsetHeight+"px";
            	
				this.DOMlist.style.left = pos[0]+"px"; //mm
          }
		  else{
			this.DOMlist.style.top = pos[1]+"px";
            this.DOMlist.style.left = pos[0]+this.DOMelem.offsetWidth+"px";
         }
     
      }
	  
      dhtmlXCombo.prototype.getPosition = function(oNode,pNode){

                  if(!pNode)
                        var pNode = document.body

                  var oCurrentNode=oNode;
                  var iLeft=0;
                  var iTop=0;
                  while ((oCurrentNode)&&(oCurrentNode!=pNode)){//.tagName!="BODY"){
               iLeft+=oCurrentNode.offsetLeft-oCurrentNode.scrollLeft;
               iTop+=oCurrentNode.offsetTop-oCurrentNode.scrollTop;
               oCurrentNode=oCurrentNode.offsetParent;//isIE()?:oCurrentNode.parentNode;
                  }
              if (pNode == document.body ){
                 if (_isIE){
                 if (document.documentElement.scrollTop)
                  iTop+=document.documentElement.scrollTop;
                 if (document.documentElement.scrollLeft)
                  iLeft+=document.documentElement.scrollLeft;
                  }
                  else
                       if (!_isFF){
                             iLeft+=document.body.offsetLeft;
                           iTop+=document.body.offsetTop;
                  }
                 }
                     return new Array(iLeft,iTop);
               }
/**
*     @desc: correct current selection ( move it to first visible option )
*     @type: private
*     @topic: 2
*/
      dhtmlXCombo.prototype._correctSelection = function(){
		 if (this.getComboText()!="")
         for (var i=0; i<this.optionsArr.length; i++)
            if (!this.optionsArr[i].isHidden()){
               return this.selectOption(i,true,false);
           }
         this.unSelectOption();
      }
/**
*     @desc: select next option in combobox
*     @param: step - (int) step size
*     @type: private
*     @topic: 2
*/
      dhtmlXCombo.prototype.selectNext = function(step){
         var z=this.getSelectedIndex()+step;
         while (this.optionsArr[z]){
            if (!this.optionsArr[z].isHidden())
               return this.selectOption(z,false,false);
            z+=step;
         }
      }
/**
*     @desc: on keypressed handler
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._onKeyF = function(e){
         var that=this.parentNode.combo;
         var ev=e||event;
         ev.cancelBubble=true;
         if (ev.keyCode=="13" || ev.keyCode=="9" ){
         	that._confirmSelection();
         	that.closeAll();
     	} else if (ev.keyCode=="27" ){
         	that._resetSelection();
         	that.closeAll();
     	} else that._activeMode=true;
         if (ev.keyCode=="13" || ev.keyCode=="27" ){ //enter
            that.callEvent("onKeyPressed",[ev.keyCode])
            return false;
         }
         return true;
      }
/**
*     @desc: on keyup handler
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._onKey = function(e){
         var that=this.parentNode.combo;
         if(that._ParentOnKeyDown) that._ParentOnKeyDown(e);
         (e||event).cancelBubble=true;
         var ev=(e||event).keyCode;
         if (ev>15 && ev<19) return true; //shift,alt,ctrl
        if (ev==27) return;
        if ((that.DOMlist.style.display!="block")&&(ev!="13")&&(ev!="9")&&((!that._filter)||(that._filterAny)))
            that.DOMelem.onclick(e||event);
       
		if ((ev!="13")&&(ev!="9")){
		var ctrlKey = (e||event).ctrlKey;
         	window.setTimeout(function(){ that._onKeyB(ev,ctrlKey); },1);
         	if (ev=="40" || ev=="38")
         		return false;
     	}
         else if (ev==9){
         	that.closeAll();
         	(e||event).cancelBubble=false;
         }
      }
      dhtmlXCombo.prototype._onKeyB = function(ev,ctrlKey)
      {
      	
      	if( (ev == 37 || ev == 38 || ev == 39 || ev == 40) && ctrlKey){
		this.closeAll();
	      	return true;
        } 
        if (ev=="40" ){  //down
		var z=this.selectNext(1);
         } else if (ev=="38"){ //up
            this.selectNext(-1);
         } else{
            this.callEvent("onKeyPressed",[ev])
            if (this._filter) return this.filterSelf((ev==8)||(ev==46));
            for(var i=0; i<this.optionsArr.length; i++)
               if (this.optionsArr[i].data()[1]==this.DOMelem_input.value){
//                  ev.cancelBubble=true;
                  this.selectOption(i,false,false);
                  return false;
                  }
            this.unSelectOption();
         }
         return true;
      }


/**
*     @desc: on data change handler
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._onBlur = function()
      {
          var self = this.parentNode._self;
          window.setTimeout(function(){
          	if (self.DOMlist._skipBlur) return !(self.DOMlist._skipBlur=false);
          	self._confirmSelection();        
          	self.callEvent("onBlur",[]);
          },100)
          
      }
/**
*     @desc: redraw combobox options
*     @type: private
*     @topic: 2
*/
      dhtmlXCombo.prototype.redrawOptions = function(){
         if (this._skiprender) return;
         for(var i=this.DOMlist.childNodes.length-1; i>=0; i--)
            this.DOMlist.removeChild(this.DOMlist.childNodes[i]);
         for(var i=0; i<this.optionsArr.length; i++)
            this.DOMlist.appendChild(this.optionsArr[i].render());
			
		
		
						

      }
/**
*     @desc: load list of options from XML
*     @param: url - (string) xml url
*     @type: public
*     @topic: 0
*/
      dhtmlXCombo.prototype.loadXML = function(url,afterCall){
         this._load=true;          
         if ((this._xmlCache)&&(this._xmlCache[url])){         	
            this._fillFromXML(this,null,null,null,this._xmlCache[url]);
            if (afterCall) afterCall();
        }
         else{
            var xml=(new dtmlXMLLoaderObject(this._fillFromXML,this,true,true));
            if (afterCall) xml.waitCall=afterCall;
            if (this._prs)
            	for (var i=0; i<this._prs.length; i++)
            		url+=[getUrlSymbol(url),escape(this._prs[i][0]),"=",escape(this._prs[i][1])].join("");
            xml._cPath=url;
            xml.loadXML(url);
         }
      }

/**
*     @desc: load list of options from XML string
*     @param: astring - (string) xml string
*     @type: public
*     @topic: 0
*/
      dhtmlXCombo.prototype.loadXMLString = function(astring){
         var xml=(new dtmlXMLLoaderObject(this._fillFromXML,this,true,true));
         xml.loadXMLString(astring);
      }

/**
*     @desc: on XML load handler
*     @type: private
*     @topic: 0
*/
      dhtmlXCombo.prototype._fillFromXML = function(obj,b,c,d,xml){
         if (obj._xmlCache) obj._xmlCache[xml._cPath]=xml;

         //check that XML is correct 
         var toptag=xml.getXMLTopNode("complete");
         if (toptag.tagName!="complete") return;
         var top=xml.doXPath("//complete");
         var options=xml.doXPath("//option");
         
         obj.render(false);
         if ((!top[0])||(!top[0].getAttribute("add"))){
            obj.clearAll();
            obj._lastLength=options.length;
	         if (obj._xml){
	         if ((!options) || (!options.length)) 
	         	obj.closeAll();
	         else {
	         		if (obj._activeMode){
	         			obj._positList();
	        			obj.DOMlist.style.display="block";
	         			if (_isIE) obj._IEFix(true);
         			}
	     	 }}            
         } else
            obj._lastLength+=options.length;

         for (var i=0; i<options.length; i++) {
            var attr = new Object();
            attr.text = options[i].firstChild?options[i].firstChild.nodeValue:"";
            for (var j=0; j<options[i].attributes.length; j++) {
               var a = options[i].attributes[j];
               if (a)
                  attr[a.nodeName] = a.nodeValue;
            }
            obj._addOption(attr);
         }
         obj.render(true);
         	
         if ((obj._load)&&(obj._load!==true))
            obj.loadXML(obj._load);
         else{
            obj._load=false;
             if ((!obj._lkmode)&&(!obj._filter))
               obj._correctSelection();
            }

         var selected=xml.doXPath("//option[@selected]");
         if (selected.length)
         	obj.selectOption(obj.getIndexByValue(selected[0].getAttribute("value")),false,true);

      }
/**
*     @desc: deselect option
*     @type: public
*     @topic: 1
*/
      dhtmlXCombo.prototype.unSelectOption = function(){
         if (this._selOption)
            this._selOption.deselect();
         this._selOption=null;
      }
      
      dhtmlXCombo.prototype._confirmSelection = function(data,status){
      	if(arguments.length==0){
      	    var z=this.getOptionByLabel(this.DOMelem_input.value);
            data = z?z.value:this.DOMelem_input.value;
            status = (z==null); 
            
            var comboId = this.name+"_combo";            
           // if( this.getActualValue()==this.getDefaultKey(comboId) && this.getTrimString(data)=="")data=this.getActualValue();
		if (data==this.getActualValue()) return;
      	}
          	
      	this.DOMelem_hidden_input.value=data;
        this.DOMelem_hidden_input2.value = (status?"true":"false");
      	this.callEvent("onChange",[]);
      	this._activeMode=false;
  	  }
      dhtmlXCombo.prototype._resetSelection = function(data,status){
      		var z=this.getOption(this.DOMelem_hidden_input.value);
      		this.setComboValue(z?z.data()[0]:this.DOMelem_hidden_input.value)
      		this.setComboText(z?z.data()[1]:this.DOMelem_hidden_input.value)
  	  }  	  
  	  
/**
*     @desc: select option
*     @param: ind - (int) index of option in question
*     @param: filter - (boolean) enable autocomplit range, optional
*     @param: conf - (boolean) true for real selection, false for pre-selection
*     @type: public
*     @topic: 1
*/
      dhtmlXCombo.prototype.selectOption = function(ind,filter,conf){
      	 if (arguments.length<3) conf=true;
         this.unSelectOption();
         var z=this.optionsArr[ind];
         if (!z)  return;
         this._selOption=z;
         this._selOption.select();
                
         var corr=this._selOption.content.offsetTop+this._selOption.content.offsetHeight-this.DOMlist.scrollTop-this.DOMlist.offsetHeight;
         if (corr>0) this.DOMlist.scrollTop+=corr;
            corr=this.DOMlist.scrollTop-this._selOption.content.offsetTop;
         if (corr>0) this.DOMlist.scrollTop-=corr;

         var data=this._selOption.data();

	 	 if (conf){
	 	 	this.setComboText(data[1]);
	 	 	this._confirmSelection(data[0],false);
		 }  
	 
         if ((this._autoxml)&&((ind+1)==this._lastLength))
            this._fetchOptions(ind+1,this._lasttext||"");

         if (filter){
            var text=this.getComboText();
            if (text!=data[1]){
               this.setComboText(data[1]);
               dhtmlXRange(this.DOMelem_input,text.length+1,data[1].length,text);
            }
         }
         else{
             data=this._selOption.data();
             if(data[0] != null && data[0] != '' ){
        	 // some cases selected option might be cleared from onchange event handler
        	 // In this case we should not set the comboText. refer bug# 20333 -- unni 22/12/2009
        	 this.setComboText(data[1]);
             }
         }
         this._selOption.RedrawHeader(this);

         /*Event*/
         this.callEvent("onSelectionChange",[]);
      }
/**
*     @desc: option on select handler
*     @type: private
*     @topic: 2
*/
      dhtmlXCombo.prototype._selectOption = function(e)
      {
         (e||event).cancelBubble = true;
         var node=(_isIE?event.srcElement:e.target);
         var that=this.combo;
         while (!node._self) {
            node = node.parentNode;
            if (!node)
               return;
         }

         var i=0;
         for (i; i<that.DOMlist.childNodes.length; i++) {         		
            if (that.DOMlist.childNodes[i]==node) break;
         }
         that.selectOption(i,false,true);
         that.closeAll();
         that.callEvent("onBlur",[])
         that._activeMode=false;
      }
/**
*     @desc: open list of options 
*     @type: public
*     @topic: 2
*/
   dhtmlXCombo.prototype.openSelect = function(){ 
   	
	
    
	  if (this._disabled) return;
      this.closeAll();
      this._positList();
      this.DOMlist.style.display="block";
      this.callEvent("onOpen",[]);
	  if(this._tempSel) this._tempSel.deselect();
	  if(this._selOption) this._selOption.select();
	  if(this._selOption){
	 	var corr=this._selOption.content.offsetTop+this._selOption.content.offsetHeight-this.DOMlist.scrollTop-this.DOMlist.offsetHeight;
         if (corr>0) this.DOMlist.scrollTop+=corr;
            corr=this.DOMlist.scrollTop-this._selOption.content.offsetTop;
         if (corr>0) this.DOMlist.scrollTop-=corr;
	}
	  /* if (this.autoOptionSize){
        	var x=this.DOMlist.offsetWidth; 
			
        	for ( var i=0; i<this.optionsArr.length; i++){
				if(i==0) alert("this.DOMlist.childNodes[i].scrollWidth ="+ this.DOMlist.childNodes[i].scrollWidth + "> x= "+ x);
        		if (this.DOMlist.childNodes[i].scrollWidth > x)
        			x=this.DOMlist.childNodes[i].scrollWidth;
			}
        			
			this.DOMlist.style.width=x+"px";
		}*/
		
		      
      if (_isIE) this._IEFix(true);
      this.DOMelem_input.focus();
	
      if (this._filter) this.filterSelf();
   }
/**
*     @desc: open(close) list
*     @type: private
*     @topic: 2
*/
   dhtmlXCombo.prototype._toggleSelect = function(e)
   {
      var that=this.combo;
      if ( that.DOMlist.style.display == "block" ) {
      that.closeAll();
      } else {
         that.openSelect();
      }
      (e||event).cancelBubble = true;
   }

    dhtmlXCombo.prototype._fetchOptions=function(ind,text){
    
	if (text=="") { this.closeAll();  return this.clearAll();   }
	if( (this.maxSeverSubmissionTextLength > -1 && text.length > this.maxSeverSubmissionTextLength) || ( this.minSeverSubmissionTextLength > -1 && text.length < this.minSeverSubmissionTextLength)){
			return;
	}	
	 //var url=this._xml+((this._xml.indexOf("?")!=-1)?"&":"?")+"pos="+ind+"&mask="+encodeURIComponent(text);
	 var url=this._xml+((this._xml.indexOf("?")!=-1)?"&":"?")+"pos="+ind+"&MASK="+encodeURIComponent(text) + "&pagekey=" + this.pagekey + "&controlName=" + this.controlName; //Changed by Priya on 09-03-2009
	 url=URLencode(url);
	 this._lasttext=text;
	 if (this._load) this._load=url;
	 else this.loadXML(url);
    }
/**
*     @desc: filter list of options
*     @type: private
*     @topic: 2
*/
    dhtmlXCombo.prototype.filterSelf = function(mode)
   {
      var text=this.getComboText();
      if (this._xml){
         this._lkmode=mode;
         this._fetchOptions(0,text);
      }
      //Commented by Priya on 09-03-2009.
      /* try{ var filter=new RegExp("^"+text,"i"); } catch (e){ var filter=new RegExp("^"+text.replace(/([\[\]\{\}\(\)\+\*\\])/g,"\\$1")); }*/
      
       try{
      	var filter=new RegExp("^"+text.replace(/([\[\]\{\}\(\)\+\*\\])/g,"\\$1").replace(/\s+/g,''),"i"); 
	} catch (e){ var filter=new RegExp("^"+text.replace(/([\[\]\{\}\(\)\+\*\\])/g,"\\$1").replace(/\s+/g,'')); }

      this.filterAny=false;
      for(var i=0; i<this.optionsArr.length; i++){
      	 var z=filter.test(this.optionsArr[i].text.replace(/\s+/g,''));
      	 this.filterAny|=z;
         this.optionsArr[i].hide(!z);
      }
      if (!this.filterAny) {
		  this.closeAll();
		  this._activeMode=true;
	  }
      else {
      	  if (this.DOMlist.style.display!="block")
      	   		this.openSelect();
	      if (_isIE) this._IEFix(true);
  		}
         
        if (!mode)
         this._correctSelection();   
        else this.unSelectOption();
   }
 
 


/**
*     @desc: set hidden iframe for IE
*     @type: private
*     @topic: 2
*/
   dhtmlXCombo.prototype._IEFix = function(mode){
      this.DOMlistF.style.display=(mode?"block":"none");
        this.DOMlistF.style.top=this.DOMlist.style.top;
        this.DOMlistF.style.left=this.DOMlist.style.left;
   }
/**
*     @desc: close opened combobox list
*     @type: public
*     @topic: 1
*/
   dhtmlXCombo.prototype.closeAll = function()
   {
      if(window.dhx_glbSelectAr)
         for (var i=0; i<dhx_glbSelectAr.length; i++){
            if (dhx_glbSelectAr[i].DOMlist.style.display=="block") {
               dhx_glbSelectAr[i].DOMlist.style.display = "none";
               if (_isIE) dhx_glbSelectAr[i]._IEFix(false);
            }
            dhx_glbSelectAr[i]._activeMode=false;
        }
   }
/**
*     @desc: create selection range in input control
*     @param: InputId - (string) id of input ( object can be used as well )
*     @param: Start - (int) start selection position
*     @param: End - (int) end selection position
*     @param: Text - (string) user typed input
*     @type: public
*     @topic: 0
*/
function dhtmlXRange(InputId, Start, End, Text)
{
   var Input = typeof(InputId)=='object' ? InputId : document.getElementById(InputId);
   try{    Input.focus();   } catch(e){};
   var Length = Input.value.length;
   Start--;
   
   
   //iterate through Text and take one character by each. append '[\\s]*' 
   //if it is special character escape and then append 
   // ct+b -> c -> c[\\s]*t[\\s]*\+[\\s]* -> ct b-> c[\s]*t[\s]* [\s]*b ct bra
   
   var specials = [
                   // order matters for these
                     "-"
                   , "["
                   , "]"
                   // order doesn't matter for any of these
                   , "/"
                   , "{"
                   , "}"
                   , "("
                   , ")"
                   , "*"
                   , "+"
                   , "?"
                   , "."
                   , "\\"
                   , "^"
                   , "$"
                   , "|"
                 ];
   
   var array = "";
   var str = "";
   var key = Text.split(''); 
   for(i=0; i<key.length; i++){
	   str = key[i];
	   if(str.indexOf(' ')>-1){
		   str= '[\\s]*';
		   
	   }else{
		   for(j=0; j<specials.length; j++){
			   if(str.indexOf(specials[j]) > -1){
				   str = '\\'.concat(str);
				   break;
			   }
		   }	 
	   } 
	  
	   	if(i != key.length - 1){
		   array += str.concat('[\\s]*'); 
		}else{
			   array += str;
		 }
	   
   }
   
   var newkey = new RegExp(array,"i");
   var index = newkey.exec(InputId.value);
   if(index != null && index.length > 0){
       Start = index[0].length;
   }
   
   if (Start < 0 || Start > End || Start > Length)
      Start = 0;
   if (End > Length)
      End = Length;
   if (Start==End) return;
   if (Input.setSelectionRange) {
      Input.setSelectionRange(Start, End);
   } else if (Input.createTextRange) {
      var range = Input.createTextRange();
      range.moveStart('character', Start);
      range.moveEnd('character', End-Length);
      range.select();
   }
}
/**
*     @desc: combobox option object constructor
*     @type: public
*     @topic: 0
*/
      dhtmlXCombo_defaultOption = function(){
         this.init();
      }
/**
*     @desc: option initialization function
*     @type: private
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.init = function(){
         this.value = null;
         this.text = "";
         this.selected = false;
         this.css = "";
      }
/**
*     @desc: mark option as selected
*     @type: public
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.select = function(){
         if (this.content)
            this.content.className="dhx_selected_option";
      }
/**
*     @desc: hide option
*     @param: mode - (boolean)
*     @type: public
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.hide = function(mode){
         this.render().style.display=mode?"none":"";
      }
/**
*     @desc: return hide state of option
*     @type: public
*     @return: hide state of option
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.isHidden = function(){
         return (this.render().style.display=="none");
      }
/**
*     @desc: mark option as not selected
*     @type: public
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.deselect = function(){
         if (this.content) this.render();
            this.content.className="";
      }
/**
*     @desc: set value of option
*     @param: value - (string) value
*     @param: text - (string) text
*     @param: css - (string) css style string
*     @type: public
*     @topic: 4
*/
dhtmlXCombo_defaultOption.prototype.setValue = function(attr){
    this.value = attr.value||"";
    this.text = attr.text||"";
    this.css = attr.css||"";
   this.content=null;
}

				
/**
*     @desc: render option
*     @type: private
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.render = function(){
         if (!this.content){
            this.content=document.createElement("DIV");
        this.content._self = this;

            this.content.style.cssText='width:100%; overflow:hidden;'+this.css;
            if (_isOpera || _isKHTML ) this.content.style.padding="2px 0px 2px 0px";
            this.content.innerHTML=this.text;
            this._ctext=_isIE?this.content.innerText:this.content.textContent;
         }
         return this.content;
      }
/**
*     @desc: return option data
*     @type: public
*     @return: array of data related to option
*     @topic: 4
*/
      dhtmlXCombo_defaultOption.prototype.data = function(){
         if (this.content)
            return [this.value,this._ctext ? this._ctext : this.text];
      }

dhtmlXCombo_defaultOption.prototype.DrawHeader = function(self, name, width, tab)
{
    //var z=document.createElement("DIV");
    var z=document.getElementById(name+"_div");
    z.style.width = width+"px";
    z.className = 'dhx_combo_box';
    z._self = self;
	self.DOMelem = z;	
   	this._DrawHeaderInput(self, name, width,tab);
	this._DrawHeaderButton(self, name, width);
    self.DOMParent.appendChild(self.DOMelem);
}

dhtmlXCombo_defaultOption.prototype._DrawHeaderInput = function(self, name, width,tab)
{

	if(self.rtl && _isIE)  {
		var z=document.createElement('textarea');
 		z.style.overflow = "hidden";
		z.style.whiteSpace="nowrap"
	}
 	else {
 		var z=document.createElement('input');
		z.setAttribute("autocomplete","off"); 
		z.type = 'text';
	}
   z.className = 'dhx_combo_input';
   
   if(self.rtl) {
   	z.style.left = "18px";
	z.style.direction = "rtl";
   	z.style.unicodeBidi = "bidi-override";  
   }
   

   if (tab) z.tabIndex=tab;
   z.style.width = (width-19)+'px';
   z.id=name+"_input";
   z.name=name+"_input";
   self.DOMelem.appendChild(z);
   self.DOMelem_input = z;

   //z = document.createElement('input');
   //z.type = 'hidden';
   //z.name = name;
   z=document.getElementById(name);
   z.name=name;
   self.DOMelem.appendChild(z);
   self.DOMelem_hidden_input = z;

   z = document.createElement('input');
   z.type = 'hidden';
   z.name = name+"_new_value";
   z.value="true";
   self.DOMelem.appendChild(z);
   self.DOMelem_hidden_input2 = z;
}

dhtmlXCombo_defaultOption.prototype._DrawHeaderButton = function(self, name, width)
{
   var z=document.createElement('img');
   z.className = (self.rtl)?'dhx_combo_img_rtl':'dhx_combo_img';

   z.src = (window.dhx_globalImgPath?dhx_globalImgPath:"")+'combo_select.gif';
   self.DOMelem.appendChild(z);
   self.DOMelem_button=z;
}

dhtmlXCombo_defaultOption.prototype.RedrawHeader = function(self)
{
}


dhtmlXCombo_optionTypes['default'] = dhtmlXCombo_defaultOption;

dhtmlXCombo.prototype.dhx_Event=function()
{
   this.dhx_SeverCatcherPath="";

   this.attachEvent = function(original, catcher, CallObj)
   {
      CallObj = CallObj||this;
      original = 'ev_'+original;
       if ( ( !this[original] ) || ( !this[original].addEvent ) ) {
           var z = new this.eventCatcher(CallObj);
           z.addEvent( this[original] );
           this[original] = z;
       }
       return ( original + ':' + this[original].addEvent(catcher) );   //return ID (event name & event ID)
   }
   this.callEvent=function(name,arg0){
         if (this["ev_"+name]) return this["ev_"+name].apply(this,arg0);
       return true;
   }
   this.checkEvent=function(name){
         if (this["ev_"+name]) return true;
       return false;
   }

   this.eventCatcher = function(obj)
   {
       var dhx_catch = new Array();
       var m_obj = obj;
       var func_server = function(catcher,rpc)
                         {
                           catcher = catcher.split(":");
                     var postVar="";
                     var postVar2="";
                           var target=catcher[1];
                     if (catcher[1]=="rpc"){
                           postVar='<?xml version="1.0"?><methodCall><methodName>'+catcher[2]+'</methodName><params>';
                        postVar2="</params></methodCall>";
                        target=rpc;
                     }
                           var z = function() {
                                   }
                           return z;
                         }
       var z = function()
             {
                   if (dhx_catch)
                      var res=true;
                   for (var i=0; i<dhx_catch.length; i++) {
                      if (dhx_catch[i] != null) {
                           var zr = dhx_catch[i].apply( m_obj, arguments );
                           res = res && zr;
                      }
                   }
                   return res;
                }
       z.addEvent = function(ev)
                {
                       if ( typeof(ev) != "function" )
                           if (ev && ev.indexOf && ev.indexOf("server:") == 0)
                               ev = new func_server(ev,m_obj.rpcServer);
                           else
                               ev = eval(ev);
                       if (ev)
                           return dhx_catch.push( ev ) - 1;
                       return false;
                }
       z.removeEvent = function(id)
                   {
                     dhx_catch[id] = null;
                   }
       return z;
   }

   this.detachEvent = function(id)
   {
      if (id != false) {
         var list = id.split(':');            //get EventName and ID
         this[ list[0] ].removeEvent( list[1] );   //remove event
      }
   }
}

//(c)dhtmlx ltd. www.dhtmlx.com
/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
*/
if(typeof YAHOO=="undefined"||!YAHOO){var YAHOO={};}YAHOO.namespace=function(){var A=arguments,E=null,C,B,D;for(C=0;C<A.length;C=C+1){D=A[C].split(".");E=YAHOO;for(B=(D[0]=="YAHOO")?1:0;B<D.length;B=B+1){E[D[B]]=E[D[B]]||{};E=E[D[B]];}}return E;};YAHOO.log=function(D,A,C){var B=YAHOO.widget.Logger;if(B&&B.log){return B.log(D,A,C);}else{return false;}};YAHOO.register=function(A,E,D){var I=YAHOO.env.modules;if(!I[A]){I[A]={versions:[],builds:[]};}var B=I[A],H=D.version,G=D.build,F=YAHOO.env.listeners;B.name=A;B.version=H;B.build=G;B.versions.push(H);B.builds.push(G);B.mainClass=E;for(var C=0;C<F.length;C=C+1){F[C](B);}if(E){E.VERSION=H;E.BUILD=G;}else{YAHOO.log("mainClass is undefined for module "+A,"warn");}};YAHOO.env=YAHOO.env||{modules:[],listeners:[]};YAHOO.env.getVersion=function(A){return YAHOO.env.modules[A]||null;};YAHOO.env.ua=function(){var C={ie:0,opera:0,gecko:0,webkit:0,mobile:null,air:0};var B=navigator.userAgent,A;if((/KHTML/).test(B)){C.webkit=1;}A=B.match(/AppleWebKit\/([^\s]*)/);if(A&&A[1]){C.webkit=parseFloat(A[1]);if(/ Mobile\//.test(B)){C.mobile="Apple";}else{A=B.match(/NokiaN[^\/]*/);if(A){C.mobile=A[0];}}A=B.match(/AdobeAIR\/([^\s]*)/);if(A){C.air=A[0];}}if(!C.webkit){A=B.match(/Opera[\s\/]([^\s]*)/);if(A&&A[1]){C.opera=parseFloat(A[1]);A=B.match(/Opera Mini[^;]*/);if(A){C.mobile=A[0];}}else{A=B.match(/MSIE\s([^;]*)/);if(A&&A[1]){C.ie=parseFloat(A[1]);}else{A=B.match(/Gecko\/([^\s]*)/);if(A){C.gecko=1;A=B.match(/rv:([^\s\)]*)/);if(A&&A[1]){C.gecko=parseFloat(A[1]);}}}}}return C;}();(function(){YAHOO.namespace("util","widget","example");if("undefined"!==typeof YAHOO_config){var B=YAHOO_config.listener,A=YAHOO.env.listeners,D=true,C;if(B){for(C=0;C<A.length;C=C+1){if(A[C]==B){D=false;break;}}if(D){A.push(B);}}}})();YAHOO.lang=YAHOO.lang||{};(function(){var A=YAHOO.lang,C=["toString","valueOf"],B={isArray:function(D){if(D){return A.isNumber(D.length)&&A.isFunction(D.splice);}return false;},isBoolean:function(D){return typeof D==="boolean";},isFunction:function(D){return typeof D==="function";},isNull:function(D){return D===null;},isNumber:function(D){return typeof D==="number"&&isFinite(D);},isObject:function(D){return(D&&(typeof D==="object"||A.isFunction(D)))||false;},isString:function(D){return typeof D==="string";},isUndefined:function(D){return typeof D==="undefined";},_IEEnumFix:(YAHOO.env.ua.ie)?function(F,E){for(var D=0;D<C.length;D=D+1){var H=C[D],G=E[H];if(A.isFunction(G)&&G!=Object.prototype[H]){F[H]=G;}}}:function(){},extend:function(H,I,G){if(!I||!H){throw new Error("extend failed, please check that "+"all dependencies are included.");}var E=function(){};E.prototype=I.prototype;H.prototype=new E();H.prototype.constructor=H;H.superclass=I.prototype;if(I.prototype.constructor==Object.prototype.constructor){I.prototype.constructor=I;}if(G){for(var D in G){if(A.hasOwnProperty(G,D)){H.prototype[D]=G[D];}}A._IEEnumFix(H.prototype,G);}},augmentObject:function(H,G){if(!G||!H){throw new Error("Absorb failed, verify dependencies.");}var D=arguments,F,I,E=D[2];if(E&&E!==true){for(F=2;F<D.length;F=F+1){H[D[F]]=G[D[F]];}}else{for(I in G){if(E||!(I in H)){H[I]=G[I];}}A._IEEnumFix(H,G);}},augmentProto:function(G,F){if(!F||!G){throw new Error("Augment failed, verify dependencies.");}var D=[G.prototype,F.prototype];for(var E=2;E<arguments.length;E=E+1){D.push(arguments[E]);}A.augmentObject.apply(this,D);},dump:function(D,I){var F,H,K=[],L="{...}",E="f(){...}",J=", ",G=" => ";if(!A.isObject(D)){return D+"";}else{if(D instanceof Date||("nodeType" in D&&"tagName" in D)){return D;}else{if(A.isFunction(D)){return E;}}}I=(A.isNumber(I))?I:3;if(A.isArray(D)){K.push("[");for(F=0,H=D.length;F<H;F=F+1){if(A.isObject(D[F])){K.push((I>0)?A.dump(D[F],I-1):L);}else{K.push(D[F]);}K.push(J);}if(K.length>1){K.pop();}K.push("]");}else{K.push("{");for(F in D){if(A.hasOwnProperty(D,F)){K.push(F+G);if(A.isObject(D[F])){K.push((I>0)?A.dump(D[F],I-1):L);}else{K.push(D[F]);}K.push(J);}}if(K.length>1){K.pop();}K.push("}");}return K.join("");},substitute:function(S,E,L){var I,H,G,O,P,R,N=[],F,J="dump",M=" ",D="{",Q="}";for(;;){I=S.lastIndexOf(D);if(I<0){break;}H=S.indexOf(Q,I);if(I+1>=H){break;}F=S.substring(I+1,H);O=F;R=null;G=O.indexOf(M);if(G>-1){R=O.substring(G+1);O=O.substring(0,G);}P=E[O];if(L){P=L(O,P,R);}if(A.isObject(P)){if(A.isArray(P)){P=A.dump(P,parseInt(R,10));}else{R=R||"";var K=R.indexOf(J);if(K>-1){R=R.substring(4);}if(P.toString===Object.prototype.toString||K>-1){P=A.dump(P,parseInt(R,10));}else{P=P.toString();}}}else{if(!A.isString(P)&&!A.isNumber(P)){P="~-"+N.length+"-~";N[N.length]=F;}}S=S.substring(0,I)+P+S.substring(H+1);}for(I=N.length-1;I>=0;I=I-1){S=S.replace(new RegExp("~-"+I+"-~"),"{"+N[I]+"}","g");}return S;},trim:function(D){try{return D.replace(/^\s+|\s+$/g,"");}catch(E){return D;}},merge:function(){var G={},E=arguments;for(var F=0,D=E.length;F<D;F=F+1){A.augmentObject(G,E[F],true);}return G;},later:function(K,E,L,G,H){K=K||0;E=E||{};var F=L,J=G,I,D;if(A.isString(L)){F=E[L];}if(!F){throw new TypeError("method undefined");}if(!A.isArray(J)){J=[G];}I=function(){F.apply(E,J);};D=(H)?setInterval(I,K):setTimeout(I,K);return{interval:H,cancel:function(){if(this.interval){clearInterval(D);}else{clearTimeout(D);}}};},isValue:function(D){return(A.isObject(D)||A.isString(D)||A.isNumber(D)||A.isBoolean(D));}};A.hasOwnProperty=(Object.prototype.hasOwnProperty)?function(D,E){return D&&D.hasOwnProperty(E);}:function(D,E){return !A.isUndefined(D[E])&&D.constructor.prototype[E]!==D[E];};B.augmentObject(A,B,true);YAHOO.util.Lang=A;A.augment=A.augmentProto;YAHOO.augment=A.augmentProto;YAHOO.extend=A.extend;})();YAHOO.register("yahoo",YAHOO,{version:"2.6.0",build:"1321"});/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
 */
YAHOO.util.CustomEvent = function(D, B, C, A) {
	this.type = D;
	this.scope = B || window;
	this.silent = C;
	this.signature = A || YAHOO.util.CustomEvent.LIST;
	this.subscribers = [];
	if (!this.silent) {
	}
	var E = "_YUICEOnSubscribe";
	if (D !== E) {
		this.subscribeEvent = new YAHOO.util.CustomEvent(E, this, true);
	}
	this.lastError = null;
};
YAHOO.util.CustomEvent.LIST = 0;
YAHOO.util.CustomEvent.FLAT = 1;
YAHOO.util.CustomEvent.prototype = {
	subscribe : function(B, C, A) {
		if (!B) {
			throw new Error("Invalid callback for subscriber to '" + this.type
					+ "'");
		}
		if (this.subscribeEvent) {
			this.subscribeEvent.fire(B, C, A);
		}
		this.subscribers.push(new YAHOO.util.Subscriber(B, C, A));
	},
	unsubscribe : function(D, F) {
		if (!D) {
			return this.unsubscribeAll();
		}
		var E = false;
		for ( var B = 0, A = this.subscribers.length; B < A; ++B) {
			var C = this.subscribers[B];
			if (C && C.contains(D, F)) {
				this._delete(B);
				E = true;
			}
		}
		return E;
	},
	fire : function() {
		this.lastError = null;
		var K = [], E = this.subscribers.length;
		if (!E && this.silent) {
			return true;
		}
		var I = [].slice.call(arguments, 0), G = true, D, J = false;
		if (!this.silent) {
		}
		var C = this.subscribers.slice(), A = YAHOO.util.Event.throwErrors;
		for (D = 0; D < E; ++D) {
			var M = C[D];
			if (!M) {
				J = true;
			} else {
				if (!this.silent) {
				}
				var L = M.getScope(this.scope);
				if (this.signature == YAHOO.util.CustomEvent.FLAT) {
					var B = null;
					if (I.length > 0) {
						B = I[0];
					}
					try {
						G = M.fn.call(L, B, M.obj);
					} catch (F) {
						this.lastError = F;
						if (A) {
							throw F;
						}
					}
				} else {
					try {
						G = M.fn.call(L, this.type, I, M.obj);
					} catch (H) {
						this.lastError = H;
						if (A) {
							throw H;
						}
					}
				}
				if (false === G) {
					if (!this.silent) {
					}
					break;
				}
			}
		}
		return (G !== false);
	},
	unsubscribeAll : function() {
		for ( var A = this.subscribers.length - 1; A > -1; A--) {
			this._delete(A);
		}
		this.subscribers = [];
		return A;
	},
	_delete : function(A) {
		var B = this.subscribers[A];
		if (B) {
			delete B.fn;
			delete B.obj;
		}
		this.subscribers.splice(A, 1);
	},
	toString : function() {
		return "CustomEvent: " + "'" + this.type + "', " + "scope: "
				+ this.scope;
	}
};
YAHOO.util.Subscriber = function(B, C, A) {
	this.fn = B;
	this.obj = YAHOO.lang.isUndefined(C) ? null : C;
	this.override = A;
};
YAHOO.util.Subscriber.prototype.getScope = function(A) {
	if (this.override) {
		if (this.override === true) {
			return this.obj;
		} else {
			return this.override;
		}
	}
	return A;
};
YAHOO.util.Subscriber.prototype.contains = function(A, B) {
	if (B) {
		return (this.fn == A && this.obj == B);
	} else {
		return (this.fn == A);
	}
};
YAHOO.util.Subscriber.prototype.toString = function() {
	return "Subscriber { obj: " + this.obj + ", override: "
			+ (this.override || "no") + " }";
};
if (!YAHOO.util.Event) {
	YAHOO.util.Event = function() {
		var H = false;
		var I = [];
		var J = [];
		var G = [];
		var E = [];
		var C = 0;
		var F = [];
		var B = [];
		var A = 0;
		var D = {
			63232 :38,
			63233 :40,
			63234 :37,
			63235 :39,
			63276 :33,
			63277 :34,
			25 :9
		};
		var K = YAHOO.env.ua.ie ? "focusin" : "focus";
		var L = YAHOO.env.ua.ie ? "focusout" : "blur";
		return {
			POLL_RETRYS :2000,
			POLL_INTERVAL :20,
			EL :0,
			TYPE :1,
			FN :2,
			WFN :3,
			UNLOAD_OBJ :3,
			ADJ_SCOPE :4,
			OBJ :5,
			OVERRIDE :6,
			CAPTURE :7,
			lastError :null,
			isSafari :YAHOO.env.ua.webkit,
			webkit :YAHOO.env.ua.webkit,
			isIE :YAHOO.env.ua.ie,
			_interval :null,
			_dri :null,
			DOMReady :false,
			throwErrors :false,
			startInterval : function() {
				if (!this._interval) {
					var M = this;
					var N = function() {
						M._tryPreloadAttach();
					};
					this._interval = setInterval(N, this.POLL_INTERVAL);
				}
			},
			onAvailable : function(R, O, S, Q, P) {
				var M = (YAHOO.lang.isString(R)) ? [ R ] : R;
				for ( var N = 0; N < M.length; N = N + 1) {
					F.push( {
						id :M[N],
						fn :O,
						obj :S,
						override :Q,
						checkReady :P
					});
				}
				C = this.POLL_RETRYS;
				this.startInterval();
			},
			onContentReady : function(O, M, P, N) {
				this.onAvailable(O, M, P, N, true);
			},
			onDOMReady : function(M, O, N) {
				if (this.DOMReady) {
					setTimeout( function() {
						var P = window;
						if (N) {
							if (N === true) {
								P = O;
							} else {
								P = N;
							}
						}
						M.call(P, "DOMReady", [], O);
					}, 0);
				} else {
					this.DOMReadyEvent.subscribe(M, O, N);
				}
			},
			_addListener : function(O, M, X, S, N, a) {
				if (!X || !X.call) {
					return false;
				}
				if (this._isValidCollection(O)) {
					var Y = true;
					for ( var T = 0, V = O.length; T < V; ++T) {
						Y = this._addListener(O[T], M, X, S, N, a) && Y;
					}
					return Y;
				} else {
					if (YAHOO.lang.isString(O)) {
						var R = this.getEl(O);
						if (R) {
							O = R;
						} else {
							this.onAvailable(O,
									function() {
										YAHOO.util.Event._addListener(O, M, X,
												S, N, a);
									});
							return true;
						}
					}
				}
				if (!O) {
					return false;
				}
				if ("unload" == M && S !== this) {
					J[J.length] = [ O, M, X, S, N, a ];
					return true;
				}
				var b = O;
				if (N) {
					if (N === true) {
						b = S;
					} else {
						b = N;
					}
				}
				var P = function(c) {
					return X.call(b, YAHOO.util.Event.getEvent(c, O), S);
				};
				var Z = [ O, M, X, P, b, S, N, a ];
				var U = I.length;
				I[U] = Z;
				if (this.useLegacyEvent(O, M)) {
					var Q = this.getLegacyIndex(O, M);
					if (Q == -1 || O != G[Q][0]) {
						Q = G.length;
						B[O.id + M] = Q;
						G[Q] = [ O, M, O["on" + M] ];
						E[Q] = [];
						O["on" + M] = function(c) {
							YAHOO.util.Event.fireLegacyEvent(YAHOO.util.Event
									.getEvent(c), Q);
						};
					}
					E[Q].push(Z);
				} else {
					try {
						this._simpleAdd(O, M, P, a);
					} catch (W) {
						this.lastError = W;
						this._removeListener(O, M, X, a);
						return false;
					}
				}
				return true;
			},
			addListener : function(O, Q, N, P, M) {
				return this._addListener(O, Q, N, P, M, false);
			},
			addFocusListener : function(O, N, P, M) {
				return this._addListener(O, K, N, P, M, true);
			},
			removeFocusListener : function(N, M) {
				return this._removeListener(N, K, M, true);
			},
			addBlurListener : function(O, N, P, M) {
				return this._addListener(O, L, N, P, M, true);
			},
			removeBlurListener : function(N, M) {
				return this._removeListener(N, L, M, true);
			},
			fireLegacyEvent : function(Q, O) {
				var S = true, M, U, T, V, R;
				U = E[O].slice();
				for ( var N = 0, P = U.length; N < P; ++N) {
					T = U[N];
					if (T && T[this.WFN]) {
						V = T[this.ADJ_SCOPE];
						R = T[this.WFN].call(V, Q);
						S = (S && R);
					}
				}
				M = G[O];
				if (M && M[2]) {
					M[2](Q);
				}
				return S;
			},
			getLegacyIndex : function(N, O) {
				var M = this.generateId(N) + O;
				if (typeof B[M] == "undefined") {
					return -1;
				} else {
					return B[M];
				}
			},
			useLegacyEvent : function(M, N) {
				return (this.webkit && this.webkit < 419 && ("click" == N || "dblclick" == N));
			},
			_removeListener : function(N, M, V, Y) {
				var Q, T, X;
				if (typeof N == "string") {
					N = this.getEl(N);
				} else {
					if (this._isValidCollection(N)) {
						var W = true;
						for (Q = N.length - 1; Q > -1; Q--) {
							W = (this._removeListener(N[Q], M, V, Y) && W);
						}
						return W;
					}
				}
				if (!V || !V.call) {
					return this.purgeElement(N, false, M);
				}
				if ("unload" == M) {
					for (Q = J.length - 1; Q > -1; Q--) {
						X = J[Q];
						if (X && X[0] == N && X[1] == M && X[2] == V) {
							J.splice(Q, 1);
							return true;
						}
					}
					return false;
				}
				var R = null;
				var S = arguments[4];
				if ("undefined" === typeof S) {
					S = this._getCacheIndex(N, M, V);
				}
				if (S >= 0) {
					R = I[S];
				}
				if (!N || !R) {
					return false;
				}
				if (this.useLegacyEvent(N, M)) {
					var P = this.getLegacyIndex(N, M);
					var O = E[P];
					if (O) {
						for (Q = 0, T = O.length; Q < T; ++Q) {
							X = O[Q];
							if (X && X[this.EL] == N && X[this.TYPE] == M
									&& X[this.FN] == V) {
								O.splice(Q, 1);
								break;
							}
						}
					}
				} else {
					try {
						this._simpleRemove(N, M, R[this.WFN], Y);
					} catch (U) {
						this.lastError = U;
						return false;
					}
				}
				delete I[S][this.WFN];
				delete I[S][this.FN];
				I.splice(S, 1);
				return true;
			},
			removeListener : function(N, O, M) {
				return this._removeListener(N, O, M, false);
			},
			getTarget : function(O, N) {
				var M = O.target || O.srcElement;
				return this.resolveTextNode(M);
			},
			resolveTextNode : function(N) {
				try {
					if (N && 3 == N.nodeType) {
						return N.parentNode;
					}
				} catch (M) {
				}
				return N;
			},
			getPageX : function(N) {
				var M = N.pageX;
				if (!M && 0 !== M) {
					M = N.clientX || 0;
					if (this.isIE) {
						M += this._getScrollLeft();
					}
				}
				return M;
			},
			getPageY : function(M) {
				var N = M.pageY;
				if (!N && 0 !== N) {
					N = M.clientY || 0;
					if (this.isIE) {
						N += this._getScrollTop();
					}
				}
				return N;
			},
			getXY : function(M) {
				return [ this.getPageX(M), this.getPageY(M) ];
			},
			getRelatedTarget : function(N) {
				var M = N.relatedTarget;
				if (!M) {
					if (N.type == "mouseout") {
						M = N.toElement;
					} else {
						if (N.type == "mouseover") {
							M = N.fromElement;
						}
					}
				}
				return this.resolveTextNode(M);
			},
			getTime : function(O) {
				if (!O.time) {
					var N = new Date().getTime();
					try {
						O.time = N;
					} catch (M) {
						this.lastError = M;
						return N;
					}
				}
				return O.time;
			},
			stopEvent : function(M) {
				this.stopPropagation(M);
				this.preventDefault(M);
			},
			stopPropagation : function(M) {
				if (M.stopPropagation) {
					M.stopPropagation();
				} else {
					M.cancelBubble = true;
				}
			},
			preventDefault : function(M) {
				if (M.preventDefault) {
					M.preventDefault();
				} else {
					M.returnValue = false;
				}
			},
			getEvent : function(O, M) {
				var N = O || window.event;
				if (!N) {
					var P = this.getEvent.caller;
					while (P) {
						N = P.arguments[0];
						if (N && Event == N.constructor) {
							break;
						}
						P = P.caller;
					}
				}
				return N;
			},
			getCharCode : function(N) {
				var M = N.keyCode || N.charCode || 0;
				if (YAHOO.env.ua.webkit && (M in D)) {
					M = D[M];
				}
				return M;
			},
			_getCacheIndex : function(Q, R, P) {
				for ( var O = 0, N = I.length; O < N; O = O + 1) {
					var M = I[O];
					if (M && M[this.FN] == P && M[this.EL] == Q
							&& M[this.TYPE] == R) {
						return O;
					}
				}
				return -1;
			},
			generateId : function(M) {
				var N = M.id;
				if (!N) {
					N = "yuievtautoid-" + A;
					++A;
					M.id = N;
				}
				return N;
			},
			_isValidCollection : function(N) {
				try {
					return (N && typeof N !== "string" && N.length
							&& !N.tagName && !N.alert && typeof N[0] !== "undefined");
				} catch (M) {
					return false;
				}
			},
			elCache : {},
			getEl : function(M) {
				return (typeof M === "string") ? document.getElementById(M) : M;
			},
			clearCache : function() {
			},
			DOMReadyEvent :new YAHOO.util.CustomEvent("DOMReady", this),
			_load : function(N) {
				if (!H) {
					H = true;
					var M = YAHOO.util.Event;
					M._ready();
					M._tryPreloadAttach();
				}
			},
			_ready : function(N) {
				var M = YAHOO.util.Event;
				if (!M.DOMReady) {
					M.DOMReady = true;
					M.DOMReadyEvent.fire();
					M._simpleRemove(document, "DOMContentLoaded", M._ready);
				}
			},
			_tryPreloadAttach : function() {
				if (F.length === 0) {
					C = 0;
					clearInterval(this._interval);
					this._interval = null;
					return;
				}
				if (this.locked) {
					return;
				}
				if (this.isIE) {
					if (!this.DOMReady) {
						this.startInterval();
						return;
					}
				}
				this.locked = true;
				var S = !H;
				if (!S) {
					S = (C > 0 && F.length > 0);
				}
				var R = [];
				var T = function(V, W) {
					var U = V;
					if (W.override) {
						if (W.override === true) {
							U = W.obj;
						} else {
							U = W.override;
						}
					}
					W.fn.call(U, W.obj);
				};
				var N, M, Q, P, O = [];
				for (N = 0, M = F.length; N < M; N = N + 1) {
					Q = F[N];
					if (Q) {
						P = this.getEl(Q.id);
						if (P) {
							if (Q.checkReady) {
								if (H || P.nextSibling || !S) {
									O.push(Q);
									F[N] = null;
								}
							} else {
								T(P, Q);
								F[N] = null;
							}
						} else {
							R.push(Q);
						}
					}
				}
				for (N = 0, M = O.length; N < M; N = N + 1) {
					Q = O[N];
					T(this.getEl(Q.id), Q);
				}
				C--;
				if (S) {
					for (N = F.length - 1; N > -1; N--) {
						Q = F[N];
						if (!Q || !Q.id) {
							F.splice(N, 1);
						}
					}
					this.startInterval();
				} else {
					clearInterval(this._interval);
					this._interval = null;
				}
				this.locked = false;
			},
			purgeElement : function(Q, R, T) {
				var O = (YAHOO.lang.isString(Q)) ? this.getEl(Q) : Q;
				var S = this.getListeners(O, T), P, M;
				if (S) {
					for (P = S.length - 1; P > -1; P--) {
						var N = S[P];
						this._removeListener(O, N.type, N.fn, N.capture);
					}
				}
				if (R && O && O.childNodes) {
					for (P = 0, M = O.childNodes.length; P < M; ++P) {
						this.purgeElement(O.childNodes[P], R, T);
					}
				}
			},
			getListeners : function(O, M) {
				var R = [], N;
				if (!M) {
					N = [ I, J ];
				} else {
					if (M === "unload") {
						N = [ J ];
					} else {
						N = [ I ];
					}
				}
				var T = (YAHOO.lang.isString(O)) ? this.getEl(O) : O;
				for ( var Q = 0; Q < N.length; Q = Q + 1) {
					var V = N[Q];
					if (V) {
						for ( var S = 0, U = V.length; S < U; ++S) {
							var P = V[S];
							if (P && P[this.EL] === T
									&& (!M || M === P[this.TYPE])) {
								R.push( {
									type :P[this.TYPE],
									fn :P[this.FN],
									obj :P[this.OBJ],
									adjust :P[this.OVERRIDE],
									scope :P[this.ADJ_SCOPE],
									capture :P[this.CAPTURE],
									index :S
								});
							}
						}
					}
				}
				return (R.length) ? R : null;
			},
			_unload : function(S) {
				var M = YAHOO.util.Event, P, O, N, R, Q, T = J.slice();
				for (P = 0, R = J.length; P < R; ++P) {
					N = T[P];
					if (N) {
						var U = window;
						if (N[M.ADJ_SCOPE]) {
							if (N[M.ADJ_SCOPE] === true) {
								U = N[M.UNLOAD_OBJ];
							} else {
								U = N[M.ADJ_SCOPE];
							}
						}
						N[M.FN]
								.call(U, M.getEvent(S, N[M.EL]),
										N[M.UNLOAD_OBJ]);
						T[P] = null;
						N = null;
						U = null;
					}
				}
				J = null;
				if (I) {
					for (O = I.length - 1; O > -1; O--) {
						N = I[O];
						if (N) {
							M._removeListener(N[M.EL], N[M.TYPE], N[M.FN],
									N[M.CAPTURE], O);
						}
					}
					N = null;
				}
				G = null;
				M._simpleRemove(window, "unload", M._unload);
			},
			_getScrollLeft : function() {
				return this._getScroll()[1];
			},
			_getScrollTop : function() {
				return this._getScroll()[0];
			},
			_getScroll : function() {
				var M = document.documentElement, N = document.body;
				if (M && (M.scrollTop || M.scrollLeft)) {
					return [ M.scrollTop, M.scrollLeft ];
				} else {
					if (N) {
						return [ N.scrollTop, N.scrollLeft ];
					} else {
						return [ 0, 0 ];
					}
				}
			},
			regCE : function() {
			},
			_simpleAdd : function() {
				if (window.addEventListener) {
					return function(O, P, N, M) {
						O.addEventListener(P, N, (M));
					};
				} else {
					if (window.attachEvent) {
						return function(O, P, N, M) {
							O.attachEvent("on" + P, N);
						};
					} else {
						return function() {
						};
					}
				}
			}(),
			_simpleRemove : function() {
				if (window.removeEventListener) {
					return function(O, P, N, M) {
						O.removeEventListener(P, N, (M));
					};
				} else {
					if (window.detachEvent) {
						return function(N, O, M) {
							N.detachEvent("on" + O, M);
						};
					} else {
						return function() {
						};
					}
				}
			}()
		};
	}();
	( function() {
		var EU = YAHOO.util.Event;
		EU.on = EU.addListener;
		EU.onFocus = EU.addFocusListener;
		EU.onBlur = EU.addBlurListener;
		/* DOMReady: based on work by: Dean Edwards/John Resig/Matthias Miller */
		if (EU.isIE) {
			YAHOO.util.Event.onDOMReady(YAHOO.util.Event._tryPreloadAttach,
					YAHOO.util.Event, true);
			var n = document.createElement("p");
			EU._dri = setInterval( function() {
				try {
					n.doScroll("left");
					clearInterval(EU._dri);
					EU._dri = null;
					EU._ready();
					n = null;
				} catch (ex) {
				}
			}, EU.POLL_INTERVAL);
		} else {
			if (EU.webkit && EU.webkit < 525) {
				EU._dri = setInterval( function() {
					var rs = document.readyState;
					if ("loaded" == rs || "complete" == rs) {
						clearInterval(EU._dri);
						EU._dri = null;
						EU._ready();
					}
				}, EU.POLL_INTERVAL);
			} else {
				EU._simpleAdd(document, "DOMContentLoaded", EU._ready);
			}
		}
		EU._simpleAdd(window, "load", EU._load);
		EU._simpleAdd(window, "unload", EU._unload);
		EU._tryPreloadAttach();
	})();
}
YAHOO.util.EventProvider = function() {
};
YAHOO.util.EventProvider.prototype = {
	__yui_events :null,
	__yui_subscribers :null,
	subscribe : function(A, C, F, E) {
		this.__yui_events = this.__yui_events || {};
		var D = this.__yui_events[A];
		if (D) {
			D.subscribe(C, F, E);
		} else {
			this.__yui_subscribers = this.__yui_subscribers || {};
			var B = this.__yui_subscribers;
			if (!B[A]) {
				B[A] = [];
			}
			B[A].push( {
				fn :C,
				obj :F,
				override :E
			});
		}
	},
	unsubscribe : function(C, E, G) {
		this.__yui_events = this.__yui_events || {};
		var A = this.__yui_events;
		if (C) {
			var F = A[C];
			if (F) {
				return F.unsubscribe(E, G);
			}
		} else {
			var B = true;
			for ( var D in A) {
				if (YAHOO.lang.hasOwnProperty(A, D)) {
					B = B && A[D].unsubscribe(E, G);
				}
			}
			return B;
		}
		return false;
	},
	unsubscribeAll : function(A) {
		return this.unsubscribe(A);
	},
	createEvent : function(G, D) {
		this.__yui_events = this.__yui_events || {};
		var A = D || {};
		var I = this.__yui_events;
		if (I[G]) {
		} else {
			var H = A.scope || this;
			var E = (A.silent);
			var B = new YAHOO.util.CustomEvent(G, H, E,
					YAHOO.util.CustomEvent.FLAT);
			I[G] = B;
			if (A.onSubscribeCallback) {
				B.subscribeEvent.subscribe(A.onSubscribeCallback);
			}
			this.__yui_subscribers = this.__yui_subscribers || {};
			var F = this.__yui_subscribers[G];
			if (F) {
				for ( var C = 0; C < F.length; ++C) {
					B.subscribe(F[C].fn, F[C].obj, F[C].override);
				}
			}
		}
		return I[G];
	},
	fireEvent : function(E, D, A, C) {
		this.__yui_events = this.__yui_events || {};
		var G = this.__yui_events[E];
		if (!G) {
			return null;
		}
		var B = [];
		for ( var F = 1; F < arguments.length; ++F) {
			B.push(arguments[F]);
		}
		return G.fire.apply(G, B);
	},
	hasEvent : function(A) {
		if (this.__yui_events) {
			if (this.__yui_events[A]) {
				return true;
			}
		}
		return false;
	}
};
YAHOO.util.KeyListener = function(A, F, B, C) {
	if (!A) {
	} else {
		if (!F) {
		} else {
			if (!B) {
			}
		}
	}
	if (!C) {
		C = YAHOO.util.KeyListener.KEYDOWN;
	}
	var D = new YAHOO.util.CustomEvent("keyPressed");
	this.enabledEvent = new YAHOO.util.CustomEvent("enabled");
	this.disabledEvent = new YAHOO.util.CustomEvent("disabled");
	if (typeof A == "string") {
		A = document.getElementById(A);
	}
	if (typeof B == "function") {
		D.subscribe(B);
	} else {
		D.subscribe(B.fn, B.scope, B.correctScope);
	}
	function E(J, I) {
		if (!F.shift) {
			F.shift = false;
		}
		if (!F.alt) {
			F.alt = false;
		}
		if (!F.ctrl) {
			F.ctrl = false;
		}
		if (J.shiftKey == F.shift && J.altKey == F.alt && J.ctrlKey == F.ctrl) {
			var G;
			if (F.keys instanceof Array) {
				for ( var H = 0; H < F.keys.length; H++) {
					G = F.keys[H];
					if (G == J.charCode) {
						D.fire(J.charCode, J);
						break;
					} else {
						if (G == J.keyCode) {
							D.fire(J.keyCode, J);
							break;
						}
					}
				}
			} else {
				G = F.keys;
				if (G == J.charCode) {
					D.fire(J.charCode, J);
				} else {
					if (G == J.keyCode) {
						D.fire(J.keyCode, J);
					}
				}
			}
		}
	}
	this.enable = function() {
		if (!this.enabled) {
			YAHOO.util.Event.addListener(A, C, E);
			this.enabledEvent.fire(F);
		}
		this.enabled = true;
	};
	this.disable = function() {
		if (this.enabled) {
			YAHOO.util.Event.removeListener(A, C, E);
			this.disabledEvent.fire(F);
		}
		this.enabled = false;
	};
	this.toString = function() {
		return "KeyListener [" + F.keys + "] " + A.tagName
				+ (A.id ? "[" + A.id + "]" : "");
	};
};
YAHOO.util.KeyListener.KEYDOWN = "keydown";
YAHOO.util.KeyListener.KEYUP = "keyup";
YAHOO.util.KeyListener.KEY = {
	ALT :18,
	BACK_SPACE :8,
	CAPS_LOCK :20,
	CONTROL :17,
	DELETE :46,
	DOWN :40,
	END :35,
	ENTER :13,
	ESCAPE :27,
	HOME :36,
	LEFT :37,
	META :224,
	NUM_LOCK :144,
	PAGE_DOWN :34,
	PAGE_UP :33,
	PAUSE :19,
	PRINTSCREEN :44,
	RIGHT :39,
	SCROLL_LOCK :145,
	SHIFT :16,
	SPACE :32,
	TAB :9,
	UP :38
};
YAHOO.register("event", YAHOO.util.Event, {
	version :"2.6.0",
	build :"1321"
});function handleKeyEvents(event,prevobj,nextobj) { 
   
   	   var browserName=navigator.appName;
   	    if (browserName=="Netscape") 
   	    	return handleKeyEventsNE(event,prevobj,nextobj);
   	    else  if (browserName=="Microsoft Internet Explorer") 
   	    	return handleKeyEventsIE(event,prevobj,nextobj);
}



function handleLeftArrowNE(event,prevobj,nextobj){
	
	 var obj = event.target;
	if( (obj.type == "text" || obj.type == "textarea") ){
		if(!event.ctrlKey && obj.selectionStart != 0){
			return true;
		}
		if( event.shiftKey){
			return true;
		}

	} 
	if( obj.type == "radio" ){
		if( obj != document.forms[0].elements[obj.name].item(0)){
			return true;
		}
			
	}
	event.preventDefault();

	var focusObj ;

	if( document.forms[0].elements[prevobj] != null){
		if(document.forms[0].elements[prevobj].type == "hidden" &&  document.forms[0].elements[prevobj + "_text"]){

			prevobj = prevobj + "_text";
		}else 	if(document.forms[0].elements[prevobj].type == "hidden" ){
			//Ajax auto complete
			
			var ctrl = comboMap.Get(prevobj + "_combo");
			if(ctrl){
				ctrl.DOMelem_input.focus();
				return false;
			}	
		}
		if(document.forms[0].elements[prevobj].disabled){
			return true;
		}
		if(document.forms[0].elements[prevobj].style && document.forms[0].elements[prevobj].style.visibility == "hidden"){
			return true;
		}
		if(document.forms[0].elements[prevobj].item && document.forms[0].elements[prevobj].type !="select-one" && document.forms[0].elements[prevobj].type !="select-multiple" ){
			
			if( document.forms[0].elements[prevobj].length == 2 && 
				document.forms[0].elements[prevobj].item(0).type == "hidden" &&
				document.forms[0].elements[prevobj].item(1).type == "select-one"){
				
				//Ajax autocomplete
				prevobj = prevobj + "_input2";
				
				if( document.getElementById(prevobj ) ){
					
					focusObj = document.getElementById(prevobj );
					//setTimeout('document.getElementById(\'' + prevobj + '\').focus()',0);
				}
				
			}else{
			// This might be radio button
				focusObj = document.forms[0].elements[prevobj].item(0);
				//setTimeout('document.forms[0].elements[\'' + prevobj + '\'].item(document.forms[0].elements[\'' + prevobj + '\'].length - 1).focus()',0);
			}
	

			
			
		}else{
			focusObj = document.forms[0].elements[prevobj];
			//setTimeout('document.forms[0].elements[\'' + prevobj + '\'].focus()',0);
		}
		//return false;
	}else if(document.anchors[prevobj] != null ){ // Might be Link
		focusObj = document.anchors[prevobj];
		//setTimeout('document.anchors[\'' + prevobj + '\'].focus()',0);
		//return false;
	}
	

	
	if(focusObj){
		
		if( obj.type == "select-one" || obj.type == "select-multiple"){
			var selIndex  = obj.selectedIndex;
			var onChange = obj.onchange;
			
			obj.onchange=null;
			
			setTimeout(function(){focusObj.focus();obj.selectedIndex=selIndex;obj.onchange=onChange;},0);
			
		}else{
			setTimeout(function(){focusObj.focus();},0);
		}
		return false;
		
	
	}else{
		return true;
	}
 	     	 		


}

function handleRightArrowNE(event,prevobj,nextobj){
	
 	 var obj = event.target;
 	
 	
	if( (obj.type == "text" || obj.type == "textarea")  ){
		if(!event.ctrlKey &&obj.selectionStart < obj.value.length){
			return true;
		}
		if( event.shiftKey){
			return true;
		}
	}
	if( obj.type == "radio" ){
		if( obj != document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 )){
			return true;
		}
			
	}
	event.preventDefault();

	var focusObj ;
	if( document.forms[0].elements[nextobj] != null){
		
		
		if(document.forms[0].elements[nextobj].type == "hidden" &&  document.forms[0].elements[nextobj + "_text"]){

			nextobj = nextobj + "_text";
		}else 	if(document.forms[0].elements[nextobj].type == "hidden" ){
			//Ajax auto complete
			
			var ctrl = comboMap.Get(nextobj + "_combo");
			if(ctrl){
				focusObj = ctrl.DOMelem_input.focus();
				return false;
			}
			
			
			
			
			
		}
		if(document.forms[0].elements[nextobj].disabled){
			return true;
		}
		if(document.forms[0].elements[nextobj].style && document.forms[0].elements[nextobj].style.visibility == "hidden"){
			return true;
		}
		
		
		if(document.forms[0].elements[nextobj].item && document.forms[0].elements[nextobj].type !="select-one" && document.forms[0].elements[nextobj].type !="select-multiple" ){
			if( document.forms[0].elements[nextobj].length == 2 && 
				document.forms[0].elements[nextobj].item(0).type == "hidden" &&
				document.forms[0].elements[nextobj].item(1).type == "select-one"){
				
				//Ajax autocomplete
				nextobj = nextobj + "_input2";
				
				
				if( document.getElementById(nextobj ) ){
					focusObj = document.getElementById(nextobj );
					
					//setTimeout('document.getElementById(\'' + nextobj + '\').focus()',0);
				}
				
			}else{
			// This might be radio button
				focusObj = document.forms[0].elements[nextobj].item(0);
				//setTimeout('document.forms[0].elements[\'' + nextobj + '\'].item(0).focus()',0);
			}
	

			
			
		}else{
			focusObj = document.forms[0].elements[ nextobj ];
			//setTimeout('document.forms[0].elements[\'' + nextobj + '\'].focus()',0);
			//setTimeout(function(){document.forms[0].elements[ nextobj].focus()',0);
		}
		//setTimeout('document.forms[0].elements[\'' + nextobj + '\'].focus()',0);
		//return false;

	}else if(document.anchors[nextobj] != null ){ // Might be Link
		
		focusObj = document.anchors[nextobj];
		//setTimeout('document.anchors[\'' + nextobj + '\'].focus()',0);
		//return false;
	}
	
	if(focusObj){
		
		if( obj.type == "select-one" || obj.type == "select-multiple"){
			
			var selIndex  = obj.selectedIndex;
			var onChange = obj.onchange;
			
			obj.onchange=null;
			
			setTimeout(function(){focusObj.focus();obj.selectedIndex=selIndex;obj.onchange=onChange;},0);
		}else{
			setTimeout(function(){focusObj.focus();},0);
		}
		return false;
		
	
	}else{
		return true;
	}
	
	
	

	
	

}

function handleDownArrowNE(event,prevobj,nextobj){
	 var obj = event.target;
	if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){return true;}
	if(obj.name.endsWith("_input") && obj.type == "text" && 
		document.forms[0].elements[obj.name.substring(0,obj.name.indexOf("_input"))] ){
		
		if( event.ctrlKey ){
			var combo = comboMap.Get(obj.name.substring(0,obj.name.indexOf("_input")) + "_combo");
			combo._confirmSelection();
         		combo.closeAll();
         		event.cancelBubble=true;
		}else{
			return true;
		}
	    
	}
	var elements = document.forms[0].elements;
	var distance = 1000;
	var ydiff = 1000;
	var toElement;
	var found = false;
	var insideDatatable = true;
	var jumpingFromdataTable = false;
	var currentLeft = screen.width;
	var objTop = document.getBoxObjectFor(obj).y;
	var minusValue = 0;
	if(obj.name.indexOf("TRRow") > 0 && obj.name.indexOf("TDRow") > 0){
		jumpingFromdataTable = true;   
		try{
			minusValue  = obj.offsetParent.offsetParent.parentNode.scrollHeight - obj.offsetParent.offsetParent.parentNode.clientHeight;
			objTop = objTop - minusValue;
		}catch(e){

		}
	}
	
	
	
	var elmLength = elements.length;
	var noIterations = 0;
	var elm;
	var lastFocusableElement;
	
	for( var i = 0; i< elmLength; i++){

		 elm = elements[i];
		if( elm != obj && !found ){
			continue;
		}else if( elm == obj ){

			found = true;
			continue;
		}

		if( elm.readOnly || elm.disabled){continue;}
		var onFocus = elm.getAttribute("onFocus");

		if(onFocus != null && (onFocus.indexOf("blur") > -1 || onFocus.indexOf("looseFocus(") > -1) ) continue;
		if(elm.style.visibility == "hidden") continue;
		var elmTop = document.getBoxObjectFor(elm).y;
		
		if( elm.type == "text" || elm.type == "textarea"
			|| elm.type == "select-one" || elm.type == "select-multiple" ||  elm.type == "radio" 
			|| elm.type == "checkbox" || elm.type == "button" || elm.type == "submit") {
			if( elm.name.indexOf("TRRow") > 0 && elm.name.indexOf("TDRow") > 0 && insideDatatable){
				elmTop = elmTop - minusValue;
			}
			lastFocusableElement = elm;
			if( elmTop > objTop + 10){
				
				if( (elm.name.indexOf("TRRow") > 0 || elm.name.indexOf("TDRow")) > 0 && insideDatatable){
					// Element is inside datatable. This case find the left most element
					toElement = elm;

					break;

				}else{
					var objleft = document.getBoxObjectFor(obj).x ;
					var elmleft = document.getBoxObjectFor(elm).x ;
					var tmpXdiff = Math.abs(objleft - elmleft);
					var tmpYdiff = elmTop - objTop ;
					var tmpDistance = Math.sqrt(tmpXdiff * tmpXdiff + tmpYdiff * tmpYdiff);
					
					if(jumpingFromdataTable){
						

						

						if(ydiff > tmpYdiff && currentLeft > elmleft){
							
							currentLeft = elmleft;
							toElement = elm;
							ydiff = tmpYdiff;
							
						}
					}else  if(distance >  tmpDistance && 
						tmpYdiff > 0   && elm.name.indexOf("TRRow") == -1 && elm.name.indexOf("TDRow") == -1){
						insideDatatable = false;

						distance = tmpDistance;
						toElement = elm;
						noIterations = 0;
		

					}
					
					noIterations++;
					if(noIterations > 10 && toElement != null){
						// If we are not finding any nearer components in 10 iterations 
						break;
					}



				}

			}


		}
	}
	if(toElement == null){
		toElement = lastFocusableElement;
	}
	if( toElement != null){
		
		event.preventDefault();

		if( (obj.type == "select-one" || obj.type == "select-multiple") && event.ctrlKey){
			var selIndex  = obj.selectedIndex;
			var onChange = obj.onchange;			
			obj.onchange=null;			
			setTimeout(function(){toElement.focus();obj.selectedIndex=selIndex;obj.onchange=onChange;},0);
			
		}else{
			setTimeout(function() { toElement.focus(); }, 0);		
		}
		
		return false;
		
	}
	return true;
 	     	 	
}

function handleUpArrowNE(event,prevobj,nextobj){
	var obj = event.target;
	if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){return true;}
	
	if(obj.name.endsWith("_input") && obj.type == "text" && 
			document.forms[0].elements[obj.name.substring(0,obj.name.indexOf("_input"))] ){
			
			if( event.ctrlKey ){
				var combo = comboMap.Get(obj.name.substring(0,obj.name.indexOf("_input")) + "_combo");
				combo._confirmSelection();
	         		combo.closeAll();
	         		event.cancelBubble=true;
			}else{
				return true;
			}
		    
	}
	
	var elements = document.forms[0].elements;

	var distance = 1000;
	var ydiff = 1000;
	var toElement;
	var found = false;
	var jumpingFromdataTable = false;
	var currentLeft = screen.width;
	var insideDatatable = true;
	var currentTop = document.getBoxObjectFor(obj).y;
	var objTop = document.getBoxObjectFor(obj).y;
	if(obj.name.indexOf("TRRow") > 0 || obj.name.indexOf("TDRow") > 0){
		jumpingFromdataTable = true; 
		

	}
	
	
	for( var i = elements.length -1; i >=0 ; i--){
		var elm = elements[i];
		if( elm != obj && !found ){
			continue;
		}else if( elm == obj ){

			found = true;
			continue;
		}
		
		if( elm.readOnly || elm.disabled){continue;}
		var onFocus = elm.getAttribute("onFocus");
		if(onFocus != null && (onFocus.indexOf("blur") > -1 || onFocus.indexOf("looseFocus(") > -1) ) continue;
		if(elm.style.visibility == "hidden") continue;
		var elmTop = document.getBoxObjectFor(elm).y;
		if( elm.type == "text" || elm.type == "textarea"
			|| elm.type == "select-one" || elm.type == "select-multiple"
			|| elm.type == "checkbox" || elm.type == "button" || elm.type == "submit" || elm.type == "radio"){
	
			if((elm.name.indexOf("TRRow") > 0 || elm.name.indexOf("TDRow") > 0) && !jumpingFromdataTable){
				 
				try{
					var minusValue  = elm.offsetParent.offsetParent.parentNode.scrollHeight - elm.offsetParent.offsetParent.parentNode.clientHeight;
					elmTop = elmTop - minusValue;
				}catch(e){

				}
			}
			var elmleft = document.getBoxObjectFor(elm).x ;
			if( elmTop < objTop - 10){

				
				var objleft = document.getBoxObjectFor(obj).x ;
					
				var tmpXdiff = Math.abs(objleft - elmleft);
				var tmpYdiff = objTop - elmTop ;
				var tmpDistance = Math.sqrt(tmpXdiff * tmpXdiff + tmpYdiff * tmpYdiff);

				if( elm.name.indexOf("TRRow") > 0 || elm.name.indexOf("TDRow") > 0  ){
					// Element is inside datatable. This case find the left most element
					try{
						//if(!jumpingFromdataTable){
							var minusValue  = elm.offsetParent.offsetParent.parentNode.scrollWidth - elm.offsetParent.offsetParent.parentNode.clientWidth;
							elmleft = elmleft - minusValue;
						//}
					}catch(e){

					}
					
					
					if( toElement != null && !insideDatatable){
						break;
					}
					
					if( currentLeft > elmleft){
							
						currentLeft = elmleft;
						toElement = elm;						
							
					}else if( toElement!= null) {
						
						break;
						
					}

					

				}else{
					
					
					if(jumpingFromdataTable){
						if(elm.type=="checkbox" || elm.type=="radio"){
							tmpYdiff = tmpYdiff + 8;
						}
						//alert(tmpYdiff + "  " + elm.name + "  " + elmleft);
						if(tmpYdiff <= ydiff && currentLeft > elmleft){
							//currentTop = elm.getBoundingClientRect().top;
							currentLeft = elmleft;
							toElement = elm;
							 ydiff = tmpYdiff ;
							
						}

					}else if(distance >  tmpDistance && 
						tmpYdiff > 0   && elm.name.indexOf("TRRow") == -1 && elm.name.indexOf("TDRow") == -1){
						
						insideDatatable = false;

						distance = tmpDistance;
						toElement = elm;
					
					}	     	 				



				}
			}

		}
	}
	

	if( toElement != null){
		
		event.preventDefault();

		if( (obj.type == "select-one" || obj.type == "select-multiple") && event.ctrlKey){
			var selIndex  = obj.selectedIndex;
			var onChange = obj.onchange;
			obj.onchange=null;
			setTimeout(function(){toElement.focus();obj.selectedIndex=selIndex;obj.onchange=onChange;},0);	
			
		}else{
			setTimeout(function() { toElement.focus(); }, 0);		
		}
		
		return false;
		
	}
	
	return true;

}


function handleKeyEventsNE(event,prevobj,nextobj){
		

 	     	 var code = event.which;
 	     	 var obj = event.target;
 	     	 if( code == 37 &&  prevobj!= null){
 	     	 	return handleLeftArrowNE(event,prevobj,nextobj);   	 			     	 
 	     	 }else if( code == 39 &&  nextobj!= null){
			return handleRightArrowNE(event,prevobj,nextobj);   
 	     	 }else if( code == 40 ){ // DOWN ARROW
 	     	 	
			return handleDownArrowNE(event,prevobj,nextobj);
 	     	 }else if( code == 38 ){ // UP ARROW
 	     	 	return handleUpArrowNE(event,prevobj,nextobj);
 	     	 }
  		
 	


}

function handleLeftArrowIE(event,prevobj,nextobj){
	
	var obj = event.srcElement;
	if( (obj.type == "text"  )  && !event.ctrlKey && getCaretPos(obj) > 0){
		return true;
	}

	if( obj.type == "radio" ){
		if( obj != document.forms[0].elements[obj.name].item(0)){
			return true;
		}
		
	}
	
	if( obj.type == "textarea" && !event.ctrlKey){

		var pos = getCaretPos(obj);
		if( pos > 0 ){
			return true;
		}
	}
	
	if( document.forms[0].elements[prevobj] != null){
		if(document.forms[0].elements[prevobj].type == "hidden" && document.forms[0].elements[prevobj + "_text"]){

			prevobj = prevobj + "_text";
		}else 	if(document.forms[0].elements[prevobj].type == "hidden" ){
			//Ajax auto complete
			
			var ctrl = comboMap.Get(prevobj + "_combo");
			if(ctrl){
				ctrl.DOMelem_input.focus();
				return false;
			}
			
			
			
			
			
		}
		if(document.forms[0].elements[prevobj].disabled){
			return true;
		}
		if(document.forms[0].elements[prevobj].style && document.forms[0].elements[prevobj].style.visibility == "hidden"){
			return true;
		}
		if(document.forms[0].elements[prevobj].item && document.forms[0].elements[prevobj].type !="select-one" && document.forms[0].elements[prevobj].type !="select-multiple" ){
			
			if( document.forms[0].elements[prevobj].length == 2 && 
				document.forms[0].elements[prevobj].item(0).type == "hidden" &&
				document.forms[0].elements[prevobj].item(1).type == "select-one"){
				
				//Ajax autocomplete
				prevobj = prevobj + "_input2";
				
				if( document.getElementById(prevobj ) ){
					
					setTimeout('document.getElementById(\'' + prevobj + '\').focus()',0);
				}
				
			}else{
			
			// This might be radio button
			
			
				setTimeout('document.forms[0].elements[\'' + prevobj + '\'].item(document.forms[0].elements[\'' + prevobj + '\'].length - 1).focus()',0);
			
			}
			
			
		}else{
		
			setTimeout('document.forms[0].elements[\'' + prevobj + '\'].focus()',0);
		}
		return false;
		
	}else if(document.getElementById(prevobj) != null ){ // Might be Link
	
		setTimeout('document.getElementById(\'' + prevobj + '\').focus()',0);
	}


}

function handleRightArrowIE(event,prevobj,nextobj){
	
	var obj = event.srcElement;
	
	if( (obj.type == "text"  ) && !event.ctrlKey &&  getCaretPos(obj) < obj.value.length){
		return true;
	}
	if( obj.type == "radio" ){
		if( obj != document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 )){
			return true;
		}
		
	}

	if( obj.type == "textarea" && !event.ctrlKey){

		var pos = getCaretPos(obj);

		if( pos != -1 && pos < obj.value.length){
			return true;
		}
	}
	
	
	if( document.forms[0].elements[nextobj] != null){
		
		
		if(document.forms[0].elements[nextobj].type == "hidden" && document.forms[0].elements[nextobj + "_text"]){

			nextobj = nextobj + "_text";
		}else 	if(document.forms[0].elements[nextobj].type == "hidden" ){
			//Ajax auto complete
			
			var ctrl = comboMap.Get(nextobj + "_combo");
			if(ctrl){
				ctrl.DOMelem_input.focus();
				return false;
			}
			
			
			
			
			
		}
		
		if(document.forms[0].elements[nextobj].disabled){
			return true;
		}
		if(document.forms[0].elements[nextobj].style && document.forms[0].elements[nextobj].style.visibility == "hidden"){
			return;
		}
		
		if(document.forms[0].elements[nextobj].item && document.forms[0].elements[nextobj].type !="select-one" && document.forms[0].elements[nextobj].type !="select-multiple" ){
			
			if( document.forms[0].elements[nextobj].length == 2 && 
				document.forms[0].elements[nextobj].item(0).type == "hidden" &&
				document.forms[0].elements[nextobj].item(1).type == "select-one"){
				
				//Ajax autocomplete
				nextobj = nextobj + "_input2";
				
				if( document.getElementById(nextobj ) ){
					
					setTimeout('document.getElementById(\'' + nextobj + '\').focus()',0);
				}
				
			}else{
			
			// This might be radio button
			
			
			document.forms[0].elements[nextobj].item(0).focus();
			
			}

		}else{
			
			setTimeout('document.forms[0].elements[\'' + nextobj + '\'].focus()',0);
		}
		
		return false;
		
	}else if(document.getElementById(nextobj) != null ){ // Might be Link
	
		setTimeout('document.getElementById(\'' + nextobj + '\').focus()',0);
		return false;
	}
	
			

}

function handleDownArrowIE(event,prevobj,nextobj){
	var obj = event.srcElement;
	if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){
		return true;

	}
	if(obj.name.endsWith("_input") && obj.type == "text" && 
		document.forms[0].elements[obj.name.substring(0,obj.name.indexOf("_input"))] ){

		if( event.ctrlKey ){
			var combo = comboMap.Get(obj.name.substring(0,obj.name.indexOf("_input")) + "_combo");
			combo._confirmSelection();
			combo.closeAll();
			event.cancelBubble=true;
		}else{
			return true;
		}

	}

	var distance = 1000;
	var toElement;
	var found = false;
	var jumpingFromdataTable = false;
 	var currentLeft = screen.width;
 	var insideDatatable = true;
 	var top = -1;
	if(obj.name.indexOf("TRRow") > 0 && obj.name.indexOf("TDRow") > 0){
		jumpingFromdataTable = true;   	 		
	}
	var elements = document.forms[0].elements; 
	var noIterations = 0;
	var d = new Date();
	
	var elmlength = elements.length;
	if( obj.type == "radio" ){
		if( obj != document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 )){
			
			//return true;
		}
		
	}
	
	for( var i = 0; i< elmlength; i++){
		var elm = elements[i];
		
		if( elm != obj && !found ){
			continue;
		}else if( elm == obj ){

			found = true;
			continue;
		}
		
		if( elm.readOnly || elm.disabled){continue;}
		if(elm.style.visibility == "hidden") continue;

		var onFocus = elm.onfocus;
		
		
		
		
		if(onFocus != null && (onFocus.toString().indexOf("blur()") > -1 || onFocus.toString().indexOf("looseFocus(") > -1) ) continue;
		if( elm.type == "text" || elm.type == "textarea"
			|| elm.type == "select-one" || elm.type == "select-multiple"
			|| elm.type == "checkbox" || elm.type == "button" || elm.type == "submit"  || elm.type == "radio"){

			if( elm.getBoundingClientRect().top > obj.getBoundingClientRect().top + 10){
				if( (elm.name.indexOf("TRRow") > 0 || elm.name.indexOf("TDRow") > 0) && insideDatatable){
					// Element is inside datatable. This case find the left most element
					toElement = elm;
					break;
 	     	 		}else{
					var objleft = obj.getBoundingClientRect().left ;
					var elmleft = elm.getBoundingClientRect().left ;
					var tmpXdiff = Math.abs(objleft - elmleft);
					var tmpYdiff = elm.getBoundingClientRect().top - obj.getBoundingClientRect().top ;
					var tmpDistance = Math.sqrt(tmpXdiff * tmpXdiff + tmpYdiff * tmpYdiff);     	 		
					if( top == -1 ){
						top = tmpYdiff;
					}
					
					if(jumpingFromdataTable){
						
						if(tmpYdiff < 100 && currentLeft > elm.getBoundingClientRect().left){
							
							currentLeft = elm.getBoundingClientRect().left;
							toElement = elm;
							
						}
					}else if(distance >  tmpDistance && 
						tmpYdiff > 0  && elm.name.indexOf("TRRow") == -1 && elm.name.indexOf("TDRow") == -1 ){
						insideDatatable = false;

						distance = tmpDistance;
						toElement = elm;
						
						noIterations = 0;
						

					}
					
					
					noIterations++;
					if(noIterations > 10 && toElement != null){
						// If we are not finding any nearer components in 10 iterations 
						
						break;
					}

 	     	 		
 	     	 		}
			
			}



		}
	}
	
	if( toElement != null){
		
		
			setTimeout(function() { toElement.focus(); }, 0);
		
		
		
		
		
		
		return false;


	}
	return true;

}




function handleUpArrowIE(event,prevobj,nextobj){
	var obj = event.srcElement;
	if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){
		return true;

	}
	var distance = 1000;
	var ydiff= 1000;
	var toElement;
	var found = false;
	var jumpingFromdataTable = false;
 	var currentLeft = screen.width;
 	var insideDatatable = true;
 	var top = -1;
	if(obj.name.indexOf("TRRow") > 0 && obj.name.indexOf("TDRow") > 0){
		jumpingFromdataTable = true;   	 		
	}
	var elements = document.forms[0].elements; 
	var noIterations = 0;
	
	
	var elmlength = elements.length;
	
	
	for( var i = elmlength -1; i >=0 ; i--){
		var elm = elements[i];
		
		if( elm != obj && !found ){
			continue;
		}else if( elm == obj ){

			found = true;
			continue;
		}
		
		if( elm.readOnly || elm.disabled){continue;}
		if(elm.style.visibility == "hidden") continue;
		var onFocus = elm.onfocus;
		//alert(elm.name);
		if(onFocus != null && (onFocus.toString().indexOf("blur()") > -1 || onFocus.toString().indexOf("looseFocus(") > -1) ) continue;
		if( elm.type == "text" || elm.type == "textarea"
			|| elm.type == "select-one" || elm.type == "select-multiple"
			|| elm.type == "checkbox" || elm.type == "button" || elm.type == "submit" || elm.type == "radio"){

			if( elm.getBoundingClientRect().top < obj.getBoundingClientRect().top - 10){

				var objleft = obj.getBoundingClientRect().left ;
				var elmleft = elm.getBoundingClientRect().left ;
				var tmpXdiff = Math.abs(objleft - elmleft);
				
				var tmpYdiff = obj.getBoundingClientRect().top - elm.getBoundingClientRect().top ;
				if( elm.name.indexOf("TRRow") > 0 || elm.name.indexOf("TDRow") > 0 ){
					// Element is inside datatable. This case find the left most element
					
					
					if( currentLeft > elm.getBoundingClientRect().left){
							
						currentLeft = elm.getBoundingClientRect().left;
						toElement = elm;
						
							
					}else if( toElement!= null) {
						
						break;
						
					}
					
					
 	     	 		}else{
					
					var tmpDistance = Math.sqrt(tmpXdiff * tmpXdiff + tmpYdiff * tmpYdiff);     	 		
					if( top == -1 ){
						top = tmpYdiff;
					}
					
					if(jumpingFromdataTable){
						
						if(tmpYdiff <= ydiff && currentLeft > elm.getBoundingClientRect().left){
							
							currentLeft = elm.getBoundingClientRect().left;
							toElement = elm;
							 ydiff = tmpYdiff ;
							
							
							
						}
					}else if(distance >  tmpDistance && 
						tmpYdiff > 0  && elm.name.indexOf("TRRow") == -1 && elm.name.indexOf("TDRow") == -1 ){
						
						distance = tmpDistance;
						toElement = elm;
						
						noIterations = 0;
						

					}
					
					
					noIterations++;
					if(noIterations > 10 && toElement != null){
						// If we are not finding any nearer components in 10 iterations 
						
						break;
					}
 	     	 		}

			}
			
			


		}
	}
	
	if( toElement != null){
		
		

		setTimeout(function() { toElement.focus(); }, 0);
		return false;

	}
	return true;

	

}

function handleKeyEventsIE(event,prevobj,nextobj){
	

	 var code = event.keyCode;
	 var obj = event.srcElement;
	
	 try{
		if( code == 37 && prevobj!= null && !event.shiftKey){
			return handleLeftArrowIE(event,prevobj,nextobj);
			
		}else if (code == 39 &&  nextobj!= null && !event.shiftKey){
			return handleRightArrowIE(event,prevobj,nextobj);
		}else if( code == 40 ){
			return handleDownArrowIE(event,prevobj,nextobj);
		}else if( code == 38){
			return handleUpArrowIE(event,prevobj,nextobj);
		}

	 } catch(e){
		
	 }
	 return true;
 }


  
  
  
  function isFocasable(elm){

	if( elm.readOnly || elm.disabled){return false;}
	var onFocus = elm.getAttribute("onFocus");
	if(onFocus != null && (onFocus.indexOf("blur") > -1 || onFocus.indexOf("looseFocus(") > -1) ) return false;
	if(elm.style.visibility == "hidden") return false;
	if(elm.type == "hidden") return false;
	return true;
  
  
  }
  
  function getCaretPos(ctrl){
  
 	if( ctrl.type == "text"){
		var range = document.selection.createRange();
		var isCollapsed = range.compareEndPoints("StartToEnd", range) == 0;
		if (!isCollapsed)
			range.collapse(true);
		var b = range.getBookmark();
		return b.charCodeAt(2) - 2;
	}else if( ctrl.type == "textarea"){
	
		 if(ctrl.selectionStart) return node.selectionStart;
		 else if(!document.selection) return 0;
		 var c		= "\001";
		 var sel	= document.selection.createRange();
		 var dul	= sel.duplicate();
		 var len	= 0;
		 dul.moveToElementText(ctrl);
		 sel.text	= c;
		 len		= (ctrl.value.indexOf(c));
		 sel.moveStart('character',-1);
		 sel.text	= "";
		 return len
	}




  }
 
  function handleKeyEventsDatatable(event,controlArray,row,column) { 
  
  	   var browserName=navigator.appName;
	   if (browserName=="Netscape") {
	     	 
 		return handleKeyEventsDatatableNe(event,controlArray,row,column);
	
	   }else  if (browserName=="Microsoft Internet Explorer")  {
	   	var ret = handleKeyEventsDatatableIE(event,controlArray,row,column);
	   	
		 return ret;
	
   	   }	
  
  }
  
String.prototype.endsWith = function(str)
{return (this.match(str+"$")==str)}

 
  function handleKeyEventsDatatableNe(event,controlArray,argRow,argCol) {  
    
        var row = 0;
        var column = 0;
       
    	//var MAX_ROW = 50;
    	var code = event.which;
    
            if ( code >= 37 && code <= 40  ) {
                
                	
                	var obj = event.target;
                	if( obj == null || obj.name == null){
                		return;
                	}
                           	
                       if(obj.name.endsWith("_input")){
                              //Currently control is in an ajax autocomplete
                              //Mandate pressing ctrl key to move away from ajax autocomplete.
                              if(!event.ctrlKey){
                                   return;
                              }
                       }
                       
                	var control;
                	var lastIndex = controlArray[controlArray.length - 1].column; 
                	for(  var i = 0; i<=lastIndex; i++){
                		var o = controlArray[i];
       
                		
                		if(o != null && obj.name.indexOf(o.fullName)>=0){
                			
                			control = o;
                			break;
                		}
                	}
                	
                	
                	if( control == null ){
                		if( argCol != null){
                			control = controlArray[argCol]
                		}
                		if(control == null){
                			return true; 
                		}
                	}
    				

    				if( argRow != null) {
    					row = argRow;
    				}else if(obj.name.endsWith("_input")){
    					var nm = obj.name.substring(0,obj.name.lastIndexOf("_input") );
    					
                			row = nm.substring(nm.lastIndexOf("_") + 1 );
                		}else{
                			row = obj.name.substring(obj.name.lastIndexOf("_") + 1 );
                		}
                		
                		       		
                		
                		
                		column = control.column;
                		
                		var nextObj;
                		
                		if( code == 37 ){// LEFT ARROW
    				if( controlArray[column].prevCol != -1 ){
  					if( obj.type == "text"){
  						if( obj.selectionStart != 0 && !event.ctrlKey){
  							return;
  						}
  						if( event.shiftKey){
							return;
						}
  					}
    					column = control.prevCol;
    					
    				}
                		
                		}else if( code == 38){// UP ARROW
					if( obj.type == "radio" && argRow >0){
						return true;
                			}
                			//if( row != 0 ){
                				row--
                				
                				
                			//}
                		
                		
                		}else if( code == 39 ){// RIGHT ARROW
                			if(  controlArray[column].nextCol != -1 ){
                				column = controlArray[column].nextCol;
  					if( obj.type == "text" && obj.value != null){
  						if( obj.selectionStart < obj.value.length &&  !event.ctrlKey){
  							return;
  						}
  						if( event.shiftKey){
							return;
						}
  					}
    					
                				
                			}
                		
                		}else if( code == 40 ){// DOWN ARROW
                		
                			//if(row < MAX_ROW -1 ){
                			if( obj.type == "radio" && document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 ) != obj){
                				return true;
                			}
                				row++;
                				
                   				
                			//}
                		
                		}
                		
                		nextObj = document.forms[0].elements[controlArray[column].fullName + "_" + row];
                		
                		if( nextObj == null ){
                	
                			nextObj = document.anchors[controlArray[column].fullName + "_" + row];
                		
                		
                		}
                		
                		if(nextObj != null && nextObj.item && 
                			nextObj.type !="select-one" && nextObj.type != "select-multiple"
                			&& nextObj.length == 2 && nextObj.item(0).type=="hidden" 
                			&& nextObj.item(1).type=="select-one"){
                			
                			//Ajax autoComplete
                			
                			//alert(nextObj);
                			nextObj = document.getElementById(controlArray[column].fullName + "_" + row + "_input2");
                		
                		
                		}else if( nextObj != null && nextObj.type == "hidden"){
                			//Ajax autoComplete
                			//alert(nextObj.name);
                			var ctrl = comboMap.Get(controlArray[column].fullName + "_" + row + "_combo");
                			if(ctrl){
                				nextObj = ctrl.DOMelem_input;
                			}
                		
                		}
                		
                	
                		
                		
                		if( nextObj == null  && row != -1){
					nextObj =  document.forms[0].elements[controlArray[column].fullName];
					
					
					if(nextObj != null && nextObj.item){
						if(  document.forms[0].elements[obj.name].item && document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 ) == obj && code == 40){
							nextObj = null;
						}else{
						
							nextObj = nextObj.item(row);
						}
						
						
						
						
						
					
					}
				                		
                		}
                	
                	//alert(controlArray[column].fullName.substring(0,controlArray[column].fullName.lastIndexOf("_")));
                	
                	if( nextObj != null){
    				event.preventDefault();
    				try{
    					//setTimeout(nextObj.focus(),0);
					if( obj.type == "select-one" || obj.type == "select-multiple"){
						if(code == 37 || code == 39 || event.ctrlKey){
							var selIndex  = obj.selectedIndex;
							var onChange = obj.onchange;
							obj.onchange=null;
							setTimeout(function(){nextObj.focus();obj.selectedIndex=selIndex;obj.onchange=onChange;},0);
							return false;
						}
						return true;
					
					}else{
    						setTimeout(function() { nextObj.focus();}, 0);	
    					}
    					return false;
    	
    				}catch(e){
    				
    				}
    			}else if(code == 37 || code == 39){
				
				nextObj = findNextComponent(obj,controlArray,row,column,code);    
				if(nextObj){					
					setTimeout(function() { nextObj.focus();}, 0);	
					return false;
				}
    			
    			}else if(code == 40 || code == 38){
    				
				nextObj = findNextComponent(obj,controlArray,row,column,code); 
				if(nextObj){					
					setTimeout(function() { nextObj.focus();}, 0);	
					return false;
				}
				
    				return handleKeyEvents(event);
    				
    			}
                		
                		
                	
                	
                
    	  	
    	        
    
    	 }
    	 
    	 return true;
    	
  }
  

 
function findNextComponent(obj,controlArray,row,column,code){
	
	var control = controlArray[column];	
	
	var containerName = control.fullName.substring(0,control.fullName.lastIndexOf("_"));
	var elements = document.forms[0].elements; 
	var elmlength = elements.length;
	var nextObj;
	if( code == 38 || code == 40){
		for(var i = 0; i< controlArray.length; i++){
			if(controlArray[i].fullName.indexOf(containerName) >= 0 && controlArray[i].fullName.indexOf(control.fullName)){
				nextObj = document.forms[0].elements[controlArray[i].fullName + "_" + row];				
				if(nextObj != null && nextObj.type=="hidden" ) {
					var ctrl = comboMap.Get(nextObj.name + "_combo");
					if(ctrl){
						nextObj = ctrl.DOMelem_input;
						if(obj != nextObj){
							return nextObj;
						}
					}					
				}				
				if(nextObj != null && nextObj.item && 
						nextObj.type !="select-one" && nextObj.type != "select-multiple"
						&& nextObj.length == 2 && nextObj.item(0).type=="hidden" 
						&& nextObj.item(1).type=="select-one"){                			                			
						nextObj = document.getElementById(controlArray[i].fullName + "_" + row + "_input2");
						return nextObj;
				} 
				nextObj = document.forms[0].elements[controlArray[i].fullName + "_" + row];				
				return nextObj;
				
			}
		}
		return null;
	}
	for( var i = 0 ; i<elmlength; i++){
		var elm = elements[i];
		if(elm != obj && elm.name.indexOf(containerName) >= 0 && elm.name.endsWith("_"+row)  ){
			if( elm.readOnly || elm.disabled){continue;}
			if(elm.style && elm.style.visibility == "hidden") continue;
			var onFocus = elm.onfocus;
			if(onFocus != null && (onFocus.toString().indexOf("blur()") > -1 || onFocus.toString().indexOf("looseFocus(") > -1) ) continue;
			if(elm.type=="hidden") {
				var ctrl = comboMap.Get(elm.name + "_combo");
				if(ctrl){
					nextObj = ctrl.DOMelem_input;
					if(obj != nextObj){
						return nextObj;
					}
					nextObj = null;
				}
                		
				continue;
			}
			nextObj = document.forms[0].elements[elm.name];	
			
			if(nextObj != null && nextObj.item && 
                			nextObj.type !="select-one" && nextObj.type != "select-multiple"
                			&& nextObj.length == 2 && nextObj.item(0).type=="hidden" 
                			&& nextObj.item(1).type=="select-one"){                			                			
                			nextObj = document.getElementById(elm.name + "_input2");                 			
                			return nextObj;
                	}  
                	nextObj = elm;	
                	
                	return nextObj;
			
		}
		
	}
	
	if(!nextObj){
		
		if( code == 37  && column > 0){
			return findNextComponent(obj,controlArray,row,column -1,code);   
		}else if( code == 39 && column < controlArray.length){
			return findNextComponent(obj,controlArray,row,column+1,code);   
		}
	
	}


}
function handleKeyEventsDatatableIE(event,controlArray,argRow,argCol) {  
    	
        var row = 0;
        var column = 0;
       
    	var MAX_ROW = 50;
    	var code = event.keyCode;
            if ( code >= 37 && code <= 40  ) {
                
                	
                	var obj = event.srcElement;
                	if( obj == null || obj.name == null){
                		return;
                	}
               
  
                       if(obj.name.endsWith("_input")){
                              //Currently control is in an ajax autocomplete
                              //Mandate pressing ctrl key to move away from ajax autocomplete.
                              if(!event.ctrlKey){
                                   return;
                              }
                       }
                        
                	var control;
                	var lastIndex = controlArray[controlArray.length - 1].column; 
                	for(  var i = 0; i<=lastIndex; i++){
                		var o = controlArray[i];
       
                		
                		if(o != null && obj.name.indexOf(o.fullName)>=0){
                			
                			control = o;
                			break;
                		}
                	}
                	
                	if( control == null ){
                		if( argCol != null){
                			control = controlArray[argCol]
                		}
                		if(control == null){
                			return true; 
                		}
                	}
                	
                	
    
    				if( argRow != null) {
    					row = argRow;
    				}else if(obj.name.endsWith("_input")){
    					var nm = obj.name.substring(0,obj.name.lastIndexOf("_input") );
    					
                			row = nm.substring(nm.lastIndexOf("_") + 1 );
                		}else{
                			row = obj.name.substring(obj.name.lastIndexOf("_") + 1 );
                		}
                		       		
                		
                		
                		column = control.column;
                		
                		var nextObj;
                		
                		if( code == 37 ){// LEFT ARROW
    				if( controlArray[column].prevCol != -1 ){
  					if( obj.type == "text"){
  						if( getCaretPos(obj) != 0 && !event.ctrlKey){
  							return;
  						}
  						if( event.shiftKey){
							return;
						}
  					}
    					column = control.prevCol;
    					
    				}
                		
                		}else if( code == 38){// UP ARROW
                			
                			
                			if( obj.type == "radio" && argRow >0){
						return true;
                			}
					if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){
						return true;
					}
                			row--
                				
                			
                		
                		
                		}else if( code == 39 ){// RIGHT ARROW
                			if(  controlArray[column].nextCol != -1 ){
                				column = controlArray[column].nextCol;
  					if( obj.type == "text" && obj.value != null){
  						if( getCaretPos(obj) < obj.value.length && !event.ctrlKey){
  							return;
  						}
  						if( event.shiftKey){
							return;
						}
  					}
    					
                				
                			}
                		
                		}else if( code == 40 ){// DOWN ARROW
                			
                			
                			if( obj.type == "radio" && document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 ) != obj){
                				return true;
                			}
                			row++;
 					if( (obj.type == "select-one" || obj.type == "select-multiple") && !event.ctrlKey){
						return true;
					}                  				
                			
                		
                		}
                			
                		nextObj = document.forms[0].elements[controlArray[column].fullName + "_" + row];
                		if( nextObj == null ){
                			nextObj = document.getElementById(controlArray[column].fullName + "_" + row);
                		}
                		
                		if( nextObj == null ){
                			nextObj = document.anchors[controlArray[column].fullName + "_" + row];
                		
                		}
                		if(nextObj != null && nextObj.item && 
                			nextObj.type !="select-one" && nextObj.type != "select-multiple"
                			&& nextObj.length == 2 && nextObj.item(0).type=="hidden" 
                			&& nextObj.item(1).type=="select-one"){
                			
                			//Ajax autoComplete
                			
                			//alert(nextObj);
                			nextObj = document.getElementById(controlArray[column].fullName + "_" + row + "_input2");
                		
                		
                		}else if( nextObj != null && nextObj.type == "hidden"){
                			//Ajax autoComplete
                			var ctrl = comboMap.Get(controlArray[column].fullName + "_" + row + "_combo");
                			if(ctrl){
                				nextObj = ctrl.DOMelem_input;
                			}
                		
                		}
                		
                		
                		if( nextObj == null  && row != -1){
					nextObj =  document.forms[0].elements[controlArray[column].fullName];
					
					
					if(nextObj != null && nextObj.item){
						
						if( document.forms[0].elements[obj.name].item && document.forms[0].elements[obj.name].item(document.forms[0].elements[obj.name].length -1 ) == obj && code == 40){
							nextObj = null;
						}else{
						
							nextObj = nextObj.item(parseInt(row));
						}
						
						
						
						
						
					
					}
				                		
                		}
                		
                	
                	
    			if( nextObj != null){
    				
    				try{	
    					setTimeout(nextObj.focus(),0);	
    					return false;
    					   	
    				}catch(e){
    					try{nextObj.focus();return false;}catch(e){}
    					
    				}
    				return false;
    			}else if(code == 37 || code == 39){
				
				nextObj = findNextComponent(obj,controlArray,row,column,code);    
				if(nextObj){					
					setTimeout(function() { nextObj.focus();}, 0);	
					return false;
				}
    			
    			}else if(code == 40 || code == 38){
    			
				nextObj = findNextComponent(obj,controlArray,row,column,code); 
			
				//alert(nextObj);
				if(nextObj){					
					setTimeout(function() { nextObj.focus();}, 0);	
					return false;
				}
    				return handleKeyEvents(event);
    				
    			}
                		
                		
                	
                	
                
    	  	
    	        
    
    	 }
    	  return true;
    	
  }

    			
    		/*!
 * jQuery JavaScript Library v1.3.2
 * http://jquery.com/
 *
 * Copyright (c) 2009 John Resig
 * Dual licensed under the MIT and GPL licenses.
 * http://docs.jquery.com/License
 *
 * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)
 * Revision: 6246
 */
(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=/^[^<]*(<(.|\s)+>)[^>]*$|^#([\w-]+)$/,f=/^.[^:#\[\.,]*$/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(/ jQuery\d+="(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(/\r/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&/radio|checkbox/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(/ jQuery\d+="(?:\d+|null)"/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=/z-?index|font-?weight|opacity|zoom|line-?height/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&/\S/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(/\s+/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(/\s+/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(/\s+/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(/float/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(/float/i)){F="float"}F=F.replace(/([A-Z])/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(/\-(\w)/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!/^\d+(px)?$/i.test(L)&&/^\d/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=/^<(\w+)\s*\/?>$/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(/(<(\w+)[^>]*?)\/>/g,function(U,V,T){return T.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?U:V+"></"+T+">"});var O=S.replace(/^\s+/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","</select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","</fieldset>"]||O.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<table>","</table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||!O.indexOf("<col")&&[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"]||!o.support.htmlSerialize&&[1,"div<div>","</div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=/<tbody/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&/^\s/.test(S)){L.insertBefore(K.createTextNode(S.match(/^\s*/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=/href|src|style/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(/(button|input|object|select|textarea)/i)?0:J.nodeName.match(/^(a|area)$/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(/alpha\([^)]*\)/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(/opacity=([^)]*)/)[1])/100)+"":""}G=G.replace(/-([a-z])/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(/^\s+|\s+$/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(C),opera:/opera/.test(C),msie:/msie/.test(C)&&!/opera/.test(C),mozilla:/mozilla/.test(C)&&!/(compatible|webkit)/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){var I=(K>0?this.clone(true):this).get();o.fn[F].apply(o(L[K]),I);J=J.concat(I)}return this.pushStack(J,E,G)}});o.each({removeAttr:function(E){o.attr(this,E,"");if(this.nodeType==1){this.removeAttribute(E)}},addClass:function(E){o.className.add(this,E)},removeClass:function(E){o.className.remove(this,E)},toggleClass:function(F,E){if(typeof E!=="boolean"){E=!o.className.has(this,F)}o.className[E?"add":"remove"](this,F)},remove:function(E){if(!E||o.filter(E,[this]).length){o("*",this).add([this]).each(function(){o.event.remove(this);o.removeData(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},detach:function(E){return this.remove(E,true)},empty:function(){o(this).children().remove();while(this.firstChild){this.removeChild(this.firstChild)}}},function(E,F){o.fn[E]=function(){return this.each(F,arguments)}});function j(E,F){return E[0]&&parseInt(o.curCSS(E[0],F,true),10)||0}var h="jQuery"+e(),v=0,A={};o.extend({cache:{},data:function(F,E,G){F=F==l?A:F;var H=F[h];if(!H){H=F[h]=++v}if(E&&!o.cache[H]){o.cache[H]={}}if(G!==g){o.cache[H][E]=G}return E?o.cache[H][E]:H},removeData:function(F,E){F=F==l?A:F;var H=F[h];if(E){if(o.cache[H]){delete o.cache[H][E];E="";for(E in o.cache[H]){break}if(!E){o.removeData(F)}}}else{try{delete F[h]}catch(G){if(F.removeAttribute){F.removeAttribute(h)}}delete o.cache[H]}},queue:function(F,E,H){if(F){E=(E||"fx")+"queue";var G=o.data(F,E);if(!G||o.isArray(H)){G=o.data(F,E,o.makeArray(H))}else{if(H){G.push(H)}}}return G},dequeue:function(H,G){var E=o.queue(H,G),F=E.shift();if(!G||G==="fx"){F=E[0]}if(F!==g){F.call(H)}}});o.fn.extend({data:function(E,G){var H=E.split(".");H[1]=H[1]?"."+H[1]:"";if(G===g){var F=this.triggerHandler("getData"+H[1]+"!",[H[0]]);if(F===g&&this.length){F=o.data(this[0],E)}return F===g&&H[1]?this.data(H[0]):F}else{return this.trigger("setData"+H[1]+"!",[H[0],G]).each(function(){o.data(this,E,G)})}},removeData:function(E){return this.each(function(){o.removeData(this,E)})},queue:function(E,F){if(typeof E!=="string"){F=E;E="fx"}if(F===g){return o.queue(this[0],E)}return this.each(function(){var G=o.queue(this,E,F);if(E=="fx"&&G.length==1){G[0].call(this)}})},dequeue:function(E){return this.each(function(){o.dequeue(this,E)})},detach:function(E){return this.remove(E,true)}});
/*!
     * Sizzle CSS Selector Engine - v0.9.3
     *  Copyright 2009, The Dojo Foundation
     *  Released under the MIT, BSD, and GPL Licenses.
     *  More information: http://sizzlejs.com/
     */
(function(){var R=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,L=0,H=Object.prototype.toString;var F=function(Y,U,ab,ac){ab=ab||[];U=U||document;if(U.nodeType!==1&&U.nodeType!==9){return[]}if(!Y||typeof Y!=="string"){return ab}var Z=[],W,af,ai,T,ad,V,X=true;R.lastIndex=0;while((W=R.exec(Y))!==null){Z.push(W[1]);if(W[2]){V=RegExp.rightContext;break}}if(Z.length>1&&M.exec(Y)){if(Z.length===2&&I.relative[Z[0]]){af=J(Z[0]+Z[1],U)}else{af=I.relative[Z[0]]?[U]:F(Z.shift(),U);while(Z.length){Y=Z.shift();if(I.relative[Y]){Y+=Z.shift()}af=J(Y,af)}}}else{var ae=ac?{expr:Z.pop(),set:E(ac)}:F.find(Z.pop(),Z.length===1&&U.parentNode?U.parentNode:U,Q(U));af=F.filter(ae.expr,ae.set);if(Z.length>0){ai=E(af)}else{X=false}while(Z.length){var ah=Z.pop(),ag=ah;if(!I.relative[ah]){ah=""}else{ag=Z.pop()}if(ag==null){ag=U}I.relative[ah](ai,ag,Q(U))}}if(!ai){ai=af}if(!ai){throw"Syntax error, unrecognized expression: "+(ah||Y)}if(H.call(ai)==="[object Array]"){if(!X){ab.push.apply(ab,ai)}else{if(U.nodeType===1){for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&(ai[aa]===true||ai[aa].nodeType===1&&K(U,ai[aa]))){ab.push(af[aa])}}}else{for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&ai[aa].nodeType===1){ab.push(af[aa])}}}}}else{E(ai,ab)}if(V){F(V,U,ab,ac);if(G){hasDuplicate=false;ab.sort(G);if(hasDuplicate){for(var aa=1;aa<ab.length;aa++){if(ab[aa]===ab[aa-1]){ab.splice(aa--,1)}}}}}return ab};F.matches=function(T,U){return F(T,null,null,U)};F.find=function(aa,T,ab){var Z,X;if(!aa){return[]}for(var W=0,V=I.order.length;W<V;W++){var Y=I.order[W],X;if((X=I.match[Y].exec(aa))){var U=RegExp.leftContext;if(U.substr(U.length-1)!=="\\"){X[1]=(X[1]||"").replace(/\\/g,"");Z=I.find[Y](X,T,ab);if(Z!=null){aa=aa.replace(I.match[Y],"");break}}}}if(!Z){Z=T.getElementsByTagName("*")}return{set:Z,expr:aa}};F.filter=function(ad,ac,ag,W){var V=ad,ai=[],aa=ac,Y,T,Z=ac&&ac[0]&&Q(ac[0]);while(ad&&ac.length){for(var ab in I.filter){if((Y=I.match[ab].exec(ad))!=null){var U=I.filter[ab],ah,af;T=false;if(aa==ai){ai=[]}if(I.preFilter[ab]){Y=I.preFilter[ab](Y,aa,ag,ai,W,Z);if(!Y){T=ah=true}else{if(Y===true){continue}}}if(Y){for(var X=0;(af=aa[X])!=null;X++){if(af){ah=U(af,Y,X,aa);var ae=W^!!ah;if(ag&&ah!=null){if(ae){T=true}else{aa[X]=false}}else{if(ae){ai.push(af);T=true}}}}}if(ah!==g){if(!ag){aa=ai}ad=ad.replace(I.match[ab],"");if(!T){return[]}break}}}if(ad==V){if(T==null){throw"Syntax error, unrecognized expression: "+ad}else{break}}V=ad}return aa};var I=F.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(T){return T.getAttribute("href")}},relative:{"+":function(aa,T,Z){var X=typeof T==="string",ab=X&&!/\W/.test(T),Y=X&&!ab;if(ab&&!Z){T=T.toUpperCase()}for(var W=0,V=aa.length,U;W<V;W++){if((U=aa[W])){while((U=U.previousSibling)&&U.nodeType!==1){}aa[W]=Y||U&&U.nodeName===T?U||false:U===T}}if(Y){F.filter(T,aa,true)}},">":function(Z,U,aa){var X=typeof U==="string";if(X&&!/\W/.test(U)){U=aa?U:U.toUpperCase();for(var V=0,T=Z.length;V<T;V++){var Y=Z[V];if(Y){var W=Y.parentNode;Z[V]=W.nodeName===U?W:false}}}else{for(var V=0,T=Z.length;V<T;V++){var Y=Z[V];if(Y){Z[V]=X?Y.parentNode:Y.parentNode===U}}if(X){F.filter(U,Z,true)}}},"":function(W,U,Y){var V=L++,T=S;if(!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("parentNode",U,V,W,X,Y)},"~":function(W,U,Y){var V=L++,T=S;if(typeof U==="string"&&!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("previousSibling",U,V,W,X,Y)}},find:{ID:function(U,V,W){if(typeof V.getElementById!=="undefined"&&!W){var T=V.getElementById(U[1]);return T?[T]:[]}},NAME:function(V,Y,Z){if(typeof Y.getElementsByName!=="undefined"){var U=[],X=Y.getElementsByName(V[1]);for(var W=0,T=X.length;W<T;W++){if(X[W].getAttribute("name")===V[1]){U.push(X[W])}}return U.length===0?null:U}},TAG:function(T,U){return U.getElementsByTagName(T[1])}},preFilter:{CLASS:function(W,U,V,T,Z,aa){W=" "+W[1].replace(/\\/g,"")+" ";if(aa){return W}for(var X=0,Y;(Y=U[X])!=null;X++){if(Y){if(Z^(Y.className&&(" "+Y.className+" ").indexOf(W)>=0)){if(!V){T.push(Y)}}else{if(V){U[X]=false}}}}return false},ID:function(T){return T[1].replace(/\\/g,"")},TAG:function(U,T){for(var V=0;T[V]===false;V++){}return T[V]&&Q(T[V])?U[1]:U[1].toUpperCase()},CHILD:function(T){if(T[1]=="nth"){var U=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(T[2]=="even"&&"2n"||T[2]=="odd"&&"2n+1"||!/\D/.test(T[2])&&"0n+"+T[2]||T[2]);T[2]=(U[1]+(U[2]||1))-0;T[3]=U[3]-0}T[0]=L++;return T},ATTR:function(X,U,V,T,Y,Z){var W=X[1].replace(/\\/g,"");if(!Z&&I.attrMap[W]){X[1]=I.attrMap[W]}if(X[2]==="~="){X[4]=" "+X[4]+" "}return X},PSEUDO:function(X,U,V,T,Y){if(X[1]==="not"){if(X[3].match(R).length>1||/^\w/.test(X[3])){X[3]=F(X[3],null,null,U)}else{var W=F.filter(X[3],U,V,true^Y);if(!V){T.push.apply(T,W)}return false}}else{if(I.match.POS.test(X[0])||I.match.CHILD.test(X[0])){return true}}return X},POS:function(T){T.unshift(true);return T}},filters:{enabled:function(T){return T.disabled===false&&T.type!=="hidden"},disabled:function(T){return T.disabled===true},checked:function(T){return T.checked===true},selected:function(T){T.parentNode.selectedIndex;return T.selected===true},parent:function(T){return !!T.firstChild},empty:function(T){return !T.firstChild},has:function(V,U,T){return !!F(T[3],V).length},header:function(T){return/h\d/i.test(T.nodeName)},text:function(T){return"text"===T.type},radio:function(T){return"radio"===T.type},checkbox:function(T){return"checkbox"===T.type},file:function(T){return"file"===T.type},password:function(T){return"password"===T.type},submit:function(T){return"submit"===T.type},image:function(T){return"image"===T.type},reset:function(T){return"reset"===T.type},button:function(T){return"button"===T.type||T.nodeName.toUpperCase()==="BUTTON"},input:function(T){return/input|select|textarea|button/i.test(T.nodeName)}},setFilters:{first:function(U,T){return T===0},last:function(V,U,T,W){return U===W.length-1},even:function(U,T){return T%2===0},odd:function(U,T){return T%2===1},lt:function(V,U,T){return U<T[3]-0},gt:function(V,U,T){return U>T[3]-0},nth:function(V,U,T){return T[3]-0==U},eq:function(V,U,T){return T[3]-0==U}},filter:{PSEUDO:function(Z,V,W,aa){var U=V[1],X=I.filters[U];if(X){return X(Z,W,V,aa)}else{if(U==="contains"){return(Z.textContent||Z.innerText||"").indexOf(V[3])>=0}else{if(U==="not"){var Y=V[3];for(var W=0,T=Y.length;W<T;W++){if(Y[W]===Z){return false}}return true}}}},CHILD:function(T,W){var Z=W[1],U=T;switch(Z){case"only":case"first":while(U=U.previousSibling){if(U.nodeType===1){return false}}if(Z=="first"){return true}U=T;case"last":while(U=U.nextSibling){if(U.nodeType===1){return false}}return true;case"nth":var V=W[2],ac=W[3];if(V==1&&ac==0){return true}var Y=W[0],ab=T.parentNode;if(ab&&(ab.sizcache!==Y||!T.nodeIndex)){var X=0;for(U=ab.firstChild;U;U=U.nextSibling){if(U.nodeType===1){U.nodeIndex=++X}}ab.sizcache=Y}var aa=T.nodeIndex-ac;if(V==0){return aa==0}else{return(aa%V==0&&aa/V>=0)}}},ID:function(U,T){return U.nodeType===1&&U.getAttribute("id")===T},TAG:function(U,T){return(T==="*"&&U.nodeType===1)||U.nodeName===T},CLASS:function(U,T){return(" "+(U.className||U.getAttribute("class"))+" ").indexOf(T)>-1},ATTR:function(Y,W){var V=W[1],T=I.attrHandle[V]?I.attrHandle[V](Y):Y[V]!=null?Y[V]:Y.getAttribute(V),Z=T+"",X=W[2],U=W[4];return T==null?X==="!=":X==="="?Z===U:X==="*="?Z.indexOf(U)>=0:X==="~="?(" "+Z+" ").indexOf(U)>=0:!U?Z&&T!==false:X==="!="?Z!=U:X==="^="?Z.indexOf(U)===0:X==="$="?Z.substr(Z.length-U.length)===U:X==="|="?Z===U||Z.substr(0,U.length+1)===U+"-":false},POS:function(X,U,V,Y){var T=U[2],W=I.setFilters[T];if(W){return W(X,V,U,Y)}}}};var M=I.match.POS;for(var O in I.match){I.match[O]=RegExp(I.match[O].source+/(?![^\[]*\])(?![^\(]*\))/.source)}var E=function(U,T){U=Array.prototype.slice.call(U);if(T){T.push.apply(T,U);return T}return U};try{Array.prototype.slice.call(document.documentElement.childNodes)}catch(N){E=function(X,W){var U=W||[];if(H.call(X)==="[object Array]"){Array.prototype.push.apply(U,X)}else{if(typeof X.length==="number"){for(var V=0,T=X.length;V<T;V++){U.push(X[V])}}else{for(var V=0;X[V];V++){U.push(X[V])}}}return U}}var G;if(document.documentElement.compareDocumentPosition){G=function(U,T){var V=U.compareDocumentPosition(T)&4?-1:U===T?0:1;if(V===0){hasDuplicate=true}return V}}else{if("sourceIndex" in document.documentElement){G=function(U,T){var V=U.sourceIndex-T.sourceIndex;if(V===0){hasDuplicate=true}return V}}else{if(document.createRange){G=function(W,U){var V=W.ownerDocument.createRange(),T=U.ownerDocument.createRange();V.selectNode(W);V.collapse(true);T.selectNode(U);T.collapse(true);var X=V.compareBoundaryPoints(Range.START_TO_END,T);if(X===0){hasDuplicate=true}return X}}}}(function(){var U=document.createElement("form"),V="script"+(new Date).getTime();U.innerHTML="<input name='"+V+"'/>";var T=document.documentElement;T.insertBefore(U,T.firstChild);if(!!document.getElementById(V)){I.find.ID=function(X,Y,Z){if(typeof Y.getElementById!=="undefined"&&!Z){var W=Y.getElementById(X[1]);return W?W.id===X[1]||typeof W.getAttributeNode!=="undefined"&&W.getAttributeNode("id").nodeValue===X[1]?[W]:g:[]}};I.filter.ID=function(Y,W){var X=typeof Y.getAttributeNode!=="undefined"&&Y.getAttributeNode("id");return Y.nodeType===1&&X&&X.nodeValue===W}}T.removeChild(U)})();(function(){var T=document.createElement("div");T.appendChild(document.createComment(""));if(T.getElementsByTagName("*").length>0){I.find.TAG=function(U,Y){var X=Y.getElementsByTagName(U[1]);if(U[1]==="*"){var W=[];for(var V=0;X[V];V++){if(X[V].nodeType===1){W.push(X[V])}}X=W}return X}}T.innerHTML="<a href='#'></a>";if(T.firstChild&&typeof T.firstChild.getAttribute!=="undefined"&&T.firstChild.getAttribute("href")!=="#"){I.attrHandle.href=function(U){return U.getAttribute("href",2)}}})();if(document.querySelectorAll){(function(){var T=F,U=document.createElement("div");U.innerHTML="<p class='TEST'></p>";if(U.querySelectorAll&&U.querySelectorAll(".TEST").length===0){return}F=function(Y,X,V,W){X=X||document;if(!W&&X.nodeType===9&&!Q(X)){try{return E(X.querySelectorAll(Y),V)}catch(Z){}}return T(Y,X,V,W)};F.find=T.find;F.filter=T.filter;F.selectors=T.selectors;F.matches=T.matches})()}if(document.getElementsByClassName&&document.documentElement.getElementsByClassName){(function(){var T=document.createElement("div");T.innerHTML="<div class='test e'></div><div class='test'></div>";if(T.getElementsByClassName("e").length===0){return}T.lastChild.className="e";if(T.getElementsByClassName("e").length===1){return}I.order.splice(1,0,"CLASS");I.find.CLASS=function(U,V,W){if(typeof V.getElementsByClassName!=="undefined"&&!W){return V.getElementsByClassName(U[1])}}})()}function P(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W<V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1&&!ac){T.sizcache=Y;T.sizset=W}if(T.nodeName===Z){X=T;break}T=T[U]}ad[W]=X}}}function S(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W<V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1){if(!ac){T.sizcache=Y;T.sizset=W}if(typeof Z!=="string"){if(T===Z){X=true;break}}else{if(F.filter(Z,[T]).length>0){X=T;break}}}T=T[U]}ad[W]=X}}}var K=document.compareDocumentPosition?function(U,T){return U.compareDocumentPosition(T)&16}:function(U,T){return U!==T&&(U.contains?U.contains(T):true)};var Q=function(T){return T.nodeType===9&&T.documentElement.nodeName!=="HTML"||!!T.ownerDocument&&Q(T.ownerDocument)};var J=function(T,aa){var W=[],X="",Y,V=aa.nodeType?[aa]:aa;while((Y=I.match.PSEUDO.exec(T))){X+=Y[0];T=T.replace(I.match.PSEUDO,"")}T=I.relative[T]?T+"*":T;for(var Z=0,U=V.length;Z<U;Z++){F(T,V[Z],W)}return F.filter(X,W)};o.find=F;o.filter=F.filter;o.expr=F.selectors;o.expr[":"]=o.expr.filters;F.selectors.filters.hidden=function(T){return T.offsetWidth===0||T.offsetHeight===0};F.selectors.filters.visible=function(T){return T.offsetWidth>0||T.offsetHeight>0};F.selectors.filters.animated=function(T){return o.grep(o.timers,function(U){return T===U.elem}).length};o.multiFilter=function(V,T,U){if(U){V=":not("+V+")"}return F.matches(V,T)};o.dir=function(V,U){var T=[],W=V[U];while(W&&W!=document){if(W.nodeType==1){T.push(W)}W=W[U]}return T};o.nth=function(X,T,V,W){T=T||1;var U=0;for(;X;X=X[V]){if(X.nodeType==1&&++U==T){break}}return X};o.sibling=function(V,U){var T=[];for(;V;V=V.nextSibling){if(V.nodeType==1&&V!=U){T.push(V)}}return T};return;l.Sizzle=F})();o.event={add:function(I,F,H,K){if(I.nodeType==3||I.nodeType==8){return}if(I.setInterval&&I!=l){I=l}if(!H.guid){H.guid=this.guid++}if(K!==g){var G=H;H=this.proxy(G);H.data=K}var E=o.data(I,"events")||o.data(I,"events",{}),J=o.data(I,"handle")||o.data(I,"handle",function(){return typeof o!=="undefined"&&!o.event.triggered?o.event.handle.apply(arguments.callee.elem,arguments):g});J.elem=I;o.each(F.split(/\s+/),function(M,N){var O=N.split(".");N=O.shift();H.type=O.slice().sort().join(".");var L=E[N];if(o.event.specialAll[N]){o.event.specialAll[N].setup.call(I,K,O)}if(!L){L=E[N]={};if(!o.event.special[N]||o.event.special[N].setup.call(I,K,O)===false){if(I.addEventListener){I.addEventListener(N,J,false)}else{if(I.attachEvent){I.attachEvent("on"+N,J)}}}}L[H.guid]=H;o.event.global[N]=true});I=null},guid:1,global:{},remove:function(K,H,J){if(K.nodeType==3||K.nodeType==8){return}var G=o.data(K,"events"),F,E;if(G){if(H===g||(typeof H==="string"&&H.charAt(0)==".")){for(var I in G){this.remove(K,I+(H||""))}}else{if(H.type){J=H.handler;H=H.type}o.each(H.split(/\s+/),function(M,O){var Q=O.split(".");O=Q.shift();var N=RegExp("(^|\\.)"+Q.slice().sort().join(".*\\.")+"(\\.|$)");if(G[O]){if(J){delete G[O][J.guid]}else{for(var P in G[O]){if(N.test(G[O][P].type)){delete G[O][P]}}}if(o.event.specialAll[O]){o.event.specialAll[O].teardown.call(K,Q)}for(F in G[O]){break}if(!F){if(!o.event.special[O]||o.event.special[O].teardown.call(K,Q)===false){if(K.removeEventListener){K.removeEventListener(O,o.data(K,"handle"),false)}else{if(K.detachEvent){K.detachEvent("on"+O,o.data(K,"handle"))}}}F=null;delete G[O]}}})}for(F in G){break}if(!F){var L=o.data(K,"handle");if(L){L.elem=null}o.removeData(K,"events");o.removeData(K,"handle")}}},trigger:function(I,K,H,E){var G=I.type||I;if(!E){I=typeof I==="object"?I[h]?I:o.extend(o.Event(G),I):o.Event(G);if(G.indexOf("!")>=0){I.type=G=G.slice(0,-1);I.exclusive=true}if(!H){I.stopPropagation();if(this.global[G]){o.each(o.cache,function(){if(this.events&&this.events[G]){o.event.trigger(I,K,this.handle.elem)}})}}if(!H||H.nodeType==3||H.nodeType==8){return g}I.result=g;I.target=H;K=o.makeArray(K);K.unshift(I)}I.currentTarget=H;var J=o.data(H,"handle");if(J){J.apply(H,K)}if((!H[G]||(o.nodeName(H,"a")&&G=="click"))&&H["on"+G]&&H["on"+G].apply(H,K)===false){I.result=false}if(!E&&H[G]&&!I.isDefaultPrevented()&&!(o.nodeName(H,"a")&&G=="click")){this.triggered=true;try{H[G]()}catch(L){}}this.triggered=false;if(!I.isPropagationStopped()){var F=H.parentNode||H.ownerDocument;if(F){o.event.trigger(I,K,F,true)}}},handle:function(K){var J,E;K=arguments[0]=o.event.fix(K||l.event);K.currentTarget=this;var L=K.type.split(".");K.type=L.shift();J=!L.length&&!K.exclusive;var I=RegExp("(^|\\.)"+L.slice().sort().join(".*\\.")+"(\\.|$)");E=(o.data(this,"events")||{})[K.type];for(var G in E){var H=E[G];if(J||I.test(H.type)){K.handler=H;K.data=H.data;var F=H.apply(this,arguments);if(F!==g){K.result=F;if(F===false){K.preventDefault();K.stopPropagation()}}if(K.isImmediatePropagationStopped()){break}}}},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(H){if(H[h]){return H}var F=H;H=o.Event(F);for(var G=this.props.length,J;G;){J=this.props[--G];H[J]=F[J]}if(!H.target){H.target=H.srcElement||document}if(H.target.nodeType==3){H.target=H.target.parentNode}if(!H.relatedTarget&&H.fromElement){H.relatedTarget=H.fromElement==H.target?H.toElement:H.fromElement}if(H.pageX==null&&H.clientX!=null){var I=document.documentElement,E=document.body;H.pageX=H.clientX+(I&&I.scrollLeft||E&&E.scrollLeft||0)-(I.clientLeft||0);H.pageY=H.clientY+(I&&I.scrollTop||E&&E.scrollTop||0)-(I.clientTop||0)}if(!H.which&&((H.charCode||H.charCode===0)?H.charCode:H.keyCode)){H.which=H.charCode||H.keyCode}if(!H.metaKey&&H.ctrlKey){H.metaKey=H.ctrlKey}if(!H.which&&H.button){H.which=(H.button&1?1:(H.button&2?3:(H.button&4?2:0)))}return H},proxy:function(F,E){E=E||function(){return F.apply(this,arguments)};E.guid=F.guid=F.guid||E.guid||this.guid++;return E},special:{ready:{setup:B,teardown:function(){}}},specialAll:{live:{setup:function(E,F){o.event.add(this,F[0],c)},teardown:function(G){if(G.length){var E=0,F=RegExp("(^|\\.)"+G[0]+"(\\.|$)");o.each((o.data(this,"events").live||{}),function(){if(F.test(this.type)){E++}});if(E<1){o.event.remove(this,G[0],c)}}}}}};o.Event=function(E){if(!this.preventDefault){return new o.Event(E)}if(E&&E.type){this.originalEvent=E;this.type=E.type}else{this.type=E}this.timeStamp=e();this[h]=true};function k(){return false}function u(){return true}o.Event.prototype={preventDefault:function(){this.isDefaultPrevented=u;var E=this.originalEvent;if(!E){return}if(E.preventDefault){E.preventDefault()}E.returnValue=false},stopPropagation:function(){this.isPropagationStopped=u;var E=this.originalEvent;if(!E){return}if(E.stopPropagation){E.stopPropagation()}E.cancelBubble=true},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=u;this.stopPropagation()},isDefaultPrevented:k,isPropagationStopped:k,isImmediatePropagationStopped:k};var a=function(F){var E=F.relatedTarget;while(E&&E!=this){try{E=E.parentNode}catch(G){E=this}}if(E!=this){F.type=F.data;o.event.handle.apply(this,arguments)}};o.each({mouseover:"mouseenter",mouseout:"mouseleave"},function(F,E){o.event.special[E]={setup:function(){o.event.add(this,F,a,E)},teardown:function(){o.event.remove(this,F,a)}}});o.fn.extend({bind:function(F,G,E){return F=="unload"?this.one(F,G,E):this.each(function(){o.event.add(this,F,E||G,E&&G)})},one:function(G,H,F){var E=o.event.proxy(F||H,function(I){o(this).unbind(I,E);return(F||H).apply(this,arguments)});return this.each(function(){o.event.add(this,G,E,F&&H)})},unbind:function(F,E){return this.each(function(){o.event.remove(this,F,E)})},trigger:function(E,F){return this.each(function(){o.event.trigger(E,F,this)})},triggerHandler:function(E,G){if(this[0]){var F=o.Event(E);F.preventDefault();F.stopPropagation();o.event.trigger(F,G,this[0]);return F.result}},toggle:function(G){var E=arguments,F=1;while(F<E.length){o.event.proxy(G,E[F++])}return this.click(o.event.proxy(G,function(H){this.lastToggle=(this.lastToggle||0)%F;H.preventDefault();return E[this.lastToggle++].apply(this,arguments)||false}))},hover:function(E,F){return this.mouseenter(E).mouseleave(F)},ready:function(E){B();if(o.isReady){E.call(document,o)}else{o.readyList.push(E)}return this},live:function(G,F){var E=o.event.proxy(F);E.guid+=this.selector+G;o(document).bind(i(G,this.selector),this.selector,E);return this},die:function(F,E){o(document).unbind(i(F,this.selector),E?{guid:E.guid+this.selector+F}:null);return this}});function c(H){var E=RegExp("(^|\\.)"+H.type+"(\\.|$)"),G=true,F=[];o.each(o.data(this,"events").live||[],function(I,J){if(E.test(J.type)){var K=o(H.target).closest(J.data)[0];if(K){F.push({elem:K,fn:J})}}});F.sort(function(J,I){return o.data(J.elem,"closest")-o.data(I.elem,"closest")});o.each(F,function(){if(this.fn.call(this.elem,H,this.fn.data)===false){return(G=false)}});return G}function i(F,E){return["live",F,E.replace(/\./g,"`").replace(/ /g,"|")].join(".")}o.extend({isReady:false,readyList:[],ready:function(){if(!o.isReady){o.isReady=true;if(o.readyList){o.each(o.readyList,function(){this.call(document,o)});o.readyList=null}o(document).triggerHandler("ready")}}});var x=false;function B(){if(x){return}x=true;if(document.addEventListener){document.addEventListener("DOMContentLoaded",function(){document.removeEventListener("DOMContentLoaded",arguments.callee,false);o.ready()},false)}else{if(document.attachEvent){document.attachEvent("onreadystatechange",function(){if(document.readyState==="complete"){document.detachEvent("onreadystatechange",arguments.callee);o.ready()}});if(document.documentElement.doScroll&&l==l.top){(function(){if(o.isReady){return}try{document.documentElement.doScroll("left")}catch(E){setTimeout(arguments.callee,0);return}o.ready()})()}}}o.event.add(l,"load",o.ready)}o.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error").split(","),function(F,E){o.fn[E]=function(G){return G?this.bind(E,G):this.trigger(E)}});o(l).bind("unload",function(){for(var E in o.cache){if(E!=1&&o.cache[E].handle){o.event.remove(o.cache[E].handle.elem)}}});(function(){o.support={};var F=document.documentElement,G=document.createElement("script"),K=document.createElement("div"),J="script"+(new Date).getTime();K.style.display="none";K.innerHTML='   <link/><table></table><a href="/a" style="color:red;float:left;opacity:.5;">a</a><select><option>text</option></select><object><param/></object>';var H=K.getElementsByTagName("*"),E=K.getElementsByTagName("a")[0];if(!H||!H.length||!E){return}o.support={leadingWhitespace:K.firstChild.nodeType==3,tbody:!K.getElementsByTagName("tbody").length,objectAll:!!K.getElementsByTagName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!K.getElementsByTagName("link").length,style:/red/.test(E.getAttribute("style")),hrefNormalized:E.getAttribute("href")==="/a",opacity:E.style.opacity==="0.5",cssFloat:!!E.style.cssFloat,scriptEval:false,noCloneEvent:true,boxModel:null};G.type="text/javascript";try{G.appendChild(document.createTextNode("window."+J+"=1;"))}catch(I){}F.insertBefore(G,F.firstChild);if(l[J]){o.support.scriptEval=true;delete l[J]}F.removeChild(G);if(K.attachEvent&&K.fireEvent){K.attachEvent("onclick",function(){o.support.noCloneEvent=false;K.detachEvent("onclick",arguments.callee)});K.cloneNode(true).fireEvent("onclick")}o(function(){var L=document.createElement("div");L.style.width=L.style.paddingLeft="1px";document.body.appendChild(L);o.boxModel=o.support.boxModel=L.offsetWidth===2;document.body.removeChild(L).style.display="none"})})();var w=o.support.cssFloat?"cssFloat":"styleFloat";o.props={"for":"htmlFor","class":"className","float":w,cssFloat:w,styleFloat:w,readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};o.fn.extend({_load:o.fn.load,load:function(G,J,K){if(typeof G!=="string"){return this._load(G)}var I=G.indexOf(" ");if(I>=0){var E=G.slice(I,G.length);G=G.slice(0,I)}var H="GET";if(J){if(o.isFunction(J)){K=J;J=null}else{if(typeof J==="object"){J=o.param(J);H="POST"}}}var F=this;o.ajax({url:G,type:H,dataType:"html",data:J,complete:function(M,L){if(L=="success"||L=="notmodified"){F.html(E?o("<div/>").append(M.responseText.replace(/<script(.|\s)*?\/script>/g,"")).find(E):M.responseText)}if(K){F.each(K,[M.responseText,L,M])}}});return this},serialize:function(){return o.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?o.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password|search/i.test(this.type))}).map(function(E,F){var G=o(this).val();return G==null?null:o.isArray(G)?o.map(G,function(I,H){return{name:F.name,value:I}}):{name:F.name,value:G}}).get()}});o.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(E,F){o.fn[F]=function(G){return this.bind(F,G)}});var r=e();o.extend({get:function(E,G,H,F){if(o.isFunction(G)){H=G;G=null}return o.ajax({type:"GET",url:E,data:G,success:H,dataType:F})},getScript:function(E,F){return o.get(E,null,F,"script")},getJSON:function(E,F,G){return o.get(E,F,G,"json")},post:function(E,G,H,F){if(o.isFunction(G)){H=G;G={}}return o.ajax({type:"POST",url:E,data:G,success:H,dataType:F})},ajaxSetup:function(E){o.extend(o.ajaxSettings,E)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:function(){return l.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest()},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(M){M=o.extend(true,M,o.extend(true,{},o.ajaxSettings,M));var W,F=/=\?(&|$)/g,R,V,G=M.type.toUpperCase();if(M.data&&M.processData&&typeof M.data!=="string"){M.data=o.param(M.data)}if(M.dataType=="jsonp"){if(G=="GET"){if(!M.url.match(F)){M.url+=(M.url.match(/\?/)?"&":"?")+(M.jsonp||"callback")+"=?"}}else{if(!M.data||!M.data.match(F)){M.data=(M.data?M.data+"&":"")+(M.jsonp||"callback")+"=?"}}M.dataType="json"}if(M.dataType=="json"&&(M.data&&M.data.match(F)||M.url.match(F))){W="jsonp"+r++;if(M.data){M.data=(M.data+"").replace(F,"="+W+"$1")}M.url=M.url.replace(F,"="+W+"$1");M.dataType="script";l[W]=function(X){V=X;I();L();l[W]=g;try{delete l[W]}catch(Y){}if(H){H.removeChild(T)}}}if(M.dataType=="script"&&M.cache==null){M.cache=false}if(M.cache===false&&G=="GET"){var E=e();var U=M.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+E+"$2");M.url=U+((U==M.url)?(M.url.match(/\?/)?"&":"?")+"_="+E:"")}if(M.data&&G=="GET"){M.url+=(M.url.match(/\?/)?"&":"?")+M.data;M.data=null}if(M.global&&!o.active++){o.event.trigger("ajaxStart")}var Q=/^(\w+:)?\/\/([^\/?#]+)/.exec(M.url);if(M.dataType=="script"&&G=="GET"&&Q&&(Q[1]&&Q[1]!=location.protocol||Q[2]!=location.host)){var H=document.getElementsByTagName("head")[0];var T=document.createElement("script");T.src=M.url;if(M.scriptCharset){T.charset=M.scriptCharset}if(!W){var O=false;T.onload=T.onreadystatechange=function(){if(!O&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){O=true;I();L();T.onload=T.onreadystatechange=null;H.removeChild(T)}}}H.appendChild(T);return g}var K=false;var J=M.xhr();if(M.username){J.open(G,M.url,M.async,M.username,M.password)}else{J.open(G,M.url,M.async)}try{if(M.data){J.setRequestHeader("Content-Type",M.contentType)}if(M.ifModified){J.setRequestHeader("If-Modified-Since",o.lastModified[M.url]||"Thu, 01 Jan 1970 00:00:00 GMT")}J.setRequestHeader("X-Requested-With","XMLHttpRequest");J.setRequestHeader("Accept",M.dataType&&M.accepts[M.dataType]?M.accepts[M.dataType]+", */*":M.accepts._default)}catch(S){}if(M.beforeSend&&M.beforeSend(J,M)===false){if(M.global&&!--o.active){o.event.trigger("ajaxStop")}J.abort();return false}if(M.global){o.event.trigger("ajaxSend",[J,M])}var N=function(X){if(J.readyState==0){if(P){clearInterval(P);P=null;if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}}else{if(!K&&J&&(J.readyState==4||X=="timeout")){K=true;if(P){clearInterval(P);P=null}R=X=="timeout"?"timeout":!o.httpSuccess(J)?"error":M.ifModified&&o.httpNotModified(J,M.url)?"notmodified":"success";if(R=="success"){try{V=o.httpData(J,M.dataType,M)}catch(Z){R="parsererror"}}if(R=="success"){var Y;try{Y=J.getResponseHeader("Last-Modified")}catch(Z){}if(M.ifModified&&Y){o.lastModified[M.url]=Y}if(!W){I()}}else{o.handleError(M,J,R)}L();if(X){J.abort()}if(M.async){J=null}}}};if(M.async){var P=setInterval(N,13);if(M.timeout>0){setTimeout(function(){if(J&&!K){N("timeout")}},M.timeout)}}try{J.send(M.data)}catch(S){o.handleError(M,J,null,S)}if(!M.async){N()}function I(){if(M.success){M.success(V,R)}if(M.global){o.event.trigger("ajaxSuccess",[J,M])}}function L(){if(M.complete){M.complete(J,R)}if(M.global){o.event.trigger("ajaxComplete",[J,M])}if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}return J},handleError:function(F,H,E,G){if(F.error){F.error(H,E,G)}if(F.global){o.event.trigger("ajaxError",[H,F,G])}},active:0,httpSuccess:function(F){try{return !F.status&&location.protocol=="file:"||(F.status>=200&&F.status<300)||F.status==304||F.status==1223}catch(E){}return false},httpNotModified:function(G,E){try{var H=G.getResponseHeader("Last-Modified");return G.status==304||H==o.lastModified[E]}catch(F){}return false},httpData:function(J,H,G){var F=J.getResponseHeader("content-type"),E=H=="xml"||!H&&F&&F.indexOf("xml")>=0,I=E?J.responseXML:J.responseText;if(E&&I.documentElement.tagName=="parsererror"){throw"parsererror"}if(G&&G.dataFilter){I=G.dataFilter(I,H)}if(typeof I==="string"){if(H=="script"){o.globalEval(I)}if(H=="json"){I=l["eval"]("("+I+")")}}return I},param:function(E){var G=[];function H(I,J){G[G.length]=encodeURIComponent(I)+"="+encodeURIComponent(J)}if(o.isArray(E)||E.jquery){o.each(E,function(){H(this.name,this.value)})}else{for(var F in E){if(o.isArray(E[F])){o.each(E[F],function(){H(F,this)})}else{H(F,o.isFunction(E[F])?E[F]():E[F])}}}return G.join("&").replace(/%20/g,"+")}});var m={},n,d=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];function t(F,E){var G={};o.each(d.concat.apply([],d.slice(0,E)),function(){G[this]=F});return G}o.fn.extend({show:function(J,L){if(J){return this.animate(t("show",3),J,L)}else{for(var H=0,F=this.length;H<F;H++){var E=o.data(this[H],"olddisplay");this[H].style.display=E||"";if(o.css(this[H],"display")==="none"){var G=this[H].tagName,K;if(m[G]){K=m[G]}else{var I=o("<"+G+" />").appendTo("body");K=I.css("display");if(K==="none"){K="block"}I.remove();m[G]=K}o.data(this[H],"olddisplay",K)}}for(var H=0,F=this.length;H<F;H++){this[H].style.display=o.data(this[H],"olddisplay")||""}return this}},hide:function(H,I){if(H){return this.animate(t("hide",3),H,I)}else{for(var G=0,F=this.length;G<F;G++){var E=o.data(this[G],"olddisplay");if(!E&&E!=="none"){o.data(this[G],"olddisplay",o.css(this[G],"display"))}}for(var G=0,F=this.length;G<F;G++){this[G].style.display="none"}return this}},_toggle:o.fn.toggle,toggle:function(G,F){var E=typeof G==="boolean";return o.isFunction(G)&&o.isFunction(F)?this._toggle.apply(this,arguments):G==null||E?this.each(function(){var H=E?G:o(this).is(":hidden");o(this)[H?"show":"hide"]()}):this.animate(t("toggle",3),G,F)},fadeTo:function(E,G,F){return this.animate({opacity:G},E,F)},animate:function(I,F,H,G){var E=o.speed(F,H,G);return this[E.queue===false?"each":"queue"](function(){var K=o.extend({},E),M,L=this.nodeType==1&&o(this).is(":hidden"),J=this;for(M in I){if(I[M]=="hide"&&L||I[M]=="show"&&!L){return K.complete.call(this)}if((M=="height"||M=="width")&&this.style){K.display=o.css(this,"display");K.overflow=this.style.overflow}}if(K.overflow!=null){this.style.overflow="hidden"}K.curAnim=o.extend({},I);o.each(I,function(O,S){var R=new o.fx(J,K,O);if(/toggle|show|hide/.test(S)){R[S=="toggle"?L?"show":"hide":S](I)}else{var Q=S.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),T=R.cur(true)||0;if(Q){var N=parseFloat(Q[2]),P=Q[3]||"px";if(P!="px"){J.style[O]=(N||1)+P;T=((N||1)/R.cur(true))*T;J.style[O]=T+P}if(Q[1]){N=((Q[1]=="-="?-1:1)*N)+T}R.custom(T,N,P)}else{R.custom(T,S,"")}}});return true})},stop:function(F,E){var G=o.timers;if(F){this.queue([])}this.each(function(){for(var H=G.length-1;H>=0;H--){if(G[H].elem==this){if(E){G[H](true)}G.splice(H,1)}}});if(!E){this.dequeue()}return this}});o.each({slideDown:t("show",1),slideUp:t("hide",1),slideToggle:t("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(E,F){o.fn[E]=function(G,H){return this.animate(F,G,H)}});o.extend({speed:function(G,H,F){var E=typeof G==="object"?G:{complete:F||!F&&H||o.isFunction(G)&&G,duration:G,easing:F&&H||H&&!o.isFunction(H)&&H};E.duration=o.fx.off?0:typeof E.duration==="number"?E.duration:o.fx.speeds[E.duration]||o.fx.speeds._default;E.old=E.complete;E.complete=function(){if(E.queue!==false){o(this).dequeue()}if(o.isFunction(E.old)){E.old.call(this)}};return E},easing:{linear:function(G,H,E,F){return E+F*G},swing:function(G,H,E,F){return((-Math.cos(G*Math.PI)/2)+0.5)*F+E}},timers:[],fx:function(F,E,G){this.options=E;this.elem=F;this.prop=G;if(!E.orig){E.orig={}}}});o.fx.prototype={update:function(){if(this.options.step){this.options.step.call(this.elem,this.now,this)}(o.fx.step[this.prop]||o.fx.step._default)(this);if((this.prop=="height"||this.prop=="width")&&this.elem.style){this.elem.style.display="block"}},cur:function(F){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null)){return this.elem[this.prop]}var E=parseFloat(o.css(this.elem,this.prop,F));return E&&E>-10000?E:parseFloat(o.curCSS(this.elem,this.prop))||0},custom:function(I,H,G){this.startTime=e();this.start=I;this.end=H;this.unit=G||this.unit||"px";this.now=this.start;this.pos=this.state=0;var E=this;function F(J){return E.step(J)}F.elem=this.elem;if(F()&&o.timers.push(F)&&!n){n=setInterval(function(){var K=o.timers;for(var J=0;J<K.length;J++){if(!K[J]()){K.splice(J--,1)}}if(!K.length){clearInterval(n);n=g}},13)}},show:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.show=true;this.custom(this.prop=="width"||this.prop=="height"?1:0,this.cur());o(this.elem).show()},hide:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(H){var G=e();if(H||G>=this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var E=true;for(var F in this.options.curAnim){if(this.options.curAnim[F]!==true){E=false}}if(E){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(o.css(this.elem,"display")=="none"){this.elem.style.display="block"}}if(this.options.hide){o(this.elem).hide()}if(this.options.hide||this.options.show){for(var I in this.options.curAnim){o.attr(this.elem.style,I,this.options.orig[I])}}this.options.complete.call(this.elem)}return false}else{var J=G-this.startTime;this.state=J/this.options.duration;this.pos=o.easing[this.options.easing||(o.easing.swing?"swing":"linear")](this.state,J,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update()}return true}};o.extend(o.fx,{speeds:{slow:600,fast:200,_default:400},step:{opacity:function(E){o.attr(E.elem.style,"opacity",E.now)},_default:function(E){if(E.elem.style&&E.elem.style[E.prop]!=null){E.elem.style[E.prop]=E.now+E.unit}else{E.elem[E.prop]=E.now}}}});if(document.documentElement.getBoundingClientRect){o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}var G=this[0].getBoundingClientRect(),J=this[0].ownerDocument,F=J.body,E=J.documentElement,L=E.clientTop||F.clientTop||0,K=E.clientLeft||F.clientLeft||0,I=G.top+(self.pageYOffset||o.boxModel&&E.scrollTop||F.scrollTop)-L,H=G.left+(self.pageXOffset||o.boxModel&&E.scrollLeft||F.scrollLeft)-K;return{top:I,left:H}}}else{o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}o.offset.initialized||o.offset.initialize();var J=this[0],G=J.offsetParent,F=J,O=J.ownerDocument,M,H=O.documentElement,K=O.body,L=O.defaultView,E=L.getComputedStyle(J,null),N=J.offsetTop,I=J.offsetLeft;while((J=J.parentNode)&&J!==K&&J!==H){M=L.getComputedStyle(J,null);N-=J.scrollTop,I-=J.scrollLeft;if(J===G){N+=J.offsetTop,I+=J.offsetLeft;if(o.offset.doesNotAddBorder&&!(o.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(J.tagName))){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}F=G,G=J.offsetParent}if(o.offset.subtractsBorderForOverflowNotVisible&&M.overflow!=="visible"){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}E=M}if(E.position==="relative"||E.position==="static"){N+=K.offsetTop,I+=K.offsetLeft}if(E.position==="fixed"){N+=Math.max(H.scrollTop,K.scrollTop),I+=Math.max(H.scrollLeft,K.scrollLeft)}return{top:N,left:I}}}o.offset={initialize:function(){if(this.initialized){return}var L=document.body,F=document.createElement("div"),H,G,N,I,M,E,J=L.style.marginTop,K='<div style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;"><div></div></div><table style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;" cellpadding="0" cellspacing="0"><tr><td></td></tr></table>';M={position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"};for(E in M){F.style[E]=M[E]}F.innerHTML=K;L.insertBefore(F,L.firstChild);H=F.firstChild,G=H.firstChild,I=H.nextSibling.firstChild.firstChild;this.doesNotAddBorder=(G.offsetTop!==5);this.doesAddBorderForTableAndCells=(I.offsetTop===5);H.style.overflow="hidden",H.style.position="relative";this.subtractsBorderForOverflowNotVisible=(G.offsetTop===-5);L.style.marginTop="1px";this.doesNotIncludeMarginInBodyOffset=(L.offsetTop===0);L.style.marginTop=J;L.removeChild(F);this.initialized=true},bodyOffset:function(E){o.offset.initialized||o.offset.initialize();var G=E.offsetTop,F=E.offsetLeft;if(o.offset.doesNotIncludeMarginInBodyOffset){G+=parseInt(o.curCSS(E,"marginTop",true),10)||0,F+=parseInt(o.curCSS(E,"marginLeft",true),10)||0}return{top:G,left:F}}};o.fn.extend({position:function(){var I=0,H=0,F;if(this[0]){var G=this.offsetParent(),J=this.offset(),E=/^body|html$/i.test(G[0].tagName)?{top:0,left:0}:G.offset();J.top-=j(this,"marginTop");J.left-=j(this,"marginLeft");E.top+=j(G,"borderTopWidth");E.left+=j(G,"borderLeftWidth");F={top:J.top-E.top,left:J.left-E.left}}return F},offsetParent:function(){var E=this[0].offsetParent||document.body;while(E&&(!/^body|html$/i.test(E.tagName)&&o.css(E,"position")=="static")){E=E.offsetParent}return o(E)}});o.each(["Left","Top"],function(F,E){var G="scroll"+E;o.fn[G]=function(H){if(!this[0]){return null}return H!==g?this.each(function(){this==l||this==document?l.scrollTo(!F?H:o(l).scrollLeft(),F?H:o(l).scrollTop()):this[G]=H}):this[0]==l||this[0]==document?self[F?"pageYOffset":"pageXOffset"]||o.boxModel&&document.documentElement[G]||document.body[G]:this[0][G]}});o.each(["Height","Width"],function(I,G){var E=I?"Left":"Top",H=I?"Right":"Bottom",F=G.toLowerCase();o.fn["inner"+G]=function(){return this[0]?o.css(this[0],F,false,"padding"):null};o.fn["outer"+G]=function(K){return this[0]?o.css(this[0],F,false,K?"margin":"border"):null};var J=G.toLowerCase();o.fn[J]=function(K){return this[0]==l?document.compatMode=="CSS1Compat"&&document.documentElement["client"+G]||document.body["client"+G]:this[0]==document?Math.max(document.documentElement["client"+G],document.body["scroll"+G],document.documentElement["scroll"+G],document.body["offset"+G],document.documentElement["offset"+G]):K===g?(this.length?o.css(this[0],J):null):this.css(J,typeof K==="string"?K:K+"px")}})})();

  

"use strict";
if (!this.JSON) {
    this.JSON = {};
}

(function () {

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10 ? '0' + n : n;
    }

    if (typeof Date.prototype.toJSON !== 'function') {

        Date.prototype.toJSON = function (key) {

            return isFinite(this.valueOf()) ?
                   this.getUTCFullYear()   + '-' +
                 f(this.getUTCMonth() + 1) + '-' +
                 f(this.getUTCDate())      + 'T' +
                 f(this.getUTCHours())     + ':' +
                 f(this.getUTCMinutes())   + ':' +
                 f(this.getUTCSeconds())   + 'Z' : null;
        };

        String.prototype.toJSON =
        Number.prototype.toJSON =
        Boolean.prototype.toJSON = function (key) {
            return this.valueOf();
        };
    }

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {    // table of character substitutions
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"' : '\\"',
            '\\': '\\\\'
        },
        rep;


    function quote(string) {

        escapable.lastIndex = 0;
        return escapable.test(string) ?
            '"' + string.replace(escapable, function (a) {
                var c = meta[a];
                return typeof c === 'string' ? c :
                    '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
            }) + '"' :
            '"' + string + '"';
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i,          // The loop counter.
            k,          // The member key.
            v,          // The member value.
            length,
            mind = gap,
            partial,
            value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === 'object' &&
                typeof value.toJSON === 'function') {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === 'function') {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case 'string':
            return quote(value);

        case 'number':

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':


            return String(value);


        case 'object':


            if (!value) {
                return 'null';
            }

            gap += indent;
            partial = [];

            if (Object.prototype.toString.apply(value) === '[object Array]') {

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }

                v = partial.length === 0 ? '[]' :
                    gap ? '[\n' + gap +
                            partial.join(',\n' + gap) + '\n' +
                                mind + ']' :
                          '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }


            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            } else {


                for (k in value) {
                    if (Object.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }


            v = partial.length === 0 ? '{}' :
                gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' +
                        mind + '}' : '{' + partial.join(',') + '}';
            gap = mind;
            return v;
        }
    }


    if (typeof JSON.stringify !== 'function') {
        JSON.stringify = function (value, replacer, space) {


            var i;
            gap = '';
            indent = '';


            if (typeof space === 'number') {
                for (i = 0; i < space; i += 1) {
                    indent += ' ';
                }


            } else if (typeof space === 'string') {
                indent = space;
            }


            rep = replacer;
            if (replacer && typeof replacer !== 'function' &&
                    (typeof replacer !== 'object' ||
                     typeof replacer.length !== 'number')) {
                throw new Error('JSON.stringify');
            }


            return str('', {'': value});
        };
    }



    if (typeof JSON.parse !== 'function') {
        JSON.parse = function (text, reviver) {


            var j;

            function walk(holder, key) {


                var k, v, value = holder[key];
                if (value && typeof value === 'object') {
                    for (k in value) {
                        if (Object.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }



            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function (a) {
                    return '\\u' +
                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }


            if (/^[\],:{}\s]*$/.
test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').
replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {


                j = eval('(' + text + ')');


                return typeof reviver === 'function' ?
                    walk({'': j}, '') : j;
            }


            throw new SyntaxError('JSON.parse');
        };
    }
}());

/*
	Custom jquery plugin, to serialize form elements to a Json Array
	Unni -- 15/9/2009
*/
function serializeToJSON(formName){
	return $('#' + formName).serializeToJSON();

}

jQuery.fn.extend({

    serializeToJSON: function() {
        var objectMap = this.serializeArray();
        var objectJson = {};
        jQuery.each(objectMap, function() {           
            objectJson[this.name] =  this.value ;
        });
        return JSON.stringify(objectJson);
        return objectJson;
    }
});

/** Creation of custom JSON object

**/

function JsonObject(){
	this.jsonObj = {};
	this.put = function ( key, value ){
		this.jsonObj[key] = value;
	};
	this.get = function ( key ){
			return this.jsonObj[key];
	};	
	this.toString = function (){	
		return JSON.stringify(this.jsonObj);
	};

};




/*
xml2json v 1.1
copyright 2005-2007 Thomas Frank

This program is free software under the terms of the 
GNU General Public License version 2 as published by the Free 
Software Foundation. It is distributed without any warranty.
*/

xml2json={
	parser:function(xmlcode,ignoretags,debug){
		if(!ignoretags){ignoretags=""};
		xmlcode=xmlcode.replace(/\s*\/>/g,'/>');
		xmlcode=xmlcode.replace(/<\?[^>]*>/g,"").replace(/<\![^>]*>/g,"");
		if (!ignoretags.sort){ignoretags=ignoretags.split(",")};
		var x=this.no_fast_endings(xmlcode);
		x=this.attris_to_tags(x);
		x=escape(x);
		x=x.split("%3C").join("<").split("%3E").join(">").split("%3D").join("=").split("%22").join("\"");
		for (var i=0;i<ignoretags.length;i++){
			x=x.replace(new RegExp("<"+ignoretags[i]+">","g"),"*$**"+ignoretags[i]+"**$*");
			x=x.replace(new RegExp("</"+ignoretags[i]+">","g"),"*$***"+ignoretags[i]+"**$*")
		};
		x='<JSONTAGWRAPPER>'+x+'</JSONTAGWRAPPER>';
		this.xmlobject={};
		var y=this.xml_to_object(x).jsontagwrapper;
		if(debug){y=this.show_json_structure(y,debug)};
		return y
	},
	xml_to_object:function(xmlcode){
		var x=xmlcode.replace(/<\//g,"�");
		x=x.split("<");
		var y=[];
		var level=0;
		var opentags=[];
		for (var i=1;i<x.length;i++){
			var tagname=x[i].split(">")[0];
			opentags.push(tagname);
			level++
			y.push(level+"<"+x[i].split("�")[0]);
			while(x[i].indexOf("�"+opentags[opentags.length-1]+">")>=0){level--;opentags.pop()}
		};
		var oldniva=-1;
		var objname="this.xmlobject";
		for (var i=0;i<y.length;i++){
			var preeval="";
			var niva=y[i].split("<")[0];
			var tagnamn=y[i].split("<")[1].split(">")[0];
			tagnamn=tagnamn.toLowerCase();
			var rest=y[i].split(">")[1];
			if(niva<=oldniva){
				var tabort=oldniva-niva+1;
				for (var j=0;j<tabort;j++){objname=objname.substring(0,objname.lastIndexOf("."))}
			};
			objname+="."+tagnamn;
			var pobject=objname.substring(0,objname.lastIndexOf("."));
			if (eval("typeof "+pobject) != "object"){preeval+=pobject+"={value:"+pobject+"};\n"};
			var objlast=objname.substring(objname.lastIndexOf(".")+1);
			var already=false;
			for (k in eval(pobject)){if(k==objlast){already=true}};
			var onlywhites=true;
			for(var s=0;s<rest.length;s+=3){
				if(rest.charAt(s)!="%"){onlywhites=false}
			};
			if (rest!="" && !onlywhites){
				if(rest/1!=rest){
					rest="'"+rest.replace(/\'/g,"\\'")+"'";
					rest=rest.replace(/\*\$\*\*\*/g,"</");
					rest=rest.replace(/\*\$\*\*/g,"<");
					rest=rest.replace(/\*\*\$\*/g,">")
				}
			} 
			else {rest="{}"};
			if(rest.charAt(0)=="'"){rest='unescape('+rest+')'};
			if (already && !eval(objname+".sort")){preeval+=objname+"=["+objname+"];\n"};
			var before="=";after="";
			if (already){before=".push(";after=")"};
			var toeval=preeval+objname+before+rest+after;
			eval(toeval);
			if(eval(objname+".sort")){objname+="["+eval(objname+".length-1")+"]"};
			oldniva=niva
		};
		return this.xmlobject
	},
	show_json_structure:function(obj,debug,l){
		var x='';
		if (obj.sort){x+="[\n"} else {x+="{\n"};
		for (var i in obj){
			if (!obj.sort){x+=i+":"};
			if (typeof obj[i] == "object"){
				x+=this.show_json_structure(obj[i],false,1)
			}
			else {
				if(typeof obj[i]=="function"){
					var v=obj[i]+"";
					//v=v.replace(/\t/g,"");
					x+=v
				}
				else if(typeof obj[i]!="string"){x+=obj[i]+",\n"}
				else {x+="'"+obj[i].replace(/\'/g,"\\'").replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/\r/g,"\\r")+"',\n"}
			}
		};
		if (obj.sort){x+="],\n"} else {x+="},\n"};
		if (!l){
			x=x.substring(0,x.lastIndexOf(","));
			x=x.replace(new RegExp(",\n}","g"),"\n}");
			x=x.replace(new RegExp(",\n]","g"),"\n]");
			var y=x.split("\n");x="";
			var lvl=0;
			for (var i=0;i<y.length;i++){
				if(y[i].indexOf("}")>=0 || y[i].indexOf("]")>=0){lvl--};
				tabs="";for(var j=0;j<lvl;j++){tabs+="\t"};
				x+=tabs+y[i]+"\n";
				if(y[i].indexOf("{")>=0 || y[i].indexOf("[")>=0){lvl++}
			};
			if(debug=="html"){
				x=x.replace(/</g,"&lt;").replace(/>/g,"&gt;");
				x=x.replace(/\n/g,"<BR>").replace(/\t/g,"&nbsp;&nbsp;&nbsp;&nbsp;")
			};
			if (debug=="compact"){x=x.replace(/\n/g,"").replace(/\t/g,"")}
		};
		return x
	},
	no_fast_endings:function(x){
		x=x.split("/>");
		for (var i=1;i<x.length;i++){
			var t=x[i-1].substring(x[i-1].lastIndexOf("<")+1).split(" ")[0];
			x[i]="></"+t+">"+x[i]
		}	;
		x=x.join("");
		return x
	},
	attris_to_tags: function(x){
		var d=' ="\''.split("");
		x=x.split(">");
		for (var i=0;i<x.length;i++){
			var temp=x[i].split("<");
			for (var r=0;r<4;r++){temp[0]=temp[0].replace(new RegExp(d[r],"g"),"_jsonconvtemp"+r+"_")};
			if(temp[1]){
				temp[1]=temp[1].replace(/'/g,'"');
				temp[1]=temp[1].split('"');
				for (var j=1;j<temp[1].length;j+=2){
					for (var r=0;r<4;r++){temp[1][j]=temp[1][j].replace(new RegExp(d[r],"g"),"_jsonconvtemp"+r+"_")}
				};
				temp[1]=temp[1].join('"')
			};
			x[i]=temp.join("<")
		};
		x=x.join(">");
		x=x.replace(/ ([^=]*)=([^ |>]*)/g,"><$1>$2</$1");
		x=x.replace(/>"/g,">").replace(/"</g,"<");
		for (var r=0;r<4;r++){x=x.replace(new RegExp("_jsonconvtemp"+r+"_","g"),d[r])}	;
		return x
	}
};


if(!Array.prototype.push){
	Array.prototype.push=function(x){
		this[this.length]=x;
		return true
	}
};

if (!Array.prototype.pop){
	Array.prototype.pop=function(){
  		var response = this[this.length-1];
  		this.length--;
  		return response
	}
};

var AjaxEngine = function() {

	this.requestURLS = new Array();
	var self = this;
	this.onSuccess = null;
	this.onFailure = null;
	this.registerRequest = function(requestLogicalName, requestURL) {
		this.requestURLS[requestLogicalName] = requestURL;
	};

	

	this.sendRequest = function(requestName, options) {
	
	        // If this.requestURLS[requestName] is null set it as current page location
	        // this can happen if sendRequest is invoked before registerRequest
	        // see bug# 22759 -- unni
	        if( this.requestURLS[requestName] == null || this.requestURLS[requestName] == 'undefined'){
	        	this.requestURLS[requestName] = location.href.substring(0,location.href.indexOf('?'));
	        }
	        
		if (arguments.length >= 2)
			if (typeof arguments[1] == 'string')
				options = this._createQueryString(arguments, 1);

		$.ajax({
					type : "GET",
					url : this.requestURLS[requestName],
					data : options,
					success : this._processAjaxResponse,
					error : this._handleError
				});

	}
	
	this.sendSyncRequest = function(requestName, options) {

		if (arguments.length >= 2)
			if (typeof arguments[1] == 'string')
				options = this._createQueryString(arguments, 1);
		

		$.ajax({
					type : "GET",
					url : this.requestURLS[requestName],
					data : options,
					success : this._processAjaxResponse,
					error : this._handleError
				});

	}

	this._createQueryString = function(theArgs, offset) {
		var queryString = ""
		for (var i = offset; i < theArgs.length; i++) {
			if (i != offset) {
				queryString += "&";
			} else if (i = offset) {
				queryString += "requestType=AJAX-REQUEST&" // Setting the
				// requestType
				// parameter -- thej
				// 25/07/2006
			}

			var anArg = theArgs[i];

			if (anArg.name != undefined && anArg.value != undefined) {
				queryString += anArg.name + "=" + escape(anArg.value);
			} else {
				var ePos = anArg.indexOf('=');
				var argName = anArg.substring(0, ePos);
				var argValue = anArg.substring(ePos + 1);
				queryString += argName + "=" + encodeURIComponent(argValue);
			}
		}
		
		if( location.href.indexOf("$contextName") > 0){
        	
       	 var contextName = location.href.substring(location.href.indexOf("$contextName") +13);
       	 if( contextName.indexOf("&") > 0 ){
       		 contextName = contextName.substring(0,contextName.indexOf("&"));
       	 } 
       	 queryString += "&$contextName="+contextName;
       }
		
	   var serialNumber = "0"; 
	   var serialObj = getJadeControl("Page_lastUsed_SerialId");
	   if (serialObj != null && typeof serialObj != "undefined"){
		   serialNumber = serialObj.value;
		   queryString += "&lastUsedSerialId="+serialNumber;
	   }
		   
	     
		return queryString;
	};

	this._processAjaxResponse = function(response) {
	
		try{			
			xmlResponseElements = response.getElementsByTagName("ajax-response");
		} catch (e) {
			 var locationUrl = location.href;
			 var splitVal = locationUrl.split('/');
			 var url = splitVal[0]+ "/" +splitVal[1]+ "/" +splitVal[2]+ "/" +splitVal[3] +"/" +"Jsp/Core_Common/index.jsp";
			if ( opener ) {
				opener.top.location = url;
			    window.close();
			    return;
			}else{
				location.href =  url;
				return;
			}          
		 }
		
		if (xmlResponseElements == null || xmlResponseElements.length != 1) {
			if( self.onFailure != null && ( typeof self.onFailure == "function")){
				self.onFailure.call();
			}
			self.onFailure = null;
			self.onSuccess = null;
			return;
		}
		xmlResponseElements = xmlResponseElements[0].childNodes;
		// xmlResponseElements = response.childNodes[0].children;
		// alert(xmlResponseElements);

		for (var i = 0; i < xmlResponseElements.length; i++) {
			var responseElement = xmlResponseElements[i];

			// only process nodes of type element.....
			if (responseElement.nodeType != 1)
				continue;

			var responseType = responseElement.getAttribute("type");
			var responseId = responseElement.getAttribute("id");

			if (responseType == "object")
				self._processAjaxObjectUpdate(this.ajaxObjects[responseId],
						responseElement);
			else if (responseType == "element")
				self._processAjaxElementUpdate(this.ajaxElements[responseId],
						responseElement);
			else if (responseType == "htmlComponents") // Customized for HIS
				// --thej 20/07/2006
				self._processAjaxHtmlComponentUpdate(responseElement);
			else if (responseType == "selectorOptions") { // Customized for
				// HIS --thej
				// 05/08/2006
				var optionCount = responseElement.getAttribute("optionCount");
				self._processAjaxHtmlComponentSelectorUpdate(responseElement,
						responseId, optionCount); // response id will be the
				// name of the selector
				// component
			} else if (responseType == "onLoadFunction") {
				self._processAjaxOnLoadFunctions(responseElement);

			} else
				alert('unrecognized AjaxResponse type : ' + responseType);
		}
		if( self.onSuccess != null && ( typeof self.onSuccess == "function")){
			self.onSuccess.call();
		}
		self.onFailure = null;
		self.onSuccess = null;
		
	};
	
	this._handleError = function(){
		if( self.onFailure != null && ( typeof self.onFailure == "function")){
			self.onFailure.call();
		}
		self.onFailure = null;
		self.onSuccess = null;
	}

	this._processAjaxObjectUpdate = function(ajaxObject, responseElement) {
		ajaxObject.ajaxUpdate(responseElement);
	};

	this._processAjaxElementUpdate = function(ajaxElement, responseElement) {
		ajaxElement.innerHTML = RicoUtil.getContentAsString(responseElement);
	};

	/** Added by thej for handling response from Sofia* */
	this._processAjaxHtmlComponentUpdate = function(responseElement) {

		ajaxUpdateComponents(responseElement);
	};
	this._processAjaxHtmlComponentSelectorUpdate = function(responseElement,
			responseId, optionCount) {
		ajaxUpdateSelectorComponent(responseElement, responseId, optionCount);
	};
	this._processAjaxOnLoadFunctions = function(responseElement) {
		ajaxCallOnloadFunction(responseElement);
	};

};

var ajaxEngine = new AjaxEngine();

/**
 * @author Thej 25/07/2006 This function receives the xml Tag which contain the
 *         component name and the value for the particular component The
 *         response element will be of the follwing format <htmlComponent
 *         componentName="<htmlComponentName>" componentValue="<value to be
 *         set>" /> Function Also set the component value to the corresponding
 *         component Name
 */
function ajaxUpdateComponents(responseElement) {
	var nodeNumber = 0;
	var len = -1;
	var browserName = navigator.appName;
	var browserVer = parseInt(navigator.appVersion);
	if (browserName == "Netscape") { // We had to Add this code to set the
		// node number becoz in the function
		nodeNumber = 1; // createXMLFromString we r parsing differently for
		// mozilla and IE
	}
	enableComponentsForAjax();
	// This methods sets the component value, visibility and enable/disable
	// feature of that component
	var componentName = responseElement.childNodes[nodeNumber]
			.getAttribute("componentName");
	var componentValue = responseElement.childNodes[nodeNumber]
			.getAttribute("componentValue");
	var visibilityValue = responseElement.childNodes[nodeNumber]
			.getAttribute("visibility");
	var disabled = responseElement.childNodes[nodeNumber]
			.getAttribute("disabled");
	var keyValue = responseElement.childNodes[nodeNumber]
			.getAttribute("KeyValue");
	var textValue = responseElement.childNodes[nodeNumber]
			.getAttribute("TextValue");
	var indexValue = responseElement.childNodes[nodeNumber]
	        .getAttribute("index");
  
    	len = typeof document.forms[0].elements[componentName] != "undefined" ? document.forms[0].elements[componentName].length : len;
   
	if (document.forms[0].elements[componentName]) {
		// used to enable/disable a component.
		// and helps to change the visibility of a component.

		if (visibilityValue != null
				&& TrimString(visibilityValue) != ""
				&& typeof document.forms[0].elements[componentName].style != "undefined") {
			document.forms[0].elements[componentName].style.display = visibilityValue;
		}else if(visibilityValue != null
				&& TrimString(visibilityValue) != "" && len > 1 && indexValue != null && TrimString(indexValue) != "" &&  indexValue > -1
				&& typeof document.forms[0].elements[componentName][indexValue].style != "undefined"){
		  document.forms[0].elements[componentName][indexValue].style.display = visibilityValue;
		}

		if (disabled != null && TrimString(disabled) != ""
				&& disabled == "true") {
			 if(len > 1 && indexValue != null && TrimString(indexValue) != "" && indexValue > -1){
				document.forms[0].elements[componentName][indexValue].disabled = true;
			 }{
				document.forms[0].elements[componentName].disabled = true;
			 }
			
		} else if (disabled != null && TrimString(disabled) != ""
				&& disabled == "false") {
			 if(len > 1 && indexValue != null && TrimString(indexValue) != "" && indexValue > -1){
				 document.forms[0].elements[componentName][indexValue].disabled = false;
			 }else{
				 document.forms[0].elements[componentName].disabled = false;
			 }
		}
	}else if(document.anchors[componentName]){
		if (visibilityValue != null
				&& TrimString(visibilityValue) != ""
				&& typeof document.anchors[componentName].style != "undefined") {
			document.anchors[componentName].style.display = visibilityValue;
		}
		if (disabled != null && TrimString(disabled) != ""
			&& disabled == "true") {
			document.anchors[componentName].disabled = true;
		} else if (disabled != null && TrimString(disabled) != ""
			&& disabled == "false") {
			document.anchors[componentName].disabled = false;
	}
	}else if(document.images[componentName]){
		if (visibilityValue != null
				&& TrimString(visibilityValue) != ""
				&& typeof document.images[componentName].style != "undefined") {
			document.images[componentName].style.display = visibilityValue;
		}
		if (disabled != null && TrimString(disabled) != ""
			&& disabled == "true") {
			document.images[componentName].disabled = true;
		} else if (disabled != null && TrimString(disabled) != ""
			&& disabled == "false") {
			document.images[componentName].disabled = false;
	}
	}
	if (document.forms[0].elements[componentName] && componentValue != null
			&& TrimString(componentValue) == "AUTOCOMPLETE"
			&& TrimString(keyValue) != "" && TrimString(textValue) != "") {
		setComboValue(componentName, keyValue, textValue); // set value into a
		// autocomplete
	} else if (document.forms[0].elements[componentName]) {
		if(len > 1 && indexValue != null && TrimString(indexValue) != "" && indexValue > -1){
			document.forms[0].elements[componentName][indexValue].value = componentValue;
		}else{
			var elm = document.forms[0].elements[componentName];
			if( elm.type == "checkbox" ){
				elm.checked = componentValue == "true" ? true : false;
			}else{					
				elm.value = componentValue;
			}
		}
		 // set
		// values
		// to
		// normal
		// html
		// components
	} else if (componentName == "statusMessage") {
		var varErrorDisplayArea = null;
		var varMessageImage = null;
		var hotButtonDiv = null;
		var varErrorLink = null;
		
	
		if(parent.document.getElementById('errorDisplayArea')){
			varErrorDisplayArea = parent.document.getElementById("errorDisplayArea");
			hotButtonDiv = parent.document.getElementById("hotbutton");
			varMessageImage = parent.document.getElementById("messageImage");
			varErrorLink = parent.document.getElementById("errorLink");	
		} else if (parent.parent.document.getElementById('errorDisplayArea')) {
			varErrorDisplayArea = parent.parent.document.getElementById("errorDisplayArea");
			hotButtonDiv = parent.parent.document.getElementById("hotbutton");
			varMessageImage = parent.parent.document.getElementById("messageImage");
			varErrorLink = parent.parent.document.getElementById("errorLink");	
		} else if (parent.parent.parent.document.getElementById('errorDisplayArea')) {
			varErrorDisplayArea = parent.parent.parent.document.getElementById("errorDisplayArea");
			hotButtonDiv = parent.parent.parent.document.getElementById("hotbutton");
			varMessageImage = parent.parent.parent.document.getElementById("messageImage");
			varErrorLink = parent.parent.parent.document.getElementById("errorLink");
		}
		
		var vardhxLayout=null;
		var varconfigPattern=null;

		if(typeof(dhxLayout)!='undefined'){
			vardhxLayout = dhxLayout;
			if(typeof(configPattern)!='undefined'){
				varconfigPattern = configPattern; 
			} 
		}else if(typeof(parent.dhxLayout)!='undefined'){
			vardhxLayout = parent.dhxLayout;
			if(typeof(parent.configPattern)!='undefined'){
				varconfigPattern = parent.configPattern; 
			}   		
		}else if(typeof(parent.parent.dhxLayout)!='undefined'){
			vardhxLayout = parent.parent.dhxLayout;
			if(typeof(parent.parent.configPattern)!='undefined'){
				varconfigPattern = parent.parent.configPattern; 
			}   		
		}else if(typeof(parent.parent.parent.dhxLayout)!='undefined'){
			vardhxLayout = parent.parent.parent.dhxLayout;
			if(typeof(parent.parent.parent.configPattern)!='undefined'){
				varconfigPattern = parent.parent.parent.configPattern; 
			}   		
		}
		
		var errorToDisplay = componentValue;
		var notifyLevel = responseElement.childNodes[nodeNumber].getAttribute("notifyLevel");
		errorToDisplay = TrimString(errorToDisplay);
		notifyLevel = TrimString(notifyLevel);
		
		if (notifyLevel == "F") {
			location.href = componentValue;
			return;
		}

		var hotObjHeight='36px';
		if(errorToDisplay.length>=120) hotObjHeight='41px';

		if (varErrorDisplayArea!=null && vardhxLayout!=null) {
			if(errorToDisplay != null && errorToDisplay != "" && errorToDisplay.length > 0){
				
				if(varconfigPattern == "4E"){
					vardhxLayout.cells("b").expand();
					vardhxLayout.cells("b").setHeight(12);
				}else{
					var layoutsize = 66;
					if(errorToDisplay.length >= 120) {
						layoutsize = 71;
					}		
					vardhxLayout.cells("a").fixSize(false, false);
					vardhxLayout.cells("a").setHeight(layoutsize);
					vardhxLayout.cells("a").fixSize(true, true);
				}
				
				var hotObjHeight = '30px';
				if(errorToDisplay.length >= 120) {
					hotObjHeight = '38px';
				}
				
				if(hotButtonDiv != null){				
					hotButtonDiv.style.height = hotObjHeight;		
					hotButtonDiv.style.display="inline";
				}
				
				setNotifyStyles(notifyLevel);
				varErrorDisplayArea.innerHTML = errorToDisplay;
				if (notifyLevel == "E" && varErrorLink!=null) {
					varErrorLink.style.visibility = 'visible';
				}else {
					varErrorLink.style.visibility = 'hidden';
				}

			} else{
				var status1value=(parent?(parent.document.forms[0]?(parent.document.forms[0].htmlPageTopContainer_status?parent.document.forms[0].htmlPageTopContainer_status.value:""):""):"");
				if(varErrorDisplayArea && varErrorDisplayArea!=null && status1value.length==0){
					if(hotButtonDiv != null){							
						hotButtonDiv.style.height='0px';
						hotButtonDiv.style.display="none";
					}
					if(varconfigPattern == "4E"){
						vardhxLayout.cells("b").collapse();	
					}else{
					    vardhxLayout.cells("a").fixSize(false, false);					
						vardhxLayout.cells("a").setHeight(35);
		  			    vardhxLayout.cells("a").fixSize(true, true);	
					}	
				}
			}
		} else if ((errorToDisplay != "") && (errorToDisplay != null))  {
			if (browserName=="Microsoft Internet Explorer")  {
				 alert(errorToDisplay);
			 }else{
				 // Mozilla, Ie 11 etc
				 var alertType = '';
				 if(notifyLevel){
					 if(notifyLevel=='E' || notifyLevel=='F'){
						 alertType = 'alerterror';
					 }else if (notifyLevel=='W'){
						 alertType = 'alertwarning';
					 }else{
						 alertType = 'alertsuccess';
					 }
				 }
				 jAlert (errorToDisplay,'',alertType);
			 }
			
		}
	}else if(document.getElementById(componentName) && typeof document.getElementById(componentName) != "undefined"){
		if(componentValue != null){
			document.getElementById(componentName).innerHTML = componentValue;
		}
		if (visibilityValue != null && TrimString(visibilityValue) != ""){
			document.getElementById(componentName).style.display = visibilityValue;
		}
	}

}

/**
 * @author Thej 05/08/2006 This function is used to set the selector component
 *         values. The response element can have more than one tags as below
 *         <option opionName="<optionName>" optionValue="<value to be set>" />
 */
function ajaxUpdateSelectorComponent(responseElement, responseId, optionCount) {
	var even = true;
	var nodeNumber = 0;

	// var browserName=navigator.appName;
	// var browserVer=parseInt(navigator.appVersion);

	// if (browserName == "Netscape") { //We had to Add this code to set the
	// node number becoz in the function
	// nodeNumber = 1; //createXMLFromString we r parsing differently for
	// mozilla and IE
	// }

	// Clear the list
	document.forms[0].elements[responseId].options.length = 0;
	var k = 0; // start adding from 0 since ("0", "Select") is also coming from
	// the Controller
	// Assign the default value
	// document.forms[0].elements[responseId].options[0] = new
	// Option("Select",0);
	for (var i = nodeNumber; i < responseElement.childNodes.length; i++) {
		if (responseElement.childNodes[i]
				&& responseElement.childNodes[i].attributes != null) {
			var name = responseElement.childNodes[i].getAttribute("name");
			var value = responseElement.childNodes[i].getAttribute("value");
			document.forms[0].elements[responseId].options[k] = new Option(
					value, name);
			k++;
		}
	}

}

/**
 * @author Thej 23/06/2007 Will call the onload functions after the ajax
 *         reesponse elements have been set <onloadfunction function="<functionName>" />
 */

function ajaxCallOnloadFunction(responseElement) {
	var nodeNumber = 0;
	var browserName = navigator.appName;
	var browserVer = parseInt(navigator.appVersion);
	if (browserName == "Netscape") { // We had to Add this code to set the
		// node number becoz in the function
		nodeNumber = 1; // createXMLFromString we r parsing differently for
		// mozilla and IE
	}
	var functionName = responseElement.childNodes[nodeNumber]
			.getAttribute("function");
	eval(functionName);
}

/**
 * @author Thej 27/07/2006 Function to be called before AJAX request is to be
 *         send Disable these components becoz these components should be
 *         enabled only after the request
 * 
 */
function disAbleComponentForAjax(componentName) {
	if (getJadeControl(componentName) != null && typeof(getJadeControl(componentName)) != 'undefined'
			&& getJadeControl(componentName).disabled == false) {
		getJadeControl(componentName).disabled = true;
		disAbledComponentList[disAbledComponentListIndex] = componentName;
		disAbledComponentListIndex = disAbledComponentListIndex + 1;
	}
}

/**
 * Function to set the visibility of any control for ajax.
 */
function invisibleComponentForAjax(componentName) {
	if (getJadeControl(componentName).style.visibility == ''
			|| getJadeControl(componentName).style.visibility == 'visible') {
		getJadeControl(componentName).style.visibility = 'hidden';
		invisibleComponentList[invisibleComponentListIndex] = componentName;
		invisibleComponentListIndex = invisibleComponentListIndex + 1;
	}
}

/**
 * @author Thej 27/07/2006 Enable the disabled Components Called inside the rico
 *         Framework no Need to call it seperately
 */
function enableComponentsForAjax() {
	for (i = 0; i < disAbledComponentList.length; i++) {
		getJadeControl(disAbledComponentList[i]).disabled = false;
	}
	disAbledComponentList = new Array();
	disAbledComponentListIndex = 0;
	for (i = 0; i < invisibleComponentList.length; i++) {
		getJadeControl(invisibleComponentList[i]).style.visibility = 'visible';
	}
	invisibleComponentList = new Array();
	invisibleComponentListIndex = 0;
}

var disAbledComponentList = new Array();
var disAbledComponentListIndex = 0;
var invisibleComponentList = new Array();
var invisibleComponentListIndex = 0;/*!
 * jQuery blockUI plugin
 * Version 2.28 (02-DEC-2009)
 * @requires jQuery v1.2.3 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2008 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */

;(function($) {

if (/1\.(0|1|2)\.(0|1|2)/.test($.fn.jquery) || /^1.1/.test($.fn.jquery)) {
	alert('blockUI requires jQuery v1.2.3 or later!  You are using v' + $.fn.jquery);
	return;
}

$.fn._fadeIn = $.fn.fadeIn;

// this bit is to ensure we don't call setExpression when we shouldn't (with extra muscle to handle
// retarded userAgent strings on Vista)
var mode = document.documentMode || 0;
var setExpr = $.browser.msie && (($.browser.version < 8 && !mode) || mode < 8);
var ie6 = $.browser.msie && /MSIE 6.0/.test(navigator.userAgent) && !mode;

// global $ methods for blocking/unblocking the entire page
$.blockUI   = function(opts) { install(window, opts); };
$.unblockUI = function(opts) { remove(window, opts); };





$.blockUI.version = 2.28; // 2nd generation blocking at no extra cost!

// override these in your code to change the default behavior and style
$.blockUI.defaults = {
	// message displayed when blocking (use null for no message)
	message:  '<h1>Please wait...</h1>',

	title: null,	  // title string; only used when theme == true
	draggable: true,  // only used when theme == true (requires jquery-ui.js to be loaded)
	
	theme: false, // set to true to use with jQuery UI themes
	
	// styles for the message when blocking; if you wish to disable
	// these and use an external stylesheet then do this in your code:
	// $.blockUI.defaults.css = {};
	css: {
		padding:	0,
		margin:		0,
		width:		'40%',
		top:		'40%',
		left:		'35%',
		textAlign:	'center',
		color:		'#000',
		border:		'3px solid #aaa',
		backgroundColor:'#fff',
		fontSize:  	'large',
		cursor:		'wait',
		padding:    '10px'
	},
	
	// minimal style set used when themes are used
	themedCSS: {
		width:	'30%',
		top:	'40%',
		left:	'35%'
	},

	// styles for the overlay
	overlayCSS:  {
		backgroundColor: '#000',
		opacity:	  	 0.0,
		cursor:		  	 'wait'
	},


	
	// IE issues: 'about:blank' fails on HTTPS and javascript:false is s-l-o-w
	// (hat tip to Jorge H. N. de Vasconcelos)
	iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank',

	// force usage of iframe in non-IE browsers (handy for blocking applets)
	forceIframe: false,

	// z-index for the blocking overlay
	baseZ: 1000,

	// set these to true to have the message automatically centered
	centerX: true, // <-- only effects element blocking (page block controlled via css above)
	centerY: true,

	// allow body element to be stetched in ie6; this makes blocking look better
	// on "short" pages.  disable if you wish to prevent changes to the body height
	allowBodyStretch: true,

	// enable if you want key and mouse events to be disabled for content that is blocked
	bindEvents: true,

	// be default blockUI will supress tab navigation from leaving blocking content
	// (if bindEvents is true)
	constrainTabKey: true,

	// fadeIn time in millis; set to 0 to disable fadeIn on block
	fadeIn:  0,

	// fadeOut time in millis; set to 0 to disable fadeOut on unblock
	fadeOut:  0,

	// time in millis to wait before auto-unblocking; set to 0 to disable auto-unblock
	timeout: 0,

	// disable if you don't want to show the overlay
	showOverlay: true,

	// if true, focus will be placed in the first available input field when
	// page blocking
	focusInput: true,

	// suppresses the use of overlay styles on FF/Linux (due to performance issues with opacity)
	applyPlatformOpacityRules: true,

	// callback method invoked when unblocking has completed; the callback is
	// passed the element that has been unblocked (which is the window object for page
	// blocks) and the options that were passed to the unblock call:
	//	 onUnblock(element, options)
	onUnblock: null,

	// don't ask; if you really must know: http://groups.google.com/group/jquery-en/browse_thread/thread/36640a8730503595/2f6a79a77a78e493#2f6a79a77a78e493
	quirksmodeOffsetHack: 4
};

// private data and functions follow...

var pageBlock = null;
var pageBlockEls = [];

function install(el, opts) {
	var full = (el == window);
	var msg = opts && opts.message !== undefined ? opts.message : undefined;
	opts = $.extend({}, $.blockUI.defaults, opts || {});
	opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {});
	var css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
	var themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {});
	msg = msg === undefined ? opts.message : msg;

	// remove the current block (if there is one)
	if (full && pageBlock)
		remove(window, {fadeOut:0});

	// if an existing element is being used as the blocking content then we capture
	// its current place in the DOM (and current display style) so we can restore
	// it when we unblock
	if (msg && typeof msg != 'string' && (msg.parentNode || msg.jquery)) {
		var node = msg.jquery ? msg[0] : msg;
		var data = {};
		$(el).data('blockUI.history', data);
		data.el = node;
		data.parent = node.parentNode;
		data.display = node.style.display;
		data.position = node.style.position;
		if (data.parent)
			data.parent.removeChild(node);
	}

	var z = opts.baseZ;

	// blockUI uses 3 layers for blocking, for simplicity they are all used on every platform;
	// layer1 is the iframe layer which is used to supress bleed through of underlying content
	// layer2 is the overlay layer which has opacity and a wait cursor (by default)
	// layer3 is the message content that is displayed while blocking

	var lyr1 = ($.browser.msie || opts.forceIframe) 
		? $('<iframe class="blockUI" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0;filter:alpha(opacity=30);background-color:#645959;" src="'+opts.iframeSrc+'"></iframe>')
		: $('<div class="blockUI" style="display:none"></div>');
	var lyr2 = $('<div class="blockUI blockOverlay" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0;background-color:#645959;opacity:0.3;filter:alpha(opacity=30);cursor:wait;"></div>');
	
	var lyr3;
	if (opts.theme && full) {
		var s = '<div class="blockUI blockMsg blockPage ui-dialog ui-widget ui-corner-all" style="z-index:'+z+';display:none;position:fixed;padding:10px;">' +
					'<div class="ui-widget-header ui-dialog-titlebar blockTitle">'+(opts.title || '&nbsp;')+'</div>' +
					'<div class="ui-widget-content ui-dialog-content"></div>' +
				'</div>';
		lyr3 = $(s);
	}
	else {
		lyr3 = full ? $('<div class="blockUI blockMsg blockPage" style="z-index:'+z+';display:none;position:fixed;padding:10px;"></div>')
					: $('<div class="blockUI blockMsg blockElement" style="z-index:'+z+';display:none;position:absolute"></div>');
	}						   

	// if we have a message, style it
	if (msg) {
		if (opts.theme) {
			lyr3.css(themedCSS);
			lyr3.addClass('ui-widget-content');
		}
		else 
			lyr3.css(css);
	}

	// style the overlay
	if (!opts.applyPlatformOpacityRules || !($.browser.mozilla && /Linux/.test(navigator.platform)))
		lyr2.css(opts.overlayCSS);
	lyr2.css('position', full ? 'fixed' : 'absolute');

	// make iframe layer transparent in IE
	if ($.browser.msie || opts.forceIframe)
		lyr1.css('opacity',0.0);

	$([lyr1[0],lyr2[0],lyr3[0]]).appendTo(full ? 'body' : el);
	
	if (opts.theme && opts.draggable && $.fn.draggable) {
		lyr3.draggable({
			handle: '.ui-dialog-titlebar',
			cancel: 'li'
		});
	}

	// ie7 must use absolute positioning in quirks mode and to account for activex issues (when scrolling)
	var expr = setExpr && (!$.boxModel || $('object,embed', full ? null : el).length > 0);
	if (ie6 || expr) {
		// give body 100% height
		if (full && opts.allowBodyStretch && $.boxModel)
			$('html,body').css('height','100%');

		// fix ie6 issue when blocked element has a border width
		if ((ie6 || !$.boxModel) && !full) {
			var t = sz(el,'borderTopWidth'), l = sz(el,'borderLeftWidth');
			var fixT = t ? '(0 - '+t+')' : 0;
			var fixL = l ? '(0 - '+l+')' : 0;
		}

		// simulate fixed position
		$.each([lyr1,lyr2,lyr3], function(i,o) {
			var s = o[0].style;
			s.position = 'absolute';
			if (i < 2) {
				full ? s.setExpression('height','Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.boxModel?0:'+opts.quirksmodeOffsetHack+') + "px"')
					 : s.setExpression('height','this.parentNode.offsetHeight + "px"');
				full ? s.setExpression('width','jQuery.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"')
					 : s.setExpression('width','this.parentNode.offsetWidth + "px"');
				if (fixL) s.setExpression('left', fixL);
				if (fixT) s.setExpression('top', fixT);
			}
			else if (opts.centerY) {
				if (full) s.setExpression('top','(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"');
				s.marginTop = 0;
			}
			else if (!opts.centerY && full) {
				var top = (opts.css && opts.css.top) ? parseInt(opts.css.top) : 0;
				var expression = '((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + '+top+') + "px"';
				s.setExpression('top',expression);
			}
		});
	}

	// show the message
	if (msg) {
		if (opts.theme)
			lyr3.find('.ui-widget-content').append(msg);
		else
			lyr3.append(msg);
		if (msg.jquery || msg.nodeType)
			$(msg).show();
	}

	if (($.browser.msie || opts.forceIframe) && opts.showOverlay)
		lyr1.show(); // opacity is zero
	if (opts.fadeIn) {
		if (opts.showOverlay)
			lyr2._fadeIn(opts.fadeIn);
		if (msg)
			lyr3.fadeIn(opts.fadeIn);
	}
	else {
		if (opts.showOverlay)
			lyr2.show();
		if (msg)
			lyr3.show();
	}

	// bind key and mouse events
	bind(1, el, opts);

	if (full) {
		pageBlock = lyr3[0];
		pageBlockEls = $(':input:enabled:visible',pageBlock);
		if (opts.focusInput)
			setTimeout(focus, 20);
	}
	else
		center(lyr3[0], opts.centerX, opts.centerY);

	if (opts.timeout) {
		// auto-unblock
		var to = setTimeout(function() {
			full ? $.unblockUI(opts) : $(el).unblock(opts);
		}, opts.timeout);
		$(el).data('blockUI.timeout', to);
	}
};

// remove the block
function remove(el, opts) {
	var full = (el == window);
	var $el = $(el);
	var data = $el.data('blockUI.history');
	var to = $el.data('blockUI.timeout');
	if (to) {
		clearTimeout(to);
		$el.removeData('blockUI.timeout');
	}
	opts = $.extend({}, $.blockUI.defaults, opts || {});
	bind(0, el, opts); // unbind events
	
	var els;
	if (full) // crazy selector to handle odd field errors in ie6/7
		els = $('body').children().filter('.blockUI').add('body > .blockUI');
	else
		els = $('.blockUI', el);

	if (full)
		pageBlock = pageBlockEls = null;

	if (opts.fadeOut) {
		els.fadeOut(opts.fadeOut);
		setTimeout(function() { reset(els,data,opts,el); }, opts.fadeOut);
	}
	else
		reset(els, data, opts, el);
};

// move blocking element back into the DOM where it started
function reset(els,data,opts,el) {
	els.each(function(i,o) {
		// remove via DOM calls so we don't lose event handlers
		if (this.parentNode)
			this.parentNode.removeChild(this);
	});

	if (data && data.el) {
		data.el.style.display = data.display;
		data.el.style.position = data.position;
		if (data.parent)
			data.parent.appendChild(data.el);
		$(el).removeData('blockUI.history');
	}

	if (typeof opts.onUnblock == 'function')
		opts.onUnblock(el,opts);
};

// bind/unbind the handler
function bind(b, el, opts) {
	var full = el == window, $el = $(el);

	// don't bother unbinding if there is nothing to unbind
	if (!b && (full && !pageBlock || !full && !$el.data('blockUI.isBlocked')))
		return;
	if (!full)
		$el.data('blockUI.isBlocked', b);

	// don't bind events when overlay is not in use or if bindEvents is false
	if (!opts.bindEvents || (b && !opts.showOverlay)) 
		return;

	// bind anchors and inputs for mouse and key events
	var events = 'mousedown mouseup keydown keypress';
	b ? $(document).bind(events, opts, handler) : $(document).unbind(events, handler);

// former impl...
//	   var $e = $('a,:input');
//	   b ? $e.bind(events, opts, handler) : $e.unbind(events, handler);
};

// event handler to suppress keyboard/mouse events when blocking
function handler(e) {
	// allow tab navigation (conditionally)
	if (e.keyCode && e.keyCode == 9) {
		if (pageBlock && e.data.constrainTabKey) {
			var els = pageBlockEls;
			var fwd = !e.shiftKey && e.target == els[els.length-1];
			var back = e.shiftKey && e.target == els[0];
			if (fwd || back) {
				setTimeout(function(){focus(back)},10);
				return false;
			}
		}
	}
	// allow events within the message content
	if ($(e.target).parents('div.blockMsg').length > 0)
		return true;

	// allow events for content that is not being blocked
	return $(e.target).parents().children().filter('div.blockUI').length == 0;
};

function focus(back) {
	if (!pageBlockEls)
		return;
	var e = pageBlockEls[back===true ? pageBlockEls.length-1 : 0];
	if (e)
		e.focus();
};

function center(el, x, y) {
	var p = el.parentNode, s = el.style;
	var l = ((p.offsetWidth - el.offsetWidth)/2) - sz(p,'borderLeftWidth');
	var t = ((p.offsetHeight - el.offsetHeight)/2) - sz(p,'borderTopWidth');
	if (x) s.left = l > 0 ? (l+'px') : '0';
	if (y) s.top  = t > 0 ? (t+'px') : '0';
};

function sz(el, p) {
	return parseInt($.css(el,p))||0;
};

})(jQuery);
// JavaScript Document
function closecalendar() {
		document.getElementById('childLayer1').style.visibility='hidden';
	}

function tasklayerminmax() {
		var fname,startpos,getlen;
		fname =	document.getElementById('tasklayerminmax').src;
		startpos = fname.lastIndexOf("/");
		getlen = fname.length-startpos;
		fname = fname.substr(startpos,getlen);
		if (fname == '/minmaxbutt.jpg') {
		//document.getElementById('taskLayer').style.width='1010px';
		document.getElementById('tasklayerminmax').src="../images/minbutt.jpg";
		} else {
		//document.getElementById('taskLayer').style.width='326px';
		document.getElementById('tasklayerminmax').src="../images/minmaxbutt.jpg";
		}
	}

function inboxlayerminmax() {
		var fname,startpos,getlen;
		fname =	document.getElementById('inboxlayerminmax').src;
		startpos = fname.lastIndexOf("/");
		getlen = fname.length-startpos;
		fname = fname.substr(startpos,getlen);
		if (fname == '/minmaxbutt.jpg') {
		//document.getElementById('inboxLayer').style.width='1010px';
		document.getElementById('inboxlayerminmax').src='../images/minbutt.jpg';
		closemain();
		} else {
		//document.getElementById('inboxLayer').style.width='326px';
		document.getElementById('inboxlayerminmax').src="../images/minmaxbutt.jpg";
		openmain();
		}
	}
	
	
function mainlayerminmax() {
		var fname,startpos,getlen;
		fname =	document.getElementById('mainlayerminmax').src;
		startpos = fname.lastIndexOf("/");
		getlen = fname.length-startpos;
		fname = fname.substr(startpos,getlen);
		
		if (fname == '/minmaxbutt.jpg') {
		document.getElementById('mainLayer').style.width='1010px';
		document.getElementById('mainLayer').style.left='8px';
		//document.getElementById('taskLayer').style.visibility='hidden';
		//document.getElementById('inboxLayer').style.visibility='hidden';
		document.getElementById('mainlayerminmax').src="../images/minbutt.jpg";
		} 
		else 
		{
		document.getElementById('mainLayer').style.width='681px';
		document.getElementById('mainLayer').style.left='333px';
		//document.getElementById('taskLayer').style.visibility='visible';
		//document.getElementById('inboxLayer').style.visibility='visible';
		document.getElementById('mainlayerminmax').src="../images/minmaxbutt.jpg";
		}
		
}	


function open_funtionality(page) {
       		document.getElementById('favbuttLayer').style.visibility='visible';
		document.getElementById('mainchildLayer').style.visibility='hidden';
		//document.getElementById('taskLayer').style.visibility='hidden';
		//document.getElementById('inboxLayer').style.visibility='hidden';
		
		
		document.getElementById('maincontentframe').src='';
		if (page == "Registration")
		{
		 document.getElementById('maincontentframe').src='../adt/PatientRegistration.jsp?action=NEW_REGISTRATION';
		 
		}
		if (page == "Appointmentmaster")
		{
		   	document.getElementById('maincontentframe').src='../adt/AppointmentMaster.jsp?action=SHOW_APPOINTMENT';	
	    }
		
		if (page == "Admission")
		{
		 
	    	document.getElementById('maincontentframe').src='../adt/BedFrame.htm';		
		}
		
		if (page == "BedTransfer")
		{
		 
	    	document.getElementById('maincontentframe').src='../adt/BedTransfer.html';		
		}
		
		document.getElementById('maincontentframe').style.visibility='visible';
		document.getElementById('mainLayer').style.width='1010px';
		document.getElementById('mainLayer').style.left='8px';	
		document.getElementById('mainlayerminmax').src="../images/minbutt.jpg";
		
		
		
}
var  patientSelected = function (patient){
			document.getElementById("maincontentframe").style.visibility="hidden";
		}
function patient_browser() {
		document.getElementById('maincontentframe').src='../adt/PatientBrowser.jsp?action=SHOW_PATIENT_BROWSER';
		document.getElementById('favbuttLayer').style.visibility='visible';
		//document.getElementById('mainchildLayer').style.visibility='hidden';
		document.getElementById('maincontentframe').style.visibility='visible';
		//document.getElementById('mainLayer').style.width='681px';
		//document.getElementById('mainLayer').style.left='333px';
		//document.getElementById('taskLayer').style.visibility='visible';
		//document.getElementById('inboxLayer').style.visibility='visible';
		document.getElementById('mainlayerminmax').src="../images/minmaxbutt.jpg";
	}

function bed_reservation() {
		document.getElementById('maincontentframe').src='../adt/BedReservation.jsp';
		document.getElementById('favbuttLayer').style.visibility='visible';
		//document.getElementById('mainchildLayer').style.visibility='hidden';
		document.getElementById('maincontentframe').style.visibility='visible';
		//document.getElementById('mainLayer').style.width='681px';
		//document.getElementById('mainLayer').style.left='333px';
		//document.getElementById('taskLayer').style.visibility='visible';
		//document.getElementById('inboxLayer').style.visibility='visible';
		document.getElementById('mainlayerminmax').src="../images/minmaxbutt.jpg";
}


function calltaskevent() {
	alert("Call the Appropriate task windows with parameter in the task layer");
}


function closemain(){
		document.getElementById('mainLayer').style.visibility='hidden';
		if (document.getElementById('maincontentframe').style.visibility=="visible")
		{
			document.getElementById('maincontentframe').style.visibility='hidden';
		}	
			
}
function 	openmain(){
			document.getElementById('mainLayer').style.visibility='visible';
			document.getElementById('mainchildLayer').style.visibility='visible';
}


function backhome()
{

  
document.getElementById('favbuttLayer').style.visibility='visible';
document.getElementById('mainchildLayer').style.visibility='visible';
document.getElementById('maincontentframe').src='';		
document.getElementById('maincontentframe').style.visibility='hidden';
document.getElementById('mainLayer').style.width='681px';
document.getElementById('mainLayer').style.left='333px';
//document.getElementById('taskLayer').style.visibility='visible';
//document.getElementById('inboxLayer').style.visibility='visible';
document.getElementById('mainlayerminmax').src="../images/minmaxbutt.jpg";
}

function appointments() {
		document.getElementById('favbuttLayer').style.visibility='visible';
		document.getElementById('mainchildLayer').style.visibility='hidden';
		document.getElementById('maincontentframe').src='../adt/AppointmentMaster.jsp';		
		document.getElementById('maincontentframe').style.visibility='visible';
		mainlayerminmax();
}

function getCallerWindow(){
        var callerWindow;
	//take care of window.open
	if(window.opener) {
		callerWindow = window.opener;
		//alert("inside opener for popup" + callerWindow);
	} 
	//take care of showModalDialog with parent widnow as the dialogArgument
	else if(window.dialogArguments) {
		callerWindow = window.dialogArguments;
		//alert("inside opener for modal" + callerWindow);
	}
	//take care of iframe
	else if (window.parent) {
		callerWindow = window.parent;
		//alert("inside opener for iframe" + callerWindow);
	}
	return callerWindow;
 } 



var ____dialogName = "MbwCheck"; // for using hardcoded window name when opening as readonly popup

$(document).ready(function() {
	//alert('document.ready called');
	if(typeof __mainWinName != "undefined" && typeof __webContextPath != "undefined") {
		checkIfAuthorizedWindow(__mainWinName, __webContextPath);
	}
});


//Code to disable right-click on all anchors as part of Multiple Browser Window solution
//when upgrading jquery to 1.7 or above, change 'on' will work., since 'on' will additionally take care of
//anchors that are created after document is loaded also (through ajax dom manipulation, for example).


$(window).focus(function(e) {
	

	
    var win =  getCookie("windowname");// 
	
	//alert("__mainWinName:"+__mainWinName+" win:"+win);
	
	if(  ( typeof win != 'undefined' && typeof __mainWinName != 'undefined' )  && (__mainWinName != win) ) {
		
		//alert("Login attempt from another tab/window has been detected. Please close the tab/window and log in again.");
		top.location.href = __webContextPath +"/ErrorDisplay.jsp";
	    
	}
    
});


function getCookie(c_name) {
	var i, x, y, ARRcookies = document.cookie.split(";");
	for (i = 0; i < ARRcookies.length; i++) {
		x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
		y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
		x = x.replace(/^\s+|\s+$/g, "");
		if (x == c_name) {
			return unescape(y);
		}
	}
}



$(window).load(function() {
	   // put all your jQuery goodness in here.
	//alert("jquery window.load called");
if (jQuery.isFunction(jQuery.fn.on)) {
  $("a,img,input:image").on("contextmenu", function(e) {
	  var thisObj = $(this);
	  var contextAttr = thisObj.context;
	  if(contextAttr.id.indexOf("capImage_") > -1){
			return true;
	  }else{		  
		  openlinkAsNewTab(thisObj);
		  return false;
	  }
  });

}else if (jQuery.isFunction(jQuery.fn.live)){
  $("a,img,input:image").live("contextmenu", function(e) {
	  var thisObj = $(this);
	  var contextAttr = thisObj.context;
	  if(contextAttr.id.indexOf("capImage_") > -1){
			return true;
	  }else{		  
		  openlinkAsNewTab(thisObj);
		  return false;
	  }
});

}else {
// call bind method
  $("a,img,input:image").bind("contextmenu", function(e) {
	  var thisObj = $(this);
	  var contextAttr = thisObj.context;
	  if(contextAttr.id.indexOf("capImage_") > -1){
		 return true;
	  }else{
		 openlinkAsNewTab(thisObj);
	     return false;
	  }
  });
 }

//blocked ctrl+ click to open new window / tab
$("a,img,input:image").click(function(e){
	if (e.ctrlKey){
		return false;
	}else if (e.shiftKey) { // If Shift key was selected
		return false;		
	}
});

//blocked enter key press for anchor
$("a").keydown(function(e){	
	var thisObj = $(this);
	var ahrefAttr = thisObj.attr('href');
	if((typeof(ahrefAttr)!='undefined' && (ahrefAttr != null || ahrefAttr != "") ) && (e.which === 13 || e.keyCode == 13)){		
			e.preventDefault();		
	}
});



});



//This function is called when jquery is using CONFLICT mode
function openlinkAsNewTab(thisObj){
	if(thisObj.find("a")){
		var ahrefAttr = thisObj.attr('href');
		if(typeof(ahrefAttr)!='undefined' && ahrefAttr.indexOf("ClinicalFormServlet") >0){
			 if (confirm('Do you want to open this as readonly mode ?\n         If yes press OK or Cancel')) {
				    ____dialogName = "MbwCheck_Clinical_Forms"+Math.random();

				    var targetAttribute = thisObj.attr('target');
				    console.log(targetAttribute);
					thisObj.attr( 'target','_blank' );
			        window.open(ahrefAttr,____dialogName);
			        thisObj.attr( 'target',targetAttribute);
			} else {
				return false;
			}
			 
		}
	}
}
// Added by Dhania 6th Aug 2015 for moving columns  
jQuery.moveBeforeColumn = function (table, from, to) {
	var rows = jQuery('tr', table);
	var cols;
	rows.each(function() {
		cols = jQuery(this).children('tr.dataTableHeader, td');
		cols.eq(from).detach().insertBefore(cols.eq(to));
	});
}

//Added by Dhania 6th Aug 2015 for moving columns 
jQuery.moveAfterColumn = function (table, from, to) {
	var rows = jQuery('tr', table);
	var cols;
	rows.each(function() {
		cols = jQuery(this).children('tr.dataTableHeader, td');
		cols.eq(from).detach().insertAfter(cols.eq(to));
	});
}/*
 * jQuery UI 1.7.1
 *
 * Copyright (c) 2009 AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * http://docs.jquery.com/UI
 */
;jQuery.ui || (function($) {

var _remove = $.fn.remove,
	isFF2 = $.browser.mozilla && (parseFloat($.browser.version) < 1.9);

//Helper functions and ui object
$.ui = {
	version: "1.7.1",

	// $.ui.plugin is deprecated.  Use the proxy pattern instead.
	plugin: {
		add: function(module, option, set) {
			var proto = $.ui[module].prototype;
			for(var i in set) {
				proto.plugins[i] = proto.plugins[i] || [];
				proto.plugins[i].push([option, set[i]]);
			}
		},
		call: function(instance, name, args) {
			var set = instance.plugins[name];
			if(!set || !instance.element[0].parentNode) { return; }

			for (var i = 0; i < set.length; i++) {
				if (instance.options[set[i][0]]) {
					set[i][1].apply(instance.element, args);
				}
			}
		}
	},

	contains: function(a, b) {
		return document.compareDocumentPosition
			? a.compareDocumentPosition(b) & 16
			: a !== b && a.contains(b);
	},

	hasScroll: function(el, a) {

		//If overflow is hidden, the element might have extra content, but the user wants to hide it
		if ($(el).css('overflow') == 'hidden') { return false; }

		var scroll = (a && a == 'left') ? 'scrollLeft' : 'scrollTop',
			has = false;

		if (el[scroll] > 0) { return true; }

		// TODO: determine which cases actually cause this to happen
		// if the element doesn't have the scroll set, see if it's possible to
		// set the scroll
		el[scroll] = 1;
		has = (el[scroll] > 0);
		el[scroll] = 0;
		return has;
	},

	isOverAxis: function(x, reference, size) {
		//Determines when x coordinate is over "b" element axis
		return (x > reference) && (x < (reference + size));
	},

	isOver: function(y, x, top, left, height, width) {
		//Determines when x, y coordinates is over "b" element
		return $.ui.isOverAxis(y, top, height) && $.ui.isOverAxis(x, left, width);
	},

	keyCode: {
		BACKSPACE: 8,
		CAPS_LOCK: 20,
		COMMA: 188,
		CONTROL: 17,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		INSERT: 45,
		LEFT: 37,
		NUMPAD_ADD: 107,
		NUMPAD_DECIMAL: 110,
		NUMPAD_DIVIDE: 111,
		NUMPAD_ENTER: 108,
		NUMPAD_MULTIPLY: 106,
		NUMPAD_SUBTRACT: 109,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SHIFT: 16,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
};

// WAI-ARIA normalization
if (isFF2) {
	var attr = $.attr,
		removeAttr = $.fn.removeAttr,
		ariaNS = "http://www.w3.org/2005/07/aaa",
		ariaState = /^aria-/,
		ariaRole = /^wairole:/;

	$.attr = function(elem, name, value) {
		var set = value !== undefined;

		return (name == 'role'
			? (set
				? attr.call(this, elem, name, "wairole:" + value)
				: (attr.apply(this, arguments) || "").replace(ariaRole, ""))
			: (ariaState.test(name)
				? (set
					? elem.setAttributeNS(ariaNS,
						name.replace(ariaState, "aaa:"), value)
					: attr.call(this, elem, name.replace(ariaState, "aaa:")))
				: attr.apply(this, arguments)));
	};

	$.fn.removeAttr = function(name) {
		return (ariaState.test(name)
			? this.each(function() {
				this.removeAttributeNS(ariaNS, name.replace(ariaState, ""));
			}) : removeAttr.call(this, name));
	};
}

//jQuery plugins
$.fn.extend({
	remove: function() {
		// Safari has a native remove event which actually removes DOM elements,
		// so we have to use triggerHandler instead of trigger (#3037).
		$("*", this).add(this).each(function() {
			$(this).triggerHandler("remove");
		});
		return _remove.apply(this, arguments );
	},

	enableSelection: function() {
		return this
			.attr('unselectable', 'off')
			.css('MozUserSelect', '')
			.unbind('selectstart.ui');
	},

	disableSelection: function() {
		return this
			.attr('unselectable', 'on')
			.css('MozUserSelect', 'none')
			.bind('selectstart.ui', function() { return false; });
	},

	scrollParent: function() {
		var scrollParent;
		if(($.browser.msie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) {
			scrollParent = this.parents().filter(function() {
				return (/(relative|absolute|fixed)/).test($.curCSS(this,'position',1)) && (/(auto|scroll)/).test($.curCSS(this,'overflow',1)+$.curCSS(this,'overflow-y',1)+$.curCSS(this,'overflow-x',1));
			}).eq(0);
		} else {
			scrollParent = this.parents().filter(function() {
				return (/(auto|scroll)/).test($.curCSS(this,'overflow',1)+$.curCSS(this,'overflow-y',1)+$.curCSS(this,'overflow-x',1));
			}).eq(0);
		}

		return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
	}
});


//Additional selectors
$.extend($.expr[':'], {
	data: function(elem, i, match) {
		return !!$.data(elem, match[3]);
	},

	focusable: function(element) {
		var nodeName = element.nodeName.toLowerCase(),
			tabIndex = $.attr(element, 'tabindex');
		return (/input|select|textarea|button|object/.test(nodeName)
			? !element.disabled
			: 'a' == nodeName || 'area' == nodeName
				? element.href || !isNaN(tabIndex)
				: !isNaN(tabIndex))
			// the element and all of its ancestors must be visible
			// the browser may report that the area is hidden
			&& !$(element)['area' == nodeName ? 'parents' : 'closest'](':hidden').length;
	},

	tabbable: function(element) {
		var tabIndex = $.attr(element, 'tabindex');
		return (isNaN(tabIndex) || tabIndex >= 0) && $(element).is(':focusable');
	}
});


// $.widget is a factory to create jQuery plugins
// taking some boilerplate code out of the plugin code
function getter(namespace, plugin, method, args) {
	function getMethods(type) {
		var methods = $[namespace][plugin][type] || [];
		return (typeof methods == 'string' ? methods.split(/,?\s+/) : methods);
	}

	var methods = getMethods('getter');
	if (args.length == 1 && typeof args[0] == 'string') {
		methods = methods.concat(getMethods('getterSetter'));
	}
	return ($.inArray(method, methods) != -1);
}

$.widget = function(name, prototype) {
	var namespace = name.split(".")[0];
	name = name.split(".")[1];

	// create plugin method
	$.fn[name] = function(options) {
		var isMethodCall = (typeof options == 'string'),
			args = Array.prototype.slice.call(arguments, 1);

		// prevent calls to internal methods
		if (isMethodCall && options.substring(0, 1) == '_') {
			return this;
		}

		// handle getter methods
		if (isMethodCall && getter(namespace, name, options, args)) {
			var instance = $.data(this[0], name);
			return (instance ? instance[options].apply(instance, args)
				: undefined);
		}

		// handle initialization and non-getter methods
		return this.each(function() {
			var instance = $.data(this, name);

			// constructor
			(!instance && !isMethodCall &&
				$.data(this, name, new $[namespace][name](this, options))._init());

			// method call
			(instance && isMethodCall && $.isFunction(instance[options]) &&
				instance[options].apply(instance, args));
		});
	};

	// create widget constructor
	$[namespace] = $[namespace] || {};
	$[namespace][name] = function(element, options) {
		var self = this;

		this.namespace = namespace;
		this.widgetName = name;
		this.widgetEventPrefix = $[namespace][name].eventPrefix || name;
		this.widgetBaseClass = namespace + '-' + name;

		this.options = $.extend({},
			$.widget.defaults,
			$[namespace][name].defaults,
			$.metadata && $.metadata.get(element)[name],
			options);

		this.element = $(element)
			.bind('setData.' + name, function(event, key, value) {
				if (event.target == element) {
					return self._setData(key, value);
				}
			})
			.bind('getData.' + name, function(event, key) {
				if (event.target == element) {
					return self._getData(key);
				}
			})
			.bind('remove', function() {
				return self.destroy();
			});
	};

	// add widget prototype
	$[namespace][name].prototype = $.extend({}, $.widget.prototype, prototype);

	// TODO: merge getter and getterSetter properties from widget prototype
	// and plugin prototype
	$[namespace][name].getterSetter = 'option';
};

$.widget.prototype = {
	_init: function() {},
	destroy: function() {
		this.element.removeData(this.widgetName)
			.removeClass(this.widgetBaseClass + '-disabled' + ' ' + this.namespace + '-state-disabled')
			.removeAttr('aria-disabled');
	},

	option: function(key, value) {
		var options = key,
			self = this;

		if (typeof key == "string") {
			if (value === undefined) {
				return this._getData(key);
			}
			options = {};
			options[key] = value;
		}

		$.each(options, function(key, value) {
			self._setData(key, value);
		});
	},
	_getData: function(key) {
		return this.options[key];
	},
	_setData: function(key, value) {
		this.options[key] = value;

		if (key == 'disabled') {
			this.element
				[value ? 'addClass' : 'removeClass'](
					this.widgetBaseClass + '-disabled' + ' ' +
					this.namespace + '-state-disabled')
				.attr("aria-disabled", value);
		}
	},

	enable: function() {
		this._setData('disabled', false);
	},
	disable: function() {
		this._setData('disabled', true);
	},

	_trigger: function(type, event, data) {
		var callback = this.options[type],
			eventName = (type == this.widgetEventPrefix
				? type : this.widgetEventPrefix + type);

		event = $.Event(event);
		event.type = eventName;

		// copy original event properties over to the new event
		// this would happen if we could call $.event.fix instead of $.Event
		// but we don't have a way to force an event to be fixed multiple times
		if (event.originalEvent) {
			for (var i = $.event.props.length, prop; i;) {
				prop = $.event.props[--i];
				event[prop] = event.originalEvent[prop];
			}
		}

		this.element.trigger(event, data);

		return !($.isFunction(callback) && callback.call(this.element[0], event, data) === false
			|| event.isDefaultPrevented());
	}
};

$.widget.defaults = {
	disabled: false
};


/** Mouse Interaction Plugin **/

$.ui.mouse = {
	_mouseInit: function() {
		var self = this;

		this.element
			.bind('mousedown.'+this.widgetName, function(event) {
				return self._mouseDown(event);
			})
			.bind('click.'+this.widgetName, function(event) {
				if(self._preventClickEvent) {
					self._preventClickEvent = false;
					event.stopImmediatePropagation();
					return false;
				}
			});

		// Prevent text selection in IE
		if ($.browser.msie) {
			this._mouseUnselectable = this.element.attr('unselectable');
			this.element.attr('unselectable', 'on');
		}

		this.started = false;
	},

	// TODO: make sure destroying one instance of mouse doesn't mess with
	// other instances of mouse
	_mouseDestroy: function() {
		this.element.unbind('.'+this.widgetName);

		// Restore text selection in IE
		($.browser.msie
			&& this.element.attr('unselectable', this._mouseUnselectable));
	},

	_mouseDown: function(event) {
		// don't let more than one widget handle mouseStart
		// TODO: figure out why we have to use originalEvent
		event.originalEvent = event.originalEvent || {};
		if (event.originalEvent.mouseHandled) { return; }

		// we may have missed mouseup (out of window)
		(this._mouseStarted && this._mouseUp(event));

		this._mouseDownEvent = event;

		var self = this,
			btnIsLeft = (event.which == 1),
			elIsCancel = (typeof this.options.cancel == "string" ? $(event.target).parents().add(event.target).filter(this.options.cancel).length : false);
		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
			return true;
		}

		this.mouseDelayMet = !this.options.delay;
		if (!this.mouseDelayMet) {
			this._mouseDelayTimer = setTimeout(function() {
				self.mouseDelayMet = true;
			}, this.options.delay);
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted = (this._mouseStart(event) !== false);
			if (!this._mouseStarted) {
				event.preventDefault();
				return true;
			}
		}

		// these delegates are required to keep context
		this._mouseMoveDelegate = function(event) {
			return self._mouseMove(event);
		};
		this._mouseUpDelegate = function(event) {
			return self._mouseUp(event);
		};
		$(document)
			.bind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.bind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		// preventDefault() is used to prevent the selection of text here -
		// however, in Safari, this causes select boxes not to be selectable
		// anymore, so this fix is needed
		($.browser.safari || event.preventDefault());

		event.originalEvent.mouseHandled = true;
		return true;
	},

	_mouseMove: function(event) {
		// IE mouseup check - mouseup happened when mouse was out of window
		if ($.browser.msie && !event.button) {
			return this._mouseUp(event);
		}

		if (this._mouseStarted) {
			this._mouseDrag(event);
			return event.preventDefault();
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted =
				(this._mouseStart(this._mouseDownEvent, event) !== false);
			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
		}

		return !this._mouseStarted;
	},

	_mouseUp: function(event) {
		$(document)
			.unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		if (this._mouseStarted) {
			this._mouseStarted = false;
			this._preventClickEvent = (event.target == this._mouseDownEvent.target);
			this._mouseStop(event);
		}

		return false;
	},

	_mouseDistanceMet: function(event) {
		return (Math.max(
				Math.abs(this._mouseDownEvent.pageX - event.pageX),
				Math.abs(this._mouseDownEvent.pageY - event.pageY)
			) >= this.options.distance
		);
	},

	_mouseDelayMet: function(event) {
		return this.mouseDelayMet;
	},

	// These are placeholder methods, to be overriden by extending plugin
	_mouseStart: function(event) {},
	_mouseDrag: function(event) {},
	_mouseStop: function(event) {},
	_mouseCapture: function(event) { return true; }
};

$.ui.mouse.defaults = {
	cancel: null,
	distance: 1,
	delay: 0
};

})(jQuery);
/*
 * jQuery UI Draggable 1.7.1
 *
 * Copyright (c) 2009 AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	ui.core.js
 */
(function($) {

$.widget("ui.draggable", $.extend({}, $.ui.mouse, {

	_init: function() {

		if (this.options.helper == 'original' && !(/^(?:r|a|f)/).test(this.element.css("position")))
			this.element[0].style.position = 'relative';

		(this.options.addClasses && this.element.addClass("ui-draggable"));
		(this.options.disabled && this.element.addClass("ui-draggable-disabled"));

		this._mouseInit();

	},

	destroy: function() {
		if(!this.element.data('draggable')) return;
		this.element
			.removeData("draggable")
			.unbind(".draggable")
			.removeClass("ui-draggable"
				+ " ui-draggable-dragging"
				+ " ui-draggable-disabled");
		this._mouseDestroy();
	},

	_mouseCapture: function(event) {

		var o = this.options;

		if (this.helper || o.disabled || $(event.target).is('.ui-resizable-handle'))
			return false;

		//Quit if we're not on a valid handle
		this.handle = this._getHandle(event);
		if (!this.handle)
			return false;

		return true;

	},

	_mouseStart: function(event) {

		var o = this.options;

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		//Cache the helper size
		this._cacheHelperProportions();

		//If ddmanager is used for droppables, set the global draggable
		if($.ui.ddmanager)
			$.ui.ddmanager.current = this;

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Store the helper's css position
		this.cssPosition = this.helper.css("position");
		this.scrollParent = this.helper.scrollParent();

		//The element's absolute position on the page minus margins
		this.offset = this.element.offset();
		this.offset = {
			top: this.offset.top - this.margins.top,
			left: this.offset.left - this.margins.left
		};

		$.extend(this.offset, {
			click: { //Where the click happened, relative to the element
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top
			},
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
		});

		//Generate the original position
		this.originalPosition = this._generatePosition(event);
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if 'cursorAt' is supplied
		if(o.cursorAt)
			this._adjustOffsetFromHelper(o.cursorAt);

		//Set a containment if given in the options
		if(o.containment)
			this._setContainment();

		//Call plugins and callbacks
		this._trigger("start", event);

		//Recache the helper size
		this._cacheHelperProportions();

		//Prepare the droppable offsets
		if ($.ui.ddmanager && !o.dropBehaviour)
			$.ui.ddmanager.prepareOffsets(this, event);

		this.helper.addClass("ui-draggable-dragging");
		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position
		return true;
	},

	_mouseDrag: function(event, noPropagation) {

		//Compute the helpers position
		this.position = this._generatePosition(event);
		this.positionAbs = this._convertPositionTo("absolute");

		//Call plugins and callbacks and use the resulting position if something is returned
		if (!noPropagation) {
			var ui = this._uiHash();
			this._trigger('drag', event, ui);
			this.position = ui.position;
		}

		if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left+'px';
		if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top+'px';
		if($.ui.ddmanager) $.ui.ddmanager.drag(this, event);

		return false;
	},

	_mouseStop: function(event) {

		//If we are using droppables, inform the manager about the drop
		var dropped = false;
		if ($.ui.ddmanager && !this.options.dropBehaviour)
			dropped = $.ui.ddmanager.drop(this, event);

		//if a drop comes from outside (a sortable)
		if(this.dropped) {
			dropped = this.dropped;
			this.dropped = false;
		}

		if((this.options.revert == "invalid" && !dropped) || (this.options.revert == "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
			var self = this;
			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
				self._trigger("stop", event);
				self._clear();
			});
		} else {
			this._trigger("stop", event);
			this._clear();
		}

		return false;
	},

	_getHandle: function(event) {

		var handle = !this.options.handle || !$(this.options.handle, this.element).length ? true : false;
		$(this.options.handle, this.element)
			.find("*")
			.andSelf()
			.each(function() {
				if(this == event.target) handle = true;
			});

		return handle;

	},

	_createHelper: function(event) {

		var o = this.options;
		var helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper == 'clone' ? this.element.clone() : this.element);

		if(!helper.parents('body').length)
			helper.appendTo((o.appendTo == 'parent' ? this.element[0].parentNode : o.appendTo));

		if(helper[0] != this.element[0] && !(/(fixed|absolute)/).test(helper.css("position")))
			helper.css("position", "absolute");

		return helper;

	},

	_adjustOffsetFromHelper: function(obj) {
		if(obj.left != undefined) this.offset.click.left = obj.left + this.margins.left;
		if(obj.right != undefined) this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		if(obj.top != undefined) this.offset.click.top = obj.top + this.margins.top;
		if(obj.bottom != undefined) this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
	},

	_getParentOffset: function() {

		//Get the offsetParent and cache its position
		this.offsetParent = this.helper.offsetParent();
		var po = this.offsetParent.offset();

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if(this.cssPosition == 'absolute' && this.scrollParent[0] != document && $.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		if((this.offsetParent[0] == document.body) //This needs to be actually done for all browsers, since pageX/pageY includes this information
		|| (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == 'html' && $.browser.msie)) //Ugly IE fix
			po = { top: 0, left: 0 };

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
		};

	},

	_getRelativeOffset: function() {

		if(this.cssPosition == "relative") {
			var p = this.element.position();
			return {
				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
			};
		} else {
			return { top: 0, left: 0 };
		}

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.element.css("marginLeft"),10) || 0),
			top: (parseInt(this.element.css("marginTop"),10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var o = this.options;
		if(o.containment == 'parent') o.containment = this.helper[0].parentNode;
		if(o.containment == 'document' || o.containment == 'window') this.containment = [
			0 - this.offset.relative.left - this.offset.parent.left,
			0 - this.offset.relative.top - this.offset.parent.top,
			$(o.containment == 'document' ? document : window).width() - this.helperProportions.width - this.margins.left,
			($(o.containment == 'document' ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
		];

		if(!(/^(document|window|parent)$/).test(o.containment) && o.containment.constructor != Array) {
			var ce = $(o.containment)[0]; if(!ce) return;
			var co = $(o.containment).offset();
			var over = ($(ce).css("overflow") != 'hidden');

			this.containment = [
				co.left + (parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0) - this.margins.left,
				co.top + (parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0) - this.margins.top,
				co.left+(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left,
				co.top+(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top
			];
		} else if(o.containment.constructor == Array) {
			this.containment = o.containment;
		}

	},

	_convertPositionTo: function(d, pos) {

		if(!pos) pos = this.position;
		var mod = d == "absolute" ? 1 : -1;
		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		return {
			top: (
				pos.top																	// The absolute mouse position
				+ this.offset.relative.top * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.top * mod											// The offsetParent's offset without borders (offset + border)
				- ($.browser.safari && this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)
			),
			left: (
				pos.left																// The absolute mouse position
				+ this.offset.relative.left * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.left * mod											// The offsetParent's offset without borders (offset + border)
				- ($.browser.safari && this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)
			)
		};

	},

	_generatePosition: function(event) {

		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		// This is another very weird special case that only happens for relative elements:
		// 1. If the css position is relative
		// 2. and the scroll parent is the document or similar to the offset parent
		// we have to refresh the relative offset during the scroll so there are no jumps
		if(this.cssPosition == 'relative' && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
			this.offset.relative = this._getRelativeOffset();
		}

		var pageX = event.pageX;
		var pageY = event.pageY;

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		if(this.originalPosition) { //If we are not dragging yet, we won't check for options

			if(this.containment) {
				if(event.pageX - this.offset.click.left < this.containment[0]) pageX = this.containment[0] + this.offset.click.left;
				if(event.pageY - this.offset.click.top < this.containment[1]) pageY = this.containment[1] + this.offset.click.top;
				if(event.pageX - this.offset.click.left > this.containment[2]) pageX = this.containment[2] + this.offset.click.left;
				if(event.pageY - this.offset.click.top > this.containment[3]) pageY = this.containment[3] + this.offset.click.top;
			}

			if(o.grid) {
				var top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
				pageY = this.containment ? (!(top - this.offset.click.top < this.containment[1] || top - this.offset.click.top > this.containment[3]) ? top : (!(top - this.offset.click.top < this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				var left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
				pageX = this.containment ? (!(left - this.offset.click.left < this.containment[0] || left - this.offset.click.left > this.containment[2]) ? left : (!(left - this.offset.click.left < this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

		}

		return {
			top: (
				pageY																// The absolute mouse position
				- this.offset.click.top													// Click offset (relative to the element)
				- this.offset.relative.top												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.top												// The offsetParent's offset without borders (offset + border)
				+ ($.browser.safari && this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))
			),
			left: (
				pageX																// The absolute mouse position
				- this.offset.click.left												// Click offset (relative to the element)
				- this.offset.relative.left												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.left												// The offsetParent's offset without borders (offset + border)
				+ ($.browser.safari && this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))
			)
		};

	},

	_clear: function() {
		this.helper.removeClass("ui-draggable-dragging");
		if(this.helper[0] != this.element[0] && !this.cancelHelperRemoval) this.helper.remove();
		//if($.ui.ddmanager) $.ui.ddmanager.current = null;
		this.helper = null;
		this.cancelHelperRemoval = false;
	},

	// From now on bulk stuff - mainly helpers

	_trigger: function(type, event, ui) {
		ui = ui || this._uiHash();
		$.ui.plugin.call(this, type, [event, ui]);
		if(type == "drag") this.positionAbs = this._convertPositionTo("absolute"); //The absolute position has to be recalculated after plugins
		return $.widget.prototype._trigger.call(this, type, event, ui);
	},

	plugins: {},

	_uiHash: function(event) {
		return {
			helper: this.helper,
			position: this.position,
			absolutePosition: this.positionAbs, //deprecated
			offset: this.positionAbs
		};
	}

}));

$.extend($.ui.draggable, {
	version: "1.7.1",
	eventPrefix: "drag",
	defaults: {
		addClasses: true,
		appendTo: "parent",
		axis: false,
		cancel: ":input,option",
		connectToSortable: false,
		containment: false,
		cursor: "auto",
		cursorAt: false,
		delay: 0,
		distance: 1,
		grid: false,
		handle: false,
		helper: "original",
		iframeFix: false,
		opacity: false,
		refreshPositions: false,
		revert: false,
		revertDuration: 500,
		scope: "default",
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		snap: false,
		snapMode: "both",
		snapTolerance: 20,
		stack: false,
		zIndex: false
	}
});

$.ui.plugin.add("draggable", "connectToSortable", {
	start: function(event, ui) {

		var inst = $(this).data("draggable"), o = inst.options,
			uiSortable = $.extend({}, ui, { item: inst.element });
		inst.sortables = [];
		$(o.connectToSortable).each(function() {
			var sortable = $.data(this, 'sortable');
			if (sortable && !sortable.options.disabled) {
				inst.sortables.push({
					instance: sortable,
					shouldRevert: sortable.options.revert
				});
				sortable._refreshItems();	//Do a one-time refresh at start to refresh the containerCache
				sortable._trigger("activate", event, uiSortable);
			}
		});

	},
	stop: function(event, ui) {

		//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
		var inst = $(this).data("draggable"),
			uiSortable = $.extend({}, ui, { item: inst.element });

		$.each(inst.sortables, function() {
			if(this.instance.isOver) {

				this.instance.isOver = 0;

				inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
				this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

				//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: 'valid/invalid'
				if(this.shouldRevert) this.instance.options.revert = true;

				//Trigger the stop of the sortable
				this.instance._mouseStop(event);

				this.instance.options.helper = this.instance.options._helper;

				//If the helper has been the original item, restore properties in the sortable
				if(inst.options.helper == 'original')
					this.instance.currentItem.css({ top: 'auto', left: 'auto' });

			} else {
				this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
				this.instance._trigger("deactivate", event, uiSortable);
			}

		});

	},
	drag: function(event, ui) {

		var inst = $(this).data("draggable"), self = this;

		var checkPos = function(o) {
			var dyClick = this.offset.click.top, dxClick = this.offset.click.left;
			var helperTop = this.positionAbs.top, helperLeft = this.positionAbs.left;
			var itemHeight = o.height, itemWidth = o.width;
			var itemTop = o.top, itemLeft = o.left;

			return $.ui.isOver(helperTop + dyClick, helperLeft + dxClick, itemTop, itemLeft, itemHeight, itemWidth);
		};

		$.each(inst.sortables, function(i) {
			
			//Copy over some variables to allow calling the sortable's native _intersectsWith
			this.instance.positionAbs = inst.positionAbs;
			this.instance.helperProportions = inst.helperProportions;
			this.instance.offset.click = inst.offset.click;
			
			if(this.instance._intersectsWith(this.instance.containerCache)) {

				//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
				if(!this.instance.isOver) {

					this.instance.isOver = 1;
					//Now we fake the start of dragging for the sortable instance,
					//by cloning the list group item, appending it to the sortable and using it as inst.currentItem
					//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
					this.instance.currentItem = $(self).clone().appendTo(this.instance.element).data("sortable-item", true);
					this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
					this.instance.options.helper = function() { return ui.helper[0]; };

					event.target = this.instance.currentItem[0];
					this.instance._mouseCapture(event, true);
					this.instance._mouseStart(event, true, true);

					//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
					this.instance.offset.click.top = inst.offset.click.top;
					this.instance.offset.click.left = inst.offset.click.left;
					this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
					this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

					inst._trigger("toSortable", event);
					inst.dropped = this.instance.element; //draggable revert needs that
					//hack so receive/update callbacks work (mostly)
					inst.currentItem = inst.element;
					this.instance.fromOutside = inst;

				}

				//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
				if(this.instance.currentItem) this.instance._mouseDrag(event);

			} else {

				//If it doesn't intersect with the sortable, and it intersected before,
				//we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
				if(this.instance.isOver) {

					this.instance.isOver = 0;
					this.instance.cancelHelperRemoval = true;
					
					//Prevent reverting on this forced stop
					this.instance.options.revert = false;
					
					// The out event needs to be triggered independently
					this.instance._trigger('out', event, this.instance._uiHash(this.instance));
					
					this.instance._mouseStop(event, true);
					this.instance.options.helper = this.instance.options._helper;

					//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
					this.instance.currentItem.remove();
					if(this.instance.placeholder) this.instance.placeholder.remove();

					inst._trigger("fromSortable", event);
					inst.dropped = false; //draggable revert needs that
				}

			};

		});

	}
});

$.ui.plugin.add("draggable", "cursor", {
	start: function(event, ui) {
		var t = $('body'), o = $(this).data('draggable').options;
		if (t.css("cursor")) o._cursor = t.css("cursor");
		t.css("cursor", o.cursor);
	},
	stop: function(event, ui) {
		var o = $(this).data('draggable').options;
		if (o._cursor) $('body').css("cursor", o._cursor);
	}
});

$.ui.plugin.add("draggable", "iframeFix", {
	start: function(event, ui) {
		var o = $(this).data('draggable').options;
		$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {
			$('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>')
			.css({
				width: this.offsetWidth+"px", height: this.offsetHeight+"px",
				position: "absolute", opacity: "0.001", zIndex: 1000
			})
			.css($(this).offset())
			.appendTo("body");
		});
	},
	stop: function(event, ui) {
		$("div.ui-draggable-iframeFix").each(function() { this.parentNode.removeChild(this); }); //Remove frame helpers
	}
});

$.ui.plugin.add("draggable", "opacity", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data('draggable').options;
		if(t.css("opacity")) o._opacity = t.css("opacity");
		t.css('opacity', o.opacity);
	},
	stop: function(event, ui) {
		var o = $(this).data('draggable').options;
		if(o._opacity) $(ui.helper).css('opacity', o._opacity);
	}
});

$.ui.plugin.add("draggable", "scroll", {
	start: function(event, ui) {
		var i = $(this).data("draggable");
		if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') i.overflowOffset = i.scrollParent.offset();
	},
	drag: function(event, ui) {

		var i = $(this).data("draggable"), o = i.options, scrolled = false;

		if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') {

			if(!o.axis || o.axis != 'x') {
				if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity)
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
				else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity)
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
			}

			if(!o.axis || o.axis != 'y') {
				if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity)
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
				else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity)
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
			}

		} else {

			if(!o.axis || o.axis != 'x') {
				if(event.pageY - $(document).scrollTop() < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
				else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
			}

			if(!o.axis || o.axis != 'y') {
				if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
				else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
			}

		}

		if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)
			$.ui.ddmanager.prepareOffsets(i, event);

	}
});

$.ui.plugin.add("draggable", "snap", {
	start: function(event, ui) {

		var i = $(this).data("draggable"), o = i.options;
		i.snapElements = [];

		$(o.snap.constructor != String ? ( o.snap.items || ':data(draggable)' ) : o.snap).each(function() {
			var $t = $(this); var $o = $t.offset();
			if(this != i.element[0]) i.snapElements.push({
				item: this,
				width: $t.outerWidth(), height: $t.outerHeight(),
				top: $o.top, left: $o.left
			});
		});

	},
	drag: function(event, ui) {

		var inst = $(this).data("draggable"), o = inst.options;
		var d = o.snapTolerance;

		var x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

		for (var i = inst.snapElements.length - 1; i >= 0; i--){

			var l = inst.snapElements[i].left, r = l + inst.snapElements[i].width,
				t = inst.snapElements[i].top, b = t + inst.snapElements[i].height;

			//Yes, I know, this is insane ;)
			if(!((l-d < x1 && x1 < r+d && t-d < y1 && y1 < b+d) || (l-d < x1 && x1 < r+d && t-d < y2 && y2 < b+d) || (l-d < x2 && x2 < r+d && t-d < y1 && y1 < b+d) || (l-d < x2 && x2 < r+d && t-d < y2 && y2 < b+d))) {
				if(inst.snapElements[i].snapping) (inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
				inst.snapElements[i].snapping = false;
				continue;
			}

			if(o.snapMode != 'inner') {
				var ts = Math.abs(t - y2) <= d;
				var bs = Math.abs(b - y1) <= d;
				var ls = Math.abs(l - x2) <= d;
				var rs = Math.abs(r - x1) <= d;
				if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
				if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
				if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
			}

			var first = (ts || bs || ls || rs);

			if(o.snapMode != 'outer') {
				var ts = Math.abs(t - y1) <= d;
				var bs = Math.abs(b - y2) <= d;
				var ls = Math.abs(l - x1) <= d;
				var rs = Math.abs(r - x2) <= d;
				if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
				if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
				if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
			}

			if(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first))
				(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

		};

	}
});

$.ui.plugin.add("draggable", "stack", {
	start: function(event, ui) {

		var o = $(this).data("draggable").options;

		var group = $.makeArray($(o.stack.group)).sort(function(a,b) {
			return (parseInt($(a).css("zIndex"),10) || o.stack.min) - (parseInt($(b).css("zIndex"),10) || o.stack.min);
		});

		$(group).each(function(i) {
			this.style.zIndex = o.stack.min + i;
		});

		this[0].style.zIndex = o.stack.min + group.length;

	}
});

$.ui.plugin.add("draggable", "zIndex", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data("draggable").options;
		if(t.css("zIndex")) o._zIndex = t.css("zIndex");
		t.css('zIndex', o.zIndex);
	},
	stop: function(event, ui) {
		var o = $(this).data("draggable").options;
		if(o._zIndex) $(ui.helper).css('zIndex', o._zIndex);
	}
});

})(jQuery);
// jQuery Alert Dialogs Plugin
//
// Version 1.1
//
// Cory S.N. LaViska
// A Beautiful Site (http://abeautifulsite.net/)
// 14 May 2009
//
// Mike Walters - mikewaltersphp@gmail.com
// 27 December 2011
//
// Visit http://abeautifulsite.net/notebook/87 for more information
//
// Usage:
//		jAlert( message, [title, callback] )
//		jConfirm( message, [title, callback] )
//		jPrompt( message, [value, title, callback] )
// 
// History:
//
//		1.00 - Released (29 December 2008)
//
//		1.01 - Fixed bug where unbinding would destroy all resize events
//
//		DECEMBER 2011 - added ability to popup multiple alerts (mike walters)
//
// License:
// 
// This plugin is dual-licensed under the GNU General Public License and the MIT License and
// is copyright 2008 A Beautiful Site, LLC. 
//
(function($) {
	
	$.alerts = {
		
		// These properties can be read/written by accessing $.alerts.propertyName from your scripts at any time
		
		verticalOffset: -75,                // vertical offset of the dialog from center screen, in pixels
		horizontalOffset: 0,                // horizontal offset of the dialog from center screen, in pixels/
		repositionOnResize: true,           // re-centers the dialog on window resize
		overlayOpacity: .33,                // transparency level of overlay
		overlayColor: '#000000',               // base color of overlay
		draggable: true,                    // make the dialogs draggable (requires UI Draggables plugin)
		okButton: '&nbsp;OK&nbsp;',         // text for the OK button
		cancelButton: '&nbsp;Cancel&nbsp;', // text for the Cancel button
		dialogClass: null,                  // if specified, this class will be applied to all dialogs
		yesButton: '&nbsp;Yes&nbsp;',       // text for the Yes button
		noButton: '&nbsp;No&nbsp;',			// text for the No button
		waitingCalls: new Array(),

		raiseNextDialog: function() {
			$.alerts.callIsActive = false;
			if ($.alerts.waitingCalls.length>0) {
				var params = $.alerts.waitingCalls.shift();
				$.alerts._show(params[0], params[1], params[2], params[3], params[4], params[5]);
			}
		},
		
		dialogShallWait: function (title, msg, value, type, callback,classname) {
			if ($.alerts.callIsActive) {
				$.alerts.waitingCalls.push([title, msg, value, type, callback,classname]);
				return true; // can't show now
			} else {
				$.alerts.callIsActive = true;
				return false;
			}
		},

		// Public methods
		
		alert: function(message, title,classname, callback) {
			if( title == null ) title = 'Alert';

			$.alerts._show(title, message, null, 'alert', function(result) {
				if( callback ) callback(result);
			},classname);
		},
		
		confirm: function(message, title, callback,classname) {
			if( title == null ) title = 'Confirm';
			$.alerts._show(title, message, null, 'confirm', function(result) {
				if( callback ) callback(result);
			},classname);
		},
		confirmYesNo: function(message, title, callback) {
			if( title == null ) title = 'Confirm';
			$.alerts._show(title, message, null, 'confirmYesNo', function(result) {
				if( callback ) callback(result);
			});
		},	
		
		prompt: function(message, value, title, callback,textarea) {
			if( title == null ) title = 'Prompt';
			$.alerts._show(title, message, value, 'prompt', function(result) {
				if( callback ) callback(result);
			},'','','',textarea);
		},
		window: function(url,  title, callback,height,width) {
			//alert('height:'+height+'width:'+width);
			if( title == null ) title = '';
			$.alerts._show(title, url,'', 'window', function() {
				if( callback ) callback();
			},'',height,width);
		},
		// Private methods
		
		_show: function(title, msg, value, type, callback,classname,height,width,textarea) {
  		   
  		   	if(type!='window'){
			 if ( $.alerts.dialogShallWait(title, msg, value, type, callback,classname) )
			   { return;}
			}
			
			$.alerts._hide();
			$.alerts._overlay('show');
			
			$("BODY").append(
			  '<div id="popup_container">' +
			    '<h1 id="popup_title"></h1>' +
			    '<div id="popup_content">' +
			      '<div id="popup_message"></div>' +
				'</div>' +
			  '</div>');
			
			if( $.alerts.dialogClass ) $("#popup_container").addClass($.alerts.dialogClass);
			
			// IE6 Fix
			var pos = ($.browser.msie && parseInt($.browser.version) <= 8 ) ? 'absolute' : 'fixed'; 
			
			$("#popup_container").css({
				position: pos,
				zIndex: 99999,
				padding: 0,
				margin: 0
			});
			
			$("#popup_title").html(title+"<span id=\"closeicon\" style=\"float: right; margin-right: 4px;cursor:pointer;\" onclick=\"$.alerts._hide();$.alerts.raiseNextDialog();\">X</span></h1>");
			$("#popup_content").addClass(type);
			
			if(type!='window'){
				$("#popup_message").text(msg);
				$("#popup_container").css({
					minWidth: $("#popup_container").outerWidth(),
					maxWidth: $("#popup_container").outerWidth(),
					width:'100%'
				});
			}else{
				//alert(width);
				var iframeHeigh;
				if(height.indexOf('px')>0){
					height = height.replace('px','');
					iframeHeigh = height-35;
					iframeHeigh = iframeHeigh+'px';
					height = height+'px';
				}
				var url = '<iframe style="width:'+width+';height:'+iframeHeigh+';background-color:transparent;" scrolling="no" frameborder="0" allowtransparency="true" id="popupFrame" name="popupFrame" src=\''+ msg +'\'</iframe>';								
				$("#popup_message").text(url);
				$("#popup_container").css({
					minWidth: width,
					maxHeight: height,
					width:width
				});
				$("#popup_content").css({
					padding: 0,
					minWidth: width,
					maxHeight: height,
					width:'100%'
				});
				$("#popup_message").css({
					height: height,
					width : width
				});
			}
			
			$("#popup_message").html( $("#popup_message").text().replace(/\n/g, '<br />') );
			var ie = false;
			if (document.all && !document.addEventListener) {
				ie = true;
			}
			if(!ie){
				$("#popup_container").css({
					minWidth: $("#popup_container").outerWidth(),
					maxWidth: $("#popup_container").outerWidth()
				});
			}else{
				if($("#popup_container").outerWidth()>600){
					$("#popup_container").css({
						width: $("#popup_container").outerWidth()/2
					});
				}else{
					$("#popup_container").css({
						minWidth: $("#popup_container").outerWidth(),
						maxWidth: $("#popup_container").outerWidth()
					});
				}
			}
			$.alerts._reposition(type);
			$.alerts._maintainPosition(true);
			
			switch( type ) {
				case 'alert':
					$("#popup_message").after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /></div>');
					
					$("#popup_ok").click( function() {
						$.alerts._hide();
						callback(true);
						$.alerts.raiseNextDialog();
					});
					$("#popup_ok").focus().keypress( function(e) {
						if( e.keyCode == 13 || e.keyCode == 27 ) $("#popup_ok").trigger('click');
					});
				break;
				case 'confirm':
					$("#popup_message").after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.cancelButton + '" id="popup_cancel" /></div>');
					$("#popup_ok").click( function() {
						$.alerts._hide();
						if( callback ) callback(true);
						$.alerts.raiseNextDialog();
					});
					$("#popup_cancel").click( function() {
						$.alerts._hide();
						if( callback ) callback(false);
						$.alerts.raiseNextDialog();
					});
					$("#popup_ok").focus();
					$("#popup_ok, #popup_cancel").keypress( function(e) {
						if( e.keyCode == 13 ) $("#popup_ok").trigger('click');
						if( e.keyCode == 27 ) $("#popup_cancel").trigger('click');
					});
				break;
				case 'confirmYesNo':
					$("#popup_message").after('<div id="popup_panel"><input type="button" value="' + $.alerts.yesButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.noButton + '" id="popup_cancel" /></div>');
					$("#popup_ok").click( function() {
						$.alerts._hide();
						if( callback ) callback(true);
						$.alerts.raiseNextDialog();
					});
					$("#popup_cancel").click( function() {
						$.alerts._hide();
						if( callback ) callback(false);
						$.alerts.raiseNextDialog();
					});
					$("#popup_ok").focus();
					$("#popup_container").scrollTop(0); //B23419
					$("#popup_ok, #popup_cancel").keypress( function(e) {
						if( e.keyCode == 13 ) $("#popup_ok").trigger('click');
						if( e.keyCode == 27 ) $("#popup_cancel").trigger('click');
					});
				break;
				case 'prompt':
					//alert(textarea);
					if(textarea){
						$("#popup_message").append('<br /><textarea size="30" id="popup_prompt" rows="4" cols="50" style="resize:none"></textarea>').after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.cancelButton + '" id="popup_cancel" /></div>');
					}else{
					  $("#popup_message").addClass("alertprompt");
					  $("#popup_message").append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.cancelButton + '" id="popup_cancel" /></div>');
					}
					$("#popup_prompt").width( $("#popup_message").width() );
					$("#popup_ok").click( function() {
						var val = $("#popup_prompt").val();
						$.alerts._hide();
						if( callback ) callback( val );
						$.alerts.raiseNextDialog();
					});
					$("#popup_cancel").click( function() {
						$.alerts._hide();
						if( callback ) callback( null );
						$.alerts.raiseNextDialog();
					});
					$("#popup_prompt, #popup_ok, #popup_cancel").keypress( function(e) {
						//if( e.keyCode == 13 ) $("#popup_ok").trigger('click');
						//if( e.keyCode == 27 ) $("#popup_cancel").trigger('click');
					});
					if( value ) $("#popup_prompt").val(value);
					$("#popup_prompt").focus().select();
				break;
				case 'window':
					$("#popup_message").append('<br />').after('<div id="popup_panel"></div>');
					if($.blockUI){
						$.blockUI({ message: '' });(null);
					}					
				break;
			}
			if(classname=='alertsuccess'){
				$("#popup_container").addClass("alertsuccess");
				$("#popup_title").addClass("alertsuccess");
				$("#popup_ok").addClass("alertsuccess");
				$("#popup_message").addClass("alertsuccess");
			}else if(classname=='alerterror'){
				$("#popup_container").addClass("alerterror");
				$("#popup_title").addClass("alerterror");
				$("#popup_ok").addClass("alerterror");
				$("#popup_message").addClass("alerterror");
			}else if(classname=='alertwarning'){
				$("#popup_container").addClass("alertwarning");
				$("#popup_title").addClass("alertwarning");
				$("#popup_ok").addClass("alertwarning");
				$("#popup_message").addClass("alertwarning");
			}
			// Make draggable
			if( $.alerts.draggable ) {
				try {
					$("#popup_container").draggable({ handle: $("#popup_title") ,containment: "parent",delay: 4 });
					$("#popup_title").css({ cursor: 'move' });
				} catch(e) { /* requires jQuery UI draggables */ }
			}
		},
		
		_hide: function() {
			$("#popup_container").remove();
			$.alerts._overlay('hide');
			$.alerts._maintainPosition(false);
			if($.unblockUI){
				$.unblockUI();
			}
		},
		
		_overlay: function(status) {
			switch( status ) {
				case 'show':
					$.alerts._overlay('hide');
					$("BODY").append('<div id="popup_overlay"></div>');
					$("#popup_overlay").css({
						position: 'absolute',
						zIndex: 99998,
						top: '0px',
						left: '0px',
						width: '100%',
						height: $(document).height(),
						background: $.alerts.overlayColor,
						opacity: $.alerts.overlayOpacity
					});
				break;
				case 'hide':
					$("#popup_overlay").remove();
				break;
			}
		},
		
		_reposition: function(type) {
			var top = (($(window).height() / 2) - ($("#popup_container").outerHeight() / 2)) + $.alerts.verticalOffset;
			var left = (($(window).width() / 2) - ($("#popup_container").outerWidth() / 2)) + $.alerts.horizontalOffset;
			if( top < 0 ) top = 0;
			if( left < 0 ) left = 0;
			
			// IE6 fix
			if( $.browser.msie && parseInt($.browser.version) <= 6 ) top = top + $(window).scrollTop();
			
			// added for B23419: added code to show scroll bar for lengthy messages
			var maxHeight = 250;						
			var msgHeight = $("#popup_message").outerHeight();
			if(msgHeight > maxHeight){			
				msgHeight = maxHeight ;
				if(type!='window'){
				 $("#popup_message").css({
					height: maxHeight,
					overflow : 'auto'
				 });
			  }
			
			}	
			// end changes for B23419			
			
			$("#popup_container").css({
				top: top + 'px',
				left: left + 'px'
			});		
			$("#popup_overlay").height( $(document).height() );			
		},
		
		_maintainPosition: function(status) {
			if( $.alerts.repositionOnResize ) {
				switch(status) {
					case true:
						$(window).bind('resize', $.alerts._reposition);
					break;
					case false:
						$(window).unbind('resize', $.alerts._reposition);
					break;
				}
			}
		}
		
	}
	
	// Shortuct functions
	jAlert = function(message, title,classname, callback) {
		$.alerts.alert(message, title,classname, callback);
	}
	
	jConfirm = function(message, title, callback,classname) {
		$.alerts.confirm(message, title, callback,classname);
	};
	jConfirmYesNo = function(message, title, callback) {
		$.alerts.confirmYesNo(message, title, callback);
	};
		
	jPrompt = function(message, value, title, callback,textarea) {
		//alert("jPrompt:"+textarea);
		$.alerts.prompt(message, value, title, callback,textarea);
	};
	jWindow = function(url, title, callback,height,width) {
		$.alerts.window(url, title, callback,height,width);
	};
	
})(jQuery);
